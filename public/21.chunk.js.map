{"version":3,"sources":["C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates-action/affiliates-action.component.html","C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates-action/affiliates-action.component.ts","C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates-list/affiliates-list.component.html","C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates-list/affiliates-list.component.ts","C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates.component.html","C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates.component.ts","C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates.module.ts"],"names":[],"mappings":"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","file":"21.chunk.js","sourcesContent":["module.exports = \"<form #modelForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 margin-bottom-40\\\">\\r\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-md no-margin-left\\\">\\r\\n            <mat-icon>keyboard_arrow_left</mat-icon> Regresar\\r\\n        </button>\\r\\n    </div>\\r\\n    <!-- document_type_id -->\\r\\n    <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\"><mat-select required class=\\\"full-width\\\" placeholder=\\\"Tipo de identificaciÃ³n\\\" [(ngModel)]=\\\"model.document_type_id\\\" name=\\\"document_type_id\\\"\\r\\n            id=\\\"document_type_id\\\">\\r\\n            <mat-option *ngFor=\\\"let item of arrDocument_type\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select></mat-form-field>\\r\\n    </div>\\r\\n    <!-- document_number -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-3 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input required type=\\\"text\\\" id=\\\"document_number\\\" name=\\\"document_number\\\" [(ngModel)]=\\\"model.document_number\\\" matInput placeholder=\\\"IdentificaciÃ³n\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <!-- estado -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-3 margin-bottom'>\\r\\n        <div class=\\\"flex\\\">\\r\\n            <span class=\\\"flex-spacer\\\"></span>\\r\\n            <mat-slide-toggle [labelPosition]=\\\"'before'\\\" id=\\\"state\\\" name=\\\"state\\\" [(ngModel)]=\\\"model.state\\\">Estado</mat-slide-toggle>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\"></div>\\r\\n    <!-- firstname -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-3 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input required type=\\\"text\\\" id=\\\"firstname\\\" name=\\\"firstname\\\" [(ngModel)]=\\\"model.firstname\\\" matInput placeholder=\\\"Nombres\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <!-- middlename -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-3 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"middlename\\\" name=\\\"middlename\\\" [(ngModel)]=\\\"model.middlename\\\" matInput>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <!-- lastname1 -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-3 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input required type=\\\"text\\\" id=\\\"lastname1\\\" name=\\\"lastname1\\\" [(ngModel)]=\\\"model.lastname1\\\" matInput placeholder=\\\"Apellidos\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <!-- lastname2 -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-3 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"lastname2\\\" name=\\\"lastname2\\\" [(ngModel)]=\\\"model.lastname2\\\" matInput>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\"></div>\\r\\n    <!-- birthday -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-3 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input matInput [matDatepicker]=\\\"pickerIssueDate5\\\" id=\\\"birthday\\\" name=\\\"birthday\\\" placeholder=\\\"Fecha de nacimiento\\\" [(ngModel)]=\\\"model.birthday\\\">\\r\\n            <!-- <button mdSuffix [matDatepicker]=\\\"pickerIssueDate5\\\"></button> -->\\r\\n        </mat-form-field>\\r\\n        <mat-datepicker #pickerIssueDate5></mat-datepicker>\\r\\n    </div>\\r\\n    <!-- gender_id -->\\r\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-3 margin-bottom\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\"><mat-select class=\\\"full-width\\\" placeholder=\\\"GÃ©nero\\\" [(ngModel)]=\\\"model.gender_id\\\" name=\\\"gender_id\\\" id=\\\"gender_id\\\">\\r\\n            <mat-option *ngFor=\\\"let item of arrGender\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select></mat-form-field>\\r\\n    </div>\\r\\n    <!-- phone_number -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-3 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input NumberOnly required type=\\\"text\\\" id=\\\"phone_number\\\" name=\\\"phone_number\\\" [(ngModel)]=\\\"model.phone_number\\\" matInput placeholder=\\\"TelÃ©fono\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <!-- mobile_number -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-3 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input NumberOnly required type=\\\"text\\\" id=\\\"mobile_number\\\" name=\\\"mobile_number\\\" [(ngModel)]=\\\"model.mobile_number\\\" matInput placeholder=\\\"Celular\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\"></div>\\r\\n    <!-- address -->\\r\\n    <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input required type=\\\"text\\\" id=\\\"address\\\" name=\\\"address\\\" [(ngModel)]=\\\"model.address\\\" matInput placeholder=\\\"DirecciÃ³n\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <!-- conutry -->\\r\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-3 margin-bottom\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\"><mat-select [disabled]=\\\"arrDepartment.length == 0\\\" class=\\\"full-width\\\" placeholder=\\\"Departamento\\\" [(ngModel)]=\\\"model.department\\\"\\r\\n            name=\\\"department\\\" id=\\\"department\\\" (change)=\\\"loadCity()\\\">\\r\\n            <mat-option *ngFor=\\\"let item of arrDepartment\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select></mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <!-- conutry -->\\r\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-3 margin-bottom\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\"><mat-select [disabled]=\\\"arrCity.length == 0\\\" class=\\\"full-width\\\" placeholder=\\\"Ciudad\\\" [(ngModel)]=\\\"model.city\\\" name=\\\"city\\\"\\r\\n            id=\\\"city\\\" (change)=\\\"booGeolocation=true\\\">\\r\\n            <mat-option *ngFor=\\\"let item of arrCity\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select></mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\"></div>\\r\\n    <!-- attendant_name -->\\r\\n    <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input required type=\\\"text\\\" id=\\\"attendant_name\\\" name=\\\"attendant_name\\\" [(ngModel)]=\\\"model.attendant_name\\\" matInput placeholder=\\\"Nombre acudiente\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <!-- attendant_phone_number -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-3 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input NumberOnly required type=\\\"text\\\" id=\\\"attendant_phone_number\\\" name=\\\"attendant_phone_number\\\" [(ngModel)]=\\\"model.attendant_phone_number\\\"\\r\\n                matInput placeholder=\\\"TelÃ©fono acudiente\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <!-- attendant_mobile_number -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-3 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input NumberOnly required type=\\\"text\\\" id=\\\"attendant_mobile_number\\\" name=\\\"attendant_mobile_number\\\" [(ngModel)]=\\\"model.attendant_mobile_number\\\"\\r\\n                matInput placeholder=\\\"Celular acudiente\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\"></div>\\r\\n    <!-- delivery_contract_id -->\\r\\n    <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\"><mat-select class=\\\"full-width\\\" placeholder=\\\"Contrato\\\" [(ngModel)]=\\\"model.delivery_contract_id\\\" name=\\\"delivery_contract_id\\\" id=\\\"delivery_contract_id\\\">\\r\\n            <mat-option *ngFor=\\\"let item of arrDelivery_contract\\\" [value]=\\\"item.id\\\" (click)=\\\"loadIpsNetword(item)\\\">{{item.name}}</mat-option>\\r\\n        </mat-select></mat-form-field>\\r\\n    </div>\\r\\n    <!-- contracts_payment_method_id -->\\r\\n    <!--div class=\\\"col-sm-12 col-md-6 col-lg-3 margin-bottom\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\"><mat-select class=\\\"full-width\\\" placeholder=\\\"Modalidad de contrataciÃ³n\\\" [(ngModel)]=\\\"model.contracts_payment_method_id\\\" name=\\\"contracts_payment_method_id\\\"\\r\\n            id=\\\"contracts_payment_method_id\\\">\\r\\n            <mat-option *ngFor=\\\"let item of arrContracts_payment_method\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select></mat-form-field>\\r\\n    </div-->\\r\\n    <!-- affiliate_condition_id -->\\r\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-3 margin-bottom\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\"><mat-select class=\\\"full-width\\\" placeholder=\\\"CondiciÃ³n de afiliado\\\" [(ngModel)]=\\\"model.affiliate_condition_id\\\" name=\\\"affiliate_condition_id\\\"\\r\\n            id=\\\"affiliate_condition_id\\\">\\r\\n            <mat-option *ngFor=\\\"let item of arrAffiliate_condition\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select></mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\"></div>\\r\\n    <!-- ips_network_id -->\\r\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-4 margin-bottom\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\"><mat-select class=\\\"full-width\\\" placeholder=\\\"Red adscrita\\\" [(ngModel)]=\\\"model.ips_network_id\\\" name=\\\"ips_network_id\\\" id=\\\"ips_network_id\\\">\\r\\n            <mat-option *ngFor=\\\"let item of arrIps_network\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select></mat-form-field>\\r\\n    </div>\\r\\n    <!-- affiliate_level -->\\r\\n    <div class='col-sm-12 col-md-6 col-lg-2 margin-bottom'>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input required type=\\\"text\\\" id=\\\"affiliate_level\\\" name=\\\"affiliate_level\\\" [(ngModel)]=\\\"model.affiliate_level\\\" matInput placeholder=\\\"Nivel de afiliado\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <!-- affiliate_type -->\\r\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-3 margin-bottom\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\"><mat-select class=\\\"full-width\\\" placeholder=\\\"Tipo de afiliado\\\" [(ngModel)]=\\\"model.affiliate_type\\\" name=\\\"affiliate_type\\\" id=\\\"affiliate_type\\\">\\r\\n            <mat-option *ngFor=\\\"let item of arrAffiliate_type\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select></mat-form-field>\\r\\n    </div>\\r\\n    <!-- public_health_condition_id -->\\r\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-3 margin-bottom\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\"><mat-select class=\\\"full-width\\\" placeholder=\\\"CondiciÃ³n de salud pÃºblica\\\" [(ngModel)]=\\\"model.public_health_condition_id\\\" name=\\\"public_health_condition_id\\\"\\r\\n            id=\\\"public_health_condition_id\\\">\\r\\n            <mat-option *ngFor=\\\"let item of arrPublic_health_condition\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select></mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <button [disabled]=\\\"action_active ? false : !modelForm.form.valid\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\"\\r\\n            (click)=\\\"save()\\\">{{strAction}}</button>\\r\\n    </div>\\r\\n</div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates-action/affiliates-action.component.html\n// module id = ../../../../../src/app/smartity/affiliates/affiliates-action/affiliates-action.component.html\n// module chunks = 21","import { Component, OnInit, ViewChild, Output, EventEmitter, Input } from \"@angular/core\";\nimport { DataTableResource } from \"angular-4-data-table\";\nimport { FormControl } from \"@angular/forms\";\nimport \"rxjs/add/operator/startWith\";\nimport { AuthenticationService } from \"../../../auth/authentication.service\";\nimport { MatSnackBar, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseModel } from '../../bases/base-model';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { Response } from '@angular/http';\nimport { ModalWarehouseComponent } from '../../modals/modal-warehouse/modal-warehouse.component';\nimport { filter } from 'rxjs/operators';\nimport { ModalUsersComponent } from '../../modals/modal-users/modal-users.component';\nimport { AffiliatesComponent } from '../affiliates.component';\n\n@Component({\n    selector: \"affiliates-action-cmp\",\n    templateUrl: \"affiliates-action.component.html\"\n})\n\nexport class AffiliatesActionComponent extends BaseModel implements OnInit {\n\n    private arrDocument_type: any = [];\n    private arrGender: any = [];\n    private arrDelivery_contract: any = [];\n    private arrContracts_payment_method: any = [];\n    private arrAffiliate_condition: any = [];\n    private arrIps_network: any = [];\n    private arrAffiliate_type: any = [];\n    private arrPublic_health_condition: any = [];\n    private arrDepartment: any = [];\n    private arrCity: any = [];\n    private booGeolocation: boolean = false;\n\n\n\n    private arrDelivery_point_group: Array<any> = [];\n    private action_active: boolean;\n    //private str_action: string = 'Guardar';\n\n\n    constructor(public snackBar: MatSnackBar,\n        private route: ActivatedRoute,\n        private router: Router,\n        private loaderService: LoaderService,\n        private helperService: HelperService,\n        private comp: AffiliatesComponent,\n        private dialog: MatDialog\n    ) {\n        super();\n\n    }\n\n\n    ngOnInit() {\n\n        this.clean();\n        this.getCollection();\n        this.loadDepartment();\n\n\n        switch (this.strAction) {\n            case 'Guardar':\n                this.loadDeliveryContract();\n                break;\n            case 'Actualizar':\n            case 'Eliminar':\n                this.getDataById();\n                break;\n        }\n    }\n\n    private getCollection() {\n        this.helperService.POST(`/api/collections`, [\n            \"TYPES_OF_DOCUMENTS\",\n            \"PAYMENT_METHOD\",\n            \"AFFILIATE_TYPE\",\n            \"AFFILIATE_CONDITION\",\n            \"PUBLIC_HEALTH_CONDITION\",\n            \"GENDER\"\n        ]).subscribe(rs => {\n            let res = rs.json();\n            this.arrDocument_type = res.TYPES_OF_DOCUMENTS;\n            this.arrGender = res.GENDER;\n            this.arrContracts_payment_method = res.PAYMENT_METHOD;\n            this.arrAffiliate_type = res.AFFILIATE_TYPE;\n            this.arrAffiliate_condition = res.AFFILIATE_CONDITION;\n            this.arrPublic_health_condition = res.PUBLIC_HEALTH_CONDITION;\n\n        }, err => { console.log(err); });\n    }\n\n    private loadDepartment() {\n        this.arrCity = [];\n        this.booGeolocation = false;\n        this.helperService.GET(`/api/departamentos?pais_id=7`).subscribe(rs => {\n            let res = rs.json();\n            this.arrDepartment = res.departamentos;\n        }, err => {\n            console.log(err);\n        });\n    }\n\n    private loadCity() {\n        this.helperService.GET(`/api/ciudades?departamento_id=${this.model.department}`).subscribe(rs => {\n            let res = rs.json();\n            this.arrCity = res.ciudades;\n            this.model.city = this.model.geolocation.city;\n        }, err => {\n            console.log(err);\n        });\n    }\n\n    private loadDeliveryContract() {\n        this.helperService.GET(`/api/delivery-contracts`).subscribe(rs => {\n            let res = rs.json();\n            this.arrDelivery_contract = res.data;\n        }, err => {\n            console.log(err);\n        });\n    }\n\n    private save() {\n        this.loaderService.display(true);\n\n        this.model.geolocation = JSON.stringify({\n            \"department\": this.model.department,\n            \"city\": this.model.city\n        });\n        switch (this.strAction) {\n            case 'Guardar':\n                this.model.delivery_contracts = '';\n\n                this.helperService.POST(`/api/affiliates`, this.model).subscribe(rs => {\n                    let res = rs.json();\n                    if (res.store) {\n                        this.snackBar.open(res.message, 'Guardado', { duration: 3500 });\n                        this.clean();\n                        this.loaderService.display(false);\n                        this.comp.openList();\n                    }\n                }, err => {\n                    this.loaderService.display(false);\n                });\n                break;\n            case 'Actualizar':\n                this.helperService.PUT(`/api/affiliates/${this.numId}`, this.model).subscribe(rs => {\n                    let res = rs.json();\n                    if (res.update) {\n                        this.snackBar.open(res.message, 'ActualizaciÃ³n', {\n                            duration: 3500,\n                        });\n                        this.comp.openList();\n                    }\n                }, err => {\n                    this.loaderService.display(false);\n                });\n                break;\n            case 'Eliminar':\n                this.helperService.DELETE(`/api/affiliates/${this.numId}`).subscribe(rs => {\n                    let res = rs.json();\n                    if (res.delete) {\n                        this.snackBar.open(res.message, 'EliminaciÃ³n', {\n                            duration: 3500,\n                        });\n                        this.comp.openList();\n                    }\n                }, err => {\n                    this.loaderService.display(false);\n                });\n                break;\n        }\n\n\n    }\n\n    private getDataById(): void {\n        this.helperService.GET(`/api/delivery-contracts`).subscribe(rs => {\n            let res = rs.json();\n            this.arrDelivery_contract = res.data;\n            this.loaderService.display(true);\n            this.helperService.GET(`/api/affiliates/${this.numId}`)\n                .map((response: Response) => {\n                    let res = response.json();\n                    this.model = res.data;\n                    this.model.geolocation = JSON.parse(this.model.geolocation);\n                    this.model.department = this.model.geolocation.department;\n                    this.loadCity();\n                    this.loadIpsNetword(this.arrDelivery_contract.filter(x => x.id == this.model.delivery_contract_id)[0]);\n                }).subscribe(error => {\n                    this.loaderService.display(false);\n                }, done => {\n                    this.loaderService.display(false);\n                });\n\n        }, err => {\n            console.log(err);\n        });\n    }\n\n    private clean() {\n        this.model = {};\n        this.model.geolocation = {};\n        this.model.state = true;\n    }\n\n    private goList() {\n        this.comp.openList();\n    }\n\n    private loadIpsNetword(item) {\n        this.arrIps_network = item.ips;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates-action/affiliates-action.component.ts","module.exports = \"<!-- LIST -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\" (keydown)=\\\"enter($event)\\\">\\n            <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\n                <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\n                    <i class=\\\"fa fa-search\\\"></i>\\n                </a>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\" *ngIf=\\\"!noaction\\\">\\n        <button *ngIf=\\\"actions[0].status\\\" mat-raised-button (click)=\\\"NEW()\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">\\n            <mat-icon>add_circle_outline</mat-icon> Nuevo\\n        </button>\\n    </div>\\n\\n    <div class=\\\"col-sm-12\\\">\\n\\n        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n\\n            <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\n                <thead>\\n                    <tr>\\n                        <!-- <th class=\\\"noAuto\\\" (click)=\\\"sort('id')\\\">ID\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th> -->\\n                        <th (click)=\\\"sort('document_type_id')\\\">IdentificaciÃ³n\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='document_type_id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th (click)=\\\"sort('contract')\\\">Contrato\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='contract'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <!--th (click)=\\\"sort('contract')\\\">Modalidad\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='contract'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th-->\\n                        <th (click)=\\\"sort('state')\\\">Estado\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='ct.state'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\"></th>\\n                        <th *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\"></th>\\n                    </tr>\\n                </thead>\\n                <tbody *ngIf=\\\"list.data\\\">\\n                    <tr *ngFor=\\\"let item of list.data\\\">\\n                        <td class=\\\"noAuto\\\">{{ item.document_number }}</td>\\n                        <td>{{ item.display_name }}</td>\\n                        <td>{{ item.contract }}</td>\\n                        <!--td>{{item.contracts_payment_method}}</td-->\\n                        <td>{{ item.state ? 'Activo' : 'Inactiva' }}</td>\\n                        <td *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\">\\n                            <button type=\\\"button\\\" mat-icon-button class=\\\"text-primary\\\" (click)=\\\"view(item,'Actualizar')\\\">\\n                                <mat-icon>mode_edit</mat-icon>\\n                            </button>\\n                        </td>\\n                        <td *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\">\\n                            <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"view(item, 'Eliminar')\\\">\\n                                <mat-icon>delete</mat-icon>\\n                            </button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n\\n        </div>\\n\\n        <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"maxSize\\\"\\n            [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates-list/affiliates-list.component.html\n// module id = ../../../../../src/app/smartity/affiliates/affiliates-list/affiliates-list.component.html\n// module chunks = 21","import { Component, OnInit, ViewChild, Output, Input, EventEmitter } from \"@angular/core\";\nimport { DataTableResource } from \"angular-4-data-table\";\nimport { FormControl } from \"@angular/forms\";\nimport \"rxjs/add/operator/startWith\";\nimport { MatSnackBar } from \"@angular/material\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseList } from '../../bases/base-list';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { Response } from '@angular/http';\nimport { AffiliatesComponent } from '../affiliates.component';\n\n@Component({\n    selector: \"affiliates-list-cmp\",\n    templateUrl: \"affiliates-list.component.html\",\n})\n\nexport class AffiliatesListComponent extends BaseList implements OnInit {\n\n    constructor(public router: Router,\n        public loaderService: LoaderService,\n        public helperService: HelperService,\n        private comp: AffiliatesComponent) {\n        super(loaderService, helperService);\n        this.urlApi = '/api/affiliates';\n    }\n\n    ngOnInit() {\n        this.getAll();\n    }\n\n    private NEW(row: any) {\n        this.comp.openActions();\n        this.comp.id = '';\n        this.comp.strAction = 'Guardar';\n    }\n\n    private view(row: any, action: string) {\n        this.comp.id = row.id;\n        this.comp.strAction = action;\n        this.comp.openActions();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates-list/affiliates-list.component.ts","module.exports = \"<section class=\\\"chapter\\\">\\n    <section class=\\\"hero\\\">\\n        <div class=\\\"hero-content\\\">\\n            <h1 class=\\\"hero-title\\\">Afiliados</h1>\\n        </div>\\n        <p class=\\\"hero-tagline\\\"></p>\\n    </section>\\n    <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\n        <div class=\\\"container-fluid with-maxwidth\\\">\\n            <div class=\\\"box box-default\\\">\\n                <div class=\\\"box-body\\\">\\n\\n                    <affiliates-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\" [strAction]='strAction'></affiliates-action-cmp>\\n\\n                    <affiliates-list-cmp *ngIf=\\\"isOpenList\\\"></affiliates-list-cmp>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </article>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates.component.html\n// module id = ../../../../../src/app/smartity/affiliates/affiliates.component.html\n// module chunks = 21","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { DataTableResource } from \"angular-4-data-table\";\nimport { FormControl } from \"@angular/forms\";\nimport { Base } from '../bases/base';\n\n@Component({\n    selector: \"affiliates-cmp\",\n    templateUrl: \"affiliates.component.html\",\n    styles: []\n})\n\nexport class AffiliatesComponent extends Base implements OnInit {\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AffiliatesComponent } from './affiliates.component';\nimport { AffiliatesListComponent } from './affiliates-list/affiliates-list.component';\nimport { AffiliatesActionComponent } from './affiliates-action/affiliates-action.component';\n\nconst routes: Routes = [{ path: '', component: AffiliatesComponent }];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        SharedModule,\n        NgbModule.forRoot()\n    ],\n    declarations: [\n        AffiliatesComponent,\n        AffiliatesListComponent,\n        AffiliatesActionComponent\n    ]\n})\nexport class AffiliatesModule {\n}\n\n\n// WEBPACK FOOTER //\n// C:/angularprojects/javelin/src/app/smartity/affiliates/affiliates.module.ts"],"sourceRoot":"webpack:///"}