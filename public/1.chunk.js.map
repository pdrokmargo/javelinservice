{"version":3,"sources":["C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/user-action/user-action.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/user-action/user-action.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/user-list/user-list.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/user-list/user-list.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/users.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/users.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/users.module.ts"],"names":[],"mappings":"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","file":"1.chunk.js","sourcesContent":["module.exports = \"<form #modelForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-md no-margin-left\\\">\\r\\n                <mat-icon>keyboard_arrow_left</mat-icon> Regresar\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"flex\\\">\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <mat-slide-toggle checked=\\\"true\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"_model.user.status\\\"> Estado </mat-slide-toggle>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--user.firstname-->\\r\\n        <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"firstname\\\" name=\\\"firstname\\\" [(ngModel)]=\\\"_model.user.firstname\\\" matInput placeholder=\\\"Nombres\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!--user.lastname-->\\r\\n        <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"lastname\\\" name=\\\"lastname\\\" [(ngModel)]=\\\"_model.user.lastname\\\" matInput placeholder=\\\"Apellidos\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input #email=\\\"ngModel\\\" [userEmailValid]=\\\"ref\\\" [pattern]=\\\"emailPattern\\\" required type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"_model.user.email\\\"\\r\\n                    matInput placeholder=\\\"Correo electrónico\\\">\\r\\n                <mat-error *ngIf=\\\"email.errors?.userEmailValid\\\">Correo electrónico ya se encuentra registrado en el sistema</mat-error>\\r\\n                <mat-error *ngIf=\\\"email.errors?.pattern\\\">Formato errado</mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!--user.username-->\\r\\n        <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input autocomplete=\\\"nope\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" required type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\"\\r\\n                    [(ngModel)]=\\\"_model.user.username\\\" matInput placeholder=\\\"Nombre de Usuario\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- user.password -->\\r\\n        <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\" *ngIf=\\\"strAction == 'Guardar'\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input autocomplete=\\\"new-password\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" required type=\\\"password\\\" id=\\\"password\\\"\\r\\n                    name=\\\"password\\\" [(ngModel)]=\\\"_model.user.password\\\" matInput placeholder=\\\"Contraseña\\\" reverse=\\\"true\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"add-company-panel\\\">\\r\\n            <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n                <h3>Añadir Empresa</h3>\\r\\n            </div>\\r\\n            <!-- company -->\\r\\n            <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n                    <mat-form-field class=\\\"full-width\\\"><mat-select class=\\\"full-width\\\" placeholder=\\\"Empresa\\\" [(ngModel)]=\\\"company_userprofile.company\\\" name=\\\"company_id\\\" id=\\\"company_id\\\">\\r\\n                    <mat-option *ngFor=\\\"let item of companies\\\" [value]=\\\"item\\\" [hidden]=\\\"item.hide\\\">{{item.name}}</mat-option>\\r\\n                </mat-select></mat-form-field>\\r\\n            </div>\\r\\n            <!-- user profile -->\\r\\n            <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n                    <mat-form-field class=\\\"full-width\\\"><mat-select class=\\\"full-width\\\" placeholder=\\\"Perfil de usuario\\\" [(ngModel)]=\\\"company_userprofile.userprofile\\\" name=\\\"user_profile_id\\\"\\r\\n                    id=\\\"user_profile_id\\\">\\r\\n                    <mat-option *ngFor=\\\"let item of userprofiles\\\" [value]=\\\"item\\\">{{item.up_description}}</mat-option>\\r\\n                </mat-select></mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-md-4 margin-bottom\\\">\\r\\n                <div class=\\\"flex\\\">\\r\\n                    <span class=\\\"flex-spacer\\\"></span>\\r\\n                    <button [disabled]=\\\"!(company_userprofile.company && company_userprofile.userprofile)\\\" type=\\\"button\\\" mat-raised-button color=\\\"primary\\\"\\r\\n                        class=\\\"btn-w-md no-margin-left\\\" (click)=\\\"addCompany()\\\">Añadir</button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                    <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Empresa</th>\\r\\n                                <th>Perfil de Usuario</th>\\r\\n                                <th class=\\\"w-108\\\"></th>\\r\\n                                <th class=\\\"w-40\\\"></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let item of _model.userprofiles\\\">\\r\\n                                <td>{{ item.company_name }}</td>\\r\\n                                <td>{{ item.user_profile_description }}</td>\\r\\n                                <td class=\\\"w-108\\\">\\r\\n                                    <button *ngIf=\\\"!item.default\\\" type=\\\"button\\\" mat-button (click)=\\\"isDefault(item)\\\">\\r\\n                                        <span style=\\\"color: #bfbaba\\\">Default</span>\\r\\n                                    </button>\\r\\n                                    <button *ngIf=\\\"item.default\\\" type=\\\"button\\\" mat-raised-button mat-button (click)=\\\"isDefault(item)\\\" color=\\\"primary\\\"> Default </button>\\r\\n                                </td>\\r\\n                                <td class=\\\"w-40\\\" title=\\\"Remover empresa\\\">\\r\\n                                    <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"removeCompany(item)\\\">\\r\\n                                        <mat-icon>delete</mat-icon>\\r\\n                                    </button>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <button type=\\\"button\\\" [disabled]=\\\"!modelForm.form.valid\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\"\\r\\n                (click)=\\\"save()\\\">{{strAction}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/user-action/user-action.component.html\n// module id = ../../../../../src/app/smartity/users/user-action/user-action.component.html\n// module chunks = 1","import { Component, OnInit, ViewChild, Output, Input, EventEmitter, ElementRef } from '@angular/core';\nimport { DataTableResource } from 'angular-4-data-table';\nimport { FormControl, NgControl } from '@angular/forms';\nimport 'rxjs/add/operator/startWith';\nimport { MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseModel } from '../../bases/base-model';\nimport { UsersComponent } from '../users.component';\nimport { Response } from '@angular/http';\nimport { HelperService, LoaderService } from '../../../shared';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n    selector: 'user-action-cmp',\n    templateUrl: 'user-action.component.html',\n    styles: [\n        `.add-company-panel {\n            width: 100%;\n            max-width: 700px;\n            margin: 15px auto;\n            box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n            padding: 20px 0;\n            border-radius: 4px;\n        }\n        .add-company-panel h3 {\n            color: #b7b7b7;\n            margin-top: 0;\n            font-size: 1.8em;\n        }\n        `\n    ]\n})\n\nexport class UserActionComponent extends BaseModel implements OnInit {\n\n    private _model: any = {\n        user: {\n            status: true\n        },\n        userprofiles: []\n    }\n\n    private ref = undefined;\n    private companies: any[] = [];\n    private userprofiles: any[] = [];\n    private company_userprofile: any = {};\n    private booEmail: boolean;\n    private booEmailValid: boolean = false;\n    private emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n\n    constructor(public loaderService: LoaderService,\n        public helperService: HelperService,\n        public snackBar: MatSnackBar,\n        private route: ActivatedRoute,\n        private router: Router,\n        private comp: UsersComponent) {\n        super();\n\n    }\n\n    ngOnInit() {\n        this.getUserProfiles();\n        this.getCompanies();\n\n        if (this.numId != undefined) {\n            this.getDataById();\n        }\n    }\n\n    private getUserProfiles() {\n        this.helperService.GET(`/api/userprofile?all=1`).subscribe(rs => {\n            const res = rs.json();\n            this.userprofiles = res.data;\n        }, err => {\n            console.log(err);\n        });\n    }\n\n    private getCompanies() {\n        this.helperService.GET(`/api/company`).subscribe(rs => {\n            const res = rs.json();\n            this.companies = res['data'];\n        }, err => {\n            console.log(err);\n\n        });\n    }\n\n    private save() {\n        if (this._model.userprofiles.length === 0) {\n            this.snackBar.open('El usuario debe estar vinculado por lo menos a una empresa', 'Error', {\n                duration: 4000,\n            });\n            return false;\n        }\n\n        this._model.userprofiles.map(x => {\n            if (x.default) {\n                this._model.user.company_default_id = x.company_id;\n                this._model.user.user_profile_id = x.user_profile_id;\n            }\n        });\n\n\n        this.loaderService.display(true);\n        switch (this.strAction) {\n            case 'Guardar':\n                this.helperService.POST(`/api/users`, this._model).subscribe(rs => {\n                    const res = rs.json();\n                    if (res.store) {\n                        this.snackBar.open(res.message, 'Guardado', { duration: 4000 });\n                        this.goList();\n                    }\n                }, err => {\n                    this.loaderService.display(false);\n                    this.snackBar.open(err.message, 'Guardado', { duration: 4000 });\n                });\n                break;\n            case 'Actualizar':\n                this.helperService.PUT(`/api/users/${this.numId}`, this._model).subscribe(rs => {\n                    const res = rs.json();\n                    if (res.update) {\n                        this.snackBar.open(res.message, 'Actualización', { duration: 4000 });\n                        this.comp.openList();\n                    }\n                }, err => {\n                    this.loaderService.display(false);\n                    this.snackBar.open(err.message, 'Actualización', { duration: 4000 });\n                });\n                break;\n            case 'Eliminar':\n                this.helperService.DELETE(`/api/users/${this.numId}`).subscribe(rs => {\n                    const res = rs.json();\n                    if (res.delete) {\n                        this.snackBar.open(res.message, 'Eliminación', { duration: 4000 });\n                        this.comp.openList();\n                    }\n                }, err => {\n                    this.loaderService.display(false);\n                    this.snackBar.open(err.message, 'Eliminación', { duration: 4000 });\n                });\n                break;\n        }\n\n    }\n\n    private getDataById(): void {\n        this.loaderService.display(true);\n        this.helperService.GET(`/api/users/${this.numId}`).subscribe(rs => {\n            let res = rs.json();\n            this.ref = res.data.user.email;\n            this._model = res.data;\n            this._model.userprofiles.map(x => {\n                x.default = false;\n                if (x.company_id == this._model.user.company_default_id) {\n                    x.default = true;\n                }\n            });\n            this.loaderService.display(false);\n        }, err => {\n            this.loaderService.display(false);\n            console.log(err);\n        });\n    }\n    private isDefault(item) {\n        this._model.userprofiles.map(x => {\n            x.default = false\n        });\n        item.default = true;\n    }\n    private addCompany() {\n\n        var cu_relation: any = {\n            company_id: this.company_userprofile.company.id,\n            company_name: this.company_userprofile.company.name,\n            user_profile_id: this.company_userprofile.userprofile.id,\n            user_profile_description: this.company_userprofile.userprofile.up_description,\n            default: false\n        };\n\n\n        if (this._model.userprofiles.length == 0) {\n            cu_relation.default = true;\n            this._addCompany(cu_relation);\n        } else {\n            var exist = false;\n            this._model.userprofiles.forEach((element, index) => {\n                if (element.company_id == cu_relation.company_id) {\n                    exist = true;\n                }\n                if (index == this._model.userprofiles.length - 1) {\n                    if (!exist) {\n                        this._addCompany(cu_relation);\n                    } else {\n                        this.snackBar.open('El usuario ya tiene un perfil registrado en esta empresa', 'Error', {\n                            duration: 4000,\n                        });\n                    }\n                }\n            });\n\n        }\n    }\n    private _addCompany(data) {\n        this._model.userprofiles.push(data);\n        this.company_userprofile = {};\n    }\n\n    private removeCompany(obj: any) {\n        if (this._model.userprofiles.length > 0) {\n            if (obj.default) {\n                this._model.userprofiles[0].default = true;\n            }\n        }\n        this._model.userprofiles.splice(this._model.userprofiles.indexOf(obj), 1);\n    }\n\n    private goList() {\n        this.comp.openList();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/user-action/user-action.component.ts","module.exports = \"    <!-- LIST -->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\" (keydown)=\\\"enter($event)\\\">\\n                <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\n                    <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\n                        <i class=\\\"fa fa-search\\\"></i>\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <button *ngIf=\\\"actions[0].status\\\" mat-raised-button (click)=\\\"CUD('Guardar')\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">\\n                <mat-icon>add_circle_outline</mat-icon> Nuevo\\n            </button>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n\\n                <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\n                    <thead>\\n                        <tr>\\n                            <th class=\\\"noAuto\\\" (click)=\\\"sort('u.id')\\\">ID\\n                                <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='u.id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('username')\\\">Nombre de Usuario\\n                                <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='username'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('firstname')\\\">Nombre\\n                                <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='firstname'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('up_description')\\\">Perfil de Usuario\\n                                <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='up_description'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('c.name')\\\">Empresa\\n                                <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='c.name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <!--th (click)=\\\"sort('last_access')\\\">Ultimo Acceso\\n                                <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='last_access'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th-->\\n                            <th (click)=\\\"sort('u.status')\\\">Estado\\n                                <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='u.status'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\"></th>\\n                            <th *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\"></th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let item of list.data\\\">\\n                            <td class=\\\"noAuto\\\">{{ item.id }}</td>\\n                            <td>{{ item.username }}</td>\\n                            <td>{{ item.firstname + ' ' + item.lastname }}</td>\\n                            <td>{{ item.user_profile }}</td>\\n                            <td>{{ item.company }}</td>\\n                            <!--td>{{ item.last_access }}</td-->\\n                            <td>{{ item.status ? 'Activo' : 'Inactivo' }}</td>\\n                            <td *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\">\\n                                <button type=\\\"button\\\" mat-icon-button class=\\\"text-primary\\\" (click)=\\\"CUD('Actualizar',item)\\\">\\n                                    <mat-icon>mode_edit</mat-icon>\\n                                </button>\\n                            </td>\\n                            <td *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\">\\n                                <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"CUD('Eliminar',item)\\\">\\n                                    <mat-icon>delete</mat-icon>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n\\n            </div>\\n\\n            <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"maxSize\\\"\\n                [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\n\\n        </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/user-list/user-list.component.html\n// module id = ../../../../../src/app/smartity/users/user-list/user-list.component.html\n// module chunks = 1","import { Component, OnInit, ViewChild, Output, Input, EventEmitter } from '@angular/core';\nimport { DataTableResource } from 'angular-4-data-table';\nimport { FormControl } from '@angular/forms';\nimport 'rxjs/add/operator/startWith';\nimport { AuthenticationService } from '../../../auth/authentication.service';\nimport { MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseList } from '../../bases/base-list';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { UsersComponent } from '../users.component';\n\n@Component({\n    selector: 'user-list-cmp',\n    templateUrl: 'user-list.component.html',\n    styles: []\n})\n\nexport class UserListComponent extends BaseList implements OnInit {\n\n    constructor(\n        public loaderService: LoaderService,\n        public helperService: HelperService,\n        public router: Router,\n        private comp: UsersComponent\n    ) {\n        super(loaderService, helperService);\n        this.urlApi = '/api/users';\n    }\n\n    ngOnInit() {\n        this.getAll();\n    }\n\n    private CUD(action:string, row?:any){\n        this.comp.strAction = action;\n        switch (action) {\n            case 'Guardar':\n                this.comp.id = undefined;\n                break;\n            default:\n                this.comp.id = row.id;\n                break;\n        }\n        this.comp.openActions();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/user-list/user-list.component.ts","module.exports = \"<section class=\\\"chapter\\\">\\n    <section class=\\\"hero\\\">\\n        <div class=\\\"hero-content\\\">\\n            <h1 class=\\\"hero-title\\\">Usuarios</h1>\\n        </div>\\n        <p class=\\\"hero-tagline\\\">\\n            A través de esta opción, usted podrá administrar los usuario que acceden al sistema y definir perfiles que permitan limitar\\n            el uso de las vistas no autorizadas.\\n        </p>\\n    </section>\\n    <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\n        <div class=\\\"container-fluid with-maxwidth\\\">\\n            <div class=\\\"box box-default\\\">\\n                <div class=\\\"box-body\\\">\\n                    <user-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\" [strAction]=\\\"strAction\\\"></user-action-cmp>\\n                    <user-list-cmp *ngIf=\\\"isOpenList\\\"></user-list-cmp>\\n                </div>\\n            </div>\\n        </div>\\n    </article>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/users.component.html\n// module id = ../../../../../src/app/smartity/users/users.component.html\n// module chunks = 1","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Base } from '../bases/base';\n\n@Component({\n    selector: 'users-cmp',\n    templateUrl: 'users.component.html',\n    styles: []\n})\n\nexport class UsersComponent extends Base implements  OnInit{\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/users.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { UsersComponent } from './users.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UserActionComponent } from './user-action/user-action.component';\nimport { UserListComponent } from './user-list/user-list.component';\n\nconst routes: Routes = [{ path: '', component: UsersComponent }];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        SharedModule,\n        NgbModule.forRoot()\n    ],\n    declarations: [\n        UsersComponent,\n        UserActionComponent,\n        UserListComponent\n    ]\n})\nexport class UsersModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/users/users.module.ts"],"sourceRoot":"webpack:///"}