{"version":3,"sources":["/Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company-action/company-action.component.html","/Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company-action/company-action.component.ts","/Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company-list/company-list.component.html","/Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company-list/company-list.component.ts","/Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company.component.html","/Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company.component.ts","/Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company.module.ts"],"names":[],"mappings":"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","file":"20.chunk.js","sourcesContent":["module.exports = \"<form #companyForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-md no-margin-left\\\">\\r\\n                    <mat-icon>keyboard_arrow_left</mat-icon> Regresar\\r\\n                </button>\\r\\n            </div>\\r\\n        \\r\\n            <!-- name -->\\r\\n            <div class=\\\"col-sm-12 col-md-8 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input required name=\\\"name\\\" [(ngModel)]=\\\"model.name\\\" matInput placeholder=\\\"Nombre\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- nit -->\\r\\n            <div class=\\\"col-sm-12 col-md-4 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input required name=\\\"nit\\\" [(ngModel)]=\\\"model.nit\\\" matInput placeholder=\\\"Nit\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- description -->\\r\\n            <div class=\\\"col-sm-12 col-md-8 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input required type=\\\"text\\\" name=\\\"description\\\" [(ngModel)]=\\\"model.description\\\" matInput placeholder=\\\"Descripción\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- email -->\\r\\n            <div class=\\\"col-sm-12 col-md-4 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input required type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" matInput placeholder=\\\"Correo Eletrónico\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!--country -->\\r\\n            <div class=\\\"col-sm-12 col-md-4 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select class=\\\"full-width\\\" placeholder=\\\"País\\\" [(ngModel)]=\\\"model.country_id\\\"\\r\\n                        name=\\\"country_id\\\" (change)=\\\"getDepartments()\\\" id=\\\"country_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let item of countries\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- department -->\\r\\n            <div class=\\\"col-sm-12 col-md-4 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select class=\\\"full-width\\\" placeholder=\\\"Departamento\\\" [(ngModel)]=\\\"model.department_id\\\"\\r\\n                        name=\\\"department_id\\\" (change)=\\\"getCities()\\\" id=\\\"department_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let item of departments\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!--city -->\\r\\n            <div class=\\\"col-sm-12 col-md-4 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select class=\\\"full-width\\\" placeholder=\\\"Ciudad\\\" [(ngModel)]=\\\"model.city_id\\\"\\r\\n                        name=\\\"city_id\\\" id=\\\"city_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let item of cities\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- address -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input required type=\\\"text\\\" id=\\\"address\\\" name=\\\"address\\\" [(ngModel)]=\\\"model.address\\\" matInput placeholder=\\\"Dirección\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- website -->\\r\\n            <div class=\\\"col-sm-12 col-md-3 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input required type=\\\"text\\\" id=\\\"website\\\" name=\\\"website\\\" [(ngModel)]=\\\"model.website\\\" matInput placeholder=\\\"Sitio web\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- phone number -->\\r\\n            <div class=\\\"col-sm-12 col-md-3 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input NumberOnly required type=\\\"text\\\" id=\\\"phone_number\\\" name=\\\"phone_number\\\" [(ngModel)]=\\\"model.phone_number\\\" matInput placeholder=\\\"Teléfono\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <span class=\\\"col-sm-12\\\"></span>\\r\\n            <!-- economic activity -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input required type=\\\"text\\\" id=\\\"economic_activity\\\" name=\\\"economic_activity\\\" [(ngModel)]=\\\"model.economic_activity\\\" matInput\\r\\n                        placeholder=\\\"Actividad económica\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <!-- tax regimen -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select class=\\\"full-width\\\" placeholder=\\\"Tipo de régimen\\\" [(ngModel)]=\\\"model.tax_regime_id\\\"\\r\\n                        name=\\\"tax_regime_id\\\" id=\\\"tax_regime_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let item of tax_regime\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- withholding_income_sales_id -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select class=\\\"full-width\\\" placeholder=\\\"Reterenta en Ventas\\\" [(ngModel)]=\\\"model.withholding_income_sales_id\\\"\\r\\n                        name=\\\"withholding_income_sales_id\\\" id=\\\"withholding_income_sales_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let i of withholding\\\" [value]=\\\"i.id\\\">{{i.value}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- withholding_income_purchases_id -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select class=\\\"full-width\\\" placeholder=\\\"Reterenta en compras\\\" [(ngModel)]=\\\"model.withholding_income_purchases_id\\\"\\r\\n                        name=\\\"withholding_income_purchases_id\\\" id=\\\"withholding_income_purchases_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let item of withholding\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- withholding_vat_sales_id -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select class=\\\"full-width\\\" placeholder=\\\"Reteiva en Ventas\\\" [(ngModel)]=\\\"model.withholding_vat_sales_id\\\"\\r\\n                        name=\\\"withholding_vat_sales_id\\\" id=\\\"withholding_vat_sales_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let item of withholding\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- withholding_vat_purchases_id -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select class=\\\"full-width\\\" placeholder=\\\"Reteiva en compras\\\" [(ngModel)]=\\\"model.withholding_vat_purchases_id\\\"\\r\\n                        name=\\\"withholding_vat_purchases_id\\\" id=\\\"withholding_vat_purchases_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let item of withholding\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- withholding_vat_sales_id -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select class=\\\"full-width\\\" placeholder=\\\"Reteica en Ventas\\\" [(ngModel)]=\\\"model.withholding_ica_sales_id\\\"\\r\\n                        name=\\\"withholding_ica_sales_id\\\" id=\\\"withholding_ica_sales_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let item of withholding\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- withholding_vat_purchases_id -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select class=\\\"full-width\\\" placeholder=\\\"Reteica en compras\\\" [(ngModel)]=\\\"model.withholding_ica_purchases_id\\\"\\r\\n                        name=\\\"withholding_ica_purchases_id\\\" id=\\\"withholding_ica_purchases_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let item of withholding\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <!-- big_contributor -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-slide-toggle [labelPosition]=\\\"after\\\" id=\\\"big_contributor\\\" name=\\\"big_contributor\\\" [(ngModel)]=\\\"model.big_contributor\\\">Gran\\r\\n                    contribuyente</mat-slide-toggle>\\r\\n            </div>\\r\\n        \\r\\n            <!-- selfholder -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-slide-toggle [labelPosition]=\\\"after\\\" id=\\\"selfholder\\\" name=\\\"selfholder\\\" [(ngModel)]=\\\"model.selfholder\\\">Autoretenedor</mat-slide-toggle>\\r\\n            </div>\\r\\n        \\r\\n            <!-- big_contributor_resolution -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\" *ngIf=\\\"model.big_contributor\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input required type=\\\"text\\\" id=\\\"big_contributor_resolution\\\" name=\\\"big_contributor_resolution\\\" [(ngModel)]=\\\"model.big_contributor_resolution\\\"\\r\\n                        matInput placeholder=\\\"Resolución No.\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        \\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <button [disabled]=\\\"!companyForm.form.valid\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\"\\r\\n                    (click)=\\\"save()\\\">{{strAction}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company-action/company-action.component.html\n// module id = ../../../../../src/app/smartity/company/company-action/company-action.component.html\n// module chunks = 20","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { DataTableResource } from 'angular-4-data-table';\nimport { FormControl } from '@angular/forms';\nimport 'rxjs/add/operator/startWith';\nimport { MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { Response } from '@angular/http';\nimport { CompanyComponent } from '../company.component';\nimport { BaseModel } from '../../bases/base-model';\nimport { read } from 'fs';\n\n@Component({\n  selector: 'company-action-cmp',\n  templateUrl: './company-action.component.html',\n  styles: []\n})\nexport class CompanyActionComponent extends BaseModel implements OnInit {\n  private countries: any[] = [];\n  private departments: any[] = [];\n  private cities: any[] = [];\n  private tax_regime: any[] = [];\n  private withholding: any[] = [];\n\n  constructor(\n    private loaderService: LoaderService,\n    private helperService: HelperService,\n    public snackBar: MatSnackBar,\n    private route: ActivatedRoute,\n    private router: Router,\n    private comp: CompanyComponent\n  ) {\n    super();\n    // paramatro enviado desde la url\n  }\n\n  ngOnInit() {\n    this.clean();\n    this.getCollection();\n\n    if (this.numId != undefined) {\n      this.getDataById();\n    }\n  }\n\n  /**\n   * get the country and the tax regime with the collection of names\n   */\n  private getCollection() {\n    this.helperService\n      .POST(`/api/collections`, ['COUNTRIES', 'TAX_REGIME', 'WITHHOLDING_TYPE'])\n      .map((response: Response) => {\n        const res = response.json();\n        this.countries = res.COUNTRIES;\n        this.tax_regime = res.TAX_REGIME;\n        this.withholding = res.WITHHOLDING_TYPE;\n      })\n      .subscribe(\n        (error) => {\n          // this.loaderService.display(false);\n        },\n        (done) => {\n          // this.loaderService.display(false);\n        }\n      );\n  }\n\n  private getDepartments() {\n    this.loaderService.display(true);\n    this.helperService\n      .GET(`/api/departamentos?pais_id=${this.model.country_id}`)\n      .map((response: Response) => {\n        const res = response.json();\n        this.departments = res['departamentos'];\n      })\n      .subscribe(\n        (error) => {\n          this.loaderService.display(false);\n        },\n        (done) => {\n          this.loaderService.display(false);\n        }\n      );\n  }\n\n  private getCities() {\n    this.loaderService.display(true);\n    this.helperService\n      .GET(`/api/ciudades?departamento_id=${this.model.department_id}`)\n      .map((response: Response) => {\n        const res = response.json();\n        this.cities = res['ciudades'];\n      })\n      .subscribe(\n        (error) => {\n          this.loaderService.display(false);\n        },\n        (done) => {\n          this.loaderService.display(false);\n        }\n      );\n  }\n\n  private save() {\n    this.loaderService.display(true);\n    switch (this.strAction) {\n      case 'Guardar':\n        this.helperService.POST(`/api/company`, this.model).subscribe(rs => {\n          let res = rs.json();\n          if (res.store) {\n            this.snackBar.open(res.message, 'Guardado', { duration: 4000 });\n            this.comp.openList();\n            this.loaderService.display(false);\n          }\n        }, err => {\n          this.snackBar.open(err.message, 'Guardado', { duration: 4000 });\n          this.loaderService.display(false);\n        });\n        break;\n      case 'Actualizar':\n        this.helperService.PUT(`/api/company/${this.numId}`, this.model).subscribe(rs => {\n          let res = rs.json();\n          if (res.update) {\n            this.snackBar.open(res.message, 'Actualización', { duration: 4000 });\n            this.comp.openList();\n            this.loaderService.display(false);\n          }\n        }, err => {\n          this.snackBar.open(err.message, 'Actualización', { duration: 4000 });\n          this.loaderService.display(false);\n        });\n        break;\n      case 'Eliminar':\n        this.helperService.DELETE(`/api/company/${this.numId}`).subscribe(rs => {\n          let res = rs.json();\n          if (res.delete) {\n            this.snackBar.open(res.message, 'Eliminación', { duration: 4000 });\n            this.comp.openList();\n            this.loaderService.display(false);\n          }\n        }, err => {\n          this.snackBar.open(err.message, 'Eliminación', { duration: 4000 });\n          this.loaderService.display(false);\n        });\n        break;\n    }\n\n    /** Update */\n    if (this.model.id > 0) {\n      this.loaderService.display(true);\n      this.helperService\n        .PUT(`/api/company/${this.numId}`, this.model)\n        .map((response: Response) => {\n          const res = response.json();\n          if (res.status === 'success') {\n            this.snackBar.open(res.message, 'Actualización', {\n              duration: 3500\n            });\n            // this.router.navigate(['app/company-list']);\n            this.comp.openList();\n          }\n        })\n        .subscribe(\n          (error) => {\n            this.loaderService.display(false);\n          },\n          (done) => {\n            this.loaderService.display(false);\n          }\n        );\n    } else {\n      /** Create */\n\n    }\n  }\n\n  private getDataById(): void {\n    this.loaderService.display(true);\n    this.helperService\n      .GET(`/api/company/${this.numId}`)\n      .map((response: Response) => {\n        const res = response.json();\n        this.model = res['data'];\n        this.departments.push(this.model.geolocation.department);\n        this.cities.push(this.model.geolocation.city);\n        this.model.country_id = this.model.geolocation.country_id;\n        this.model.department_id = this.model.geolocation.department_id;\n        this.model.city_id = this.model.geolocation.city_id;\n      })\n      .subscribe(\n        (error) => {\n          this.loaderService.display(false);\n        },\n        (done) => {\n          this.loaderService.display(false);\n        }\n      );\n  }\n\n  private clean() {\n    this.cities = [];\n    this.departments = [];\n    this.model = {};\n    this.model.big_contributor = true;\n    this.model.selfholder = true;\n  }\n\n  private goList() {\n    this.comp.openList();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company-action/company-action.component.ts","module.exports = \"<!-- LIST -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\" (keydown)=\\\"enter($event)\\\">\\n            <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\n                <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\n                    <i class=\\\"fa fa-search\\\"></i>\\n                </a>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <button *ngIf=\\\"actions[0].status\\\" mat-raised-button (click)=\\\"CUD('Guardar')\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">\\n            <mat-icon>add_circle_outline</mat-icon> Nuevo\\n        </button>\\n    </div>\\n\\n    <div class=\\\"col-sm-12\\\">\\n\\n        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n\\n            <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\n                <thead>\\n                    <tr>\\n                        <th class=\\\"noAuto\\\" (click)=\\\"sort('id')\\\">ID\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th (click)=\\\"sort('nit')\\\">Nit\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='nit'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th (click)=\\\"sort('name')\\\">Nombre de Empresa\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th class=\\\"noAuto\\\" (click)=\\\"sort('state')\\\">Estado\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='state'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\"></th>\\n                        <th *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\"></th>\\n\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let item of list.data\\\">\\n                        <td class=\\\"noAuto\\\">{{ item.id }}</td>\\n                        <td>{{ item.nit }}</td>\\n                        <td>{{ item.name }}</td>\\n                        <td class=\\\"noAuto\\\">{{ item.state ? 'Activa' : 'Inactiva' }}</td>\\n                        <td *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\">\\n                            <button type=\\\"button\\\" mat-icon-button class=\\\"text-primary\\\" (click)=\\\"CUD('Actualizar', item)\\\">\\n                                <mat-icon>mode_edit</mat-icon>\\n                            </button>\\n                        </td>\\n                        <td *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\">\\n                            <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"CUD('Eliminar',item)\\\">\\n                                <mat-icon>delete</mat-icon>\\n                            </button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n\\n        </div>\\n        <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"6\\\" [rotate]=\\\"true\\\"\\n            [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company-list/company-list.component.html\n// module id = ../../../../../src/app/smartity/company/company-list/company-list.component.html\n// module chunks = 20","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataTableResource } from 'angular-4-data-table';\nimport { FormControl } from '@angular/forms';\nimport 'rxjs/add/operator/startWith';\nimport { MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseList } from '../../bases/base-list';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { Response } from '@angular/http';\nimport { CompanyComponent } from '../company.component';\n\n@Component({\n  selector: 'company-list-cmp',\n  templateUrl: 'company-list.component.html',\n  styles: []\n})\nexport class CompanyListComponent extends BaseList implements OnInit {\n  constructor(\n    public loaderService: LoaderService,\n    public helperService: HelperService,\n    public router: Router,\n    private comp: CompanyComponent\n  ) {\n    super(loaderService, helperService);\n    this.urlApi = '/api/company';\n  }\n\n  ngOnInit() {\n    this.getAll();\n  }\n\n  private CUD(action:string, row?:any){\n    this.comp.strAction = action;\n    switch (action) {\n        case 'Guardar':\n            this.comp.id = undefined;\n            break;\n        default:\n            this.comp.id = row.id;\n            break;\n    }\n    this.comp.openActions();\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company-list/company-list.component.ts","module.exports = \"<section class=\\\"chapter\\\">\\n    <section class=\\\"hero\\\">\\n        <div class=\\\"hero-content\\\">\\n            <h1 class=\\\"hero-title\\\">Empresas</h1>\\n        </div>\\n        <p class=\\\"hero-tagline\\\">A través de esta opción, usted podrá crear las empresa de las cuales son necesarias para...</p>\\n    </section>\\n    <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\n        <div class=\\\"container-fluid with-maxwidth\\\">\\n            <div class=\\\"box box-default\\\">\\n                <div class=\\\"box-body\\\">\\n                   \\n                    <company-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\" [strAction]=\\\"strAction\\\"></company-action-cmp>\\n                    <company-list-cmp *ngIf=\\\"isOpenList\\\"></company-list-cmp>\\n                   \\n                </div>               \\n            </div>\\n        </div>\\n    </article>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company.component.html\n// module id = ../../../../../src/app/smartity/company/company.component.html\n// module chunks = 20","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataTableResource } from 'angular-4-data-table';\nimport { FormControl } from '@angular/forms';\nimport 'rxjs/add/operator/startWith';\nimport { MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoaderService, HelperService } from '../../shared';\nimport { Response } from '@angular/http';\nimport { Base } from '../bases/base';\n\n@Component({\n    selector: 'company-cmp',\n    templateUrl: 'company.component.html',\n    styles: []\n})\n\nexport class CompanyComponent extends Base implements OnInit {\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { CompanyComponent } from './company.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CompanyActionComponent } from './company-action/company-action.component';\nimport { CompanyListComponent } from './company-list/company-list.component';\n\nconst routes: Routes = [{ path: '', component: CompanyComponent }];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    NgbModule.forRoot()\n  ],\n  declarations: [CompanyComponent, CompanyActionComponent, CompanyListComponent]\n})\nexport class CompanyModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/pedrocamargocotes/Projects/javelinservice/javelin/src/app/smartity/company/company.module.ts"],"sourceRoot":"webpack:///"}