{"version":3,"sources":["webpack:///5.fffbfb402a68a372c28e.chunk.js","webpack:///./src/app/smartity/delivery-contracts/delivery-contracts.module.ts","webpack:///./src/app/smartity/delivery-contracts/delivery-contracts.component.ts","webpack:///./src/app/smartity/delivery-contracts/delivery-contracts-action/delivery-contracts-action.component.ts","webpack:///./src/app/smartity/delivery-contracts/delivery-contracts-list/delivery-contracts-list.component.ts","webpack:///./src/app/smartity/delivery-contracts/delivery-contracts-action/delivery-contracts-action.component.html","webpack:///./src/app/smartity/delivery-contracts/delivery-contracts-list/delivery-contracts-list.component.html","webpack:///./src/app/smartity/delivery-contracts/delivery-contracts.component.html"],"names":["webpackJsonp","1412","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","d","DeliveryContractsModule","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_2__angular_common__","__WEBPACK_IMPORTED_MODULE_3__angular_router__","__WEBPACK_IMPORTED_MODULE_4__shared_shared_module__","__WEBPACK_IMPORTED_MODULE_5__ng_bootstrap_ng_bootstrap__","__WEBPACK_IMPORTED_MODULE_6__delivery_contracts_component__","__WEBPACK_IMPORTED_MODULE_7__delivery_contracts_action_delivery_contracts_action_component__","__WEBPACK_IMPORTED_MODULE_8__delivery_contracts_list_delivery_contracts_list_component__","routes","path","component","i","imports","forChild","forRoot","declarations","1427","DeliveryContractsComponent","__WEBPACK_IMPORTED_MODULE_2__bases_base__","_super","call","this","prototype","ngOnInit","selector","template","styles","1441","DeliveryContractsActionComponent","__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_startWith__","__WEBPACK_IMPORTED_MODULE_3__angular_material__","n","__WEBPACK_IMPORTED_MODULE_4__angular_router__","__WEBPACK_IMPORTED_MODULE_5__bases_base_model__","__WEBPACK_IMPORTED_MODULE_6__shared__","__WEBPACK_IMPORTED_MODULE_7__delivery_contracts_component__","__WEBPACK_IMPORTED_MODULE_8__modals_modal_costumers_modal_costumers_component__","__WEBPACK_IMPORTED_MODULE_9_rxjs_operators__","snackBar","route","router","loaderService","helperService","comp","dialog","_this","arrPopulation_type","costs_centres_groups","costs_centres_types","operations_costs_centres","str_action","booEvento","booCapita","booPgp","_model","delivery_contracts","state","pharmadrug_monopoly","pharmadrug_control","cooled_products","clean","getCollection","getCostCentres","numId","getDataById","POST","subscribe","rs","res","json","POPULATION_TYPE","err","GET","map","response","data","error","done","save","model","id","display","PUT","status","open","message","duration","openList","operation_cost_centre_id","root","goList","show","group","objEvent","objCapita","objPgp","openModalCostumers","modalCostumer","hasBackdrop","title","afterClosed","pipe","customers_id","customer","1442","DeliveryContractsListComponent","__WEBPACK_IMPORTED_MODULE_4__bases_base_list__","__WEBPACK_IMPORTED_MODULE_5__shared__","urlApi","getAll","NEW","row","openActions","view","1464","exports","1465","1466"],"mappings":"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","file":"5.fffbfb402a68a372c28e.chunk.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 1412:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DeliveryContractsModule\", function() { return DeliveryContractsModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_shared_module__ = __webpack_require__(283);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ng_bootstrap_ng_bootstrap__ = __webpack_require__(598);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__delivery_contracts_component__ = __webpack_require__(1427);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__delivery_contracts_action_delivery_contracts_action_component__ = __webpack_require__(1441);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__delivery_contracts_list_delivery_contracts_list_component__ = __webpack_require__(1442);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar routes = [{ path: '', component: __WEBPACK_IMPORTED_MODULE_6__delivery_contracts_component__[\"a\" /* DeliveryContractsComponent */] }];\r\nvar DeliveryContractsModule = /** @class */ (function () {\r\n    function DeliveryContractsModule() {\r\n    }\r\n    DeliveryContractsModule = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */]([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"])({\r\n            imports: [\r\n                __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"],\r\n                __WEBPACK_IMPORTED_MODULE_3__angular_router__[\"g\" /* RouterModule */].forChild(routes),\r\n                __WEBPACK_IMPORTED_MODULE_4__shared_shared_module__[\"a\" /* SharedModule */],\r\n                __WEBPACK_IMPORTED_MODULE_5__ng_bootstrap_ng_bootstrap__[\"a\" /* NgbModule */].forRoot()\r\n            ],\r\n            declarations: [\r\n                __WEBPACK_IMPORTED_MODULE_6__delivery_contracts_component__[\"a\" /* DeliveryContractsComponent */],\r\n                __WEBPACK_IMPORTED_MODULE_7__delivery_contracts_action_delivery_contracts_action_component__[\"a\" /* DeliveryContractsActionComponent */],\r\n                __WEBPACK_IMPORTED_MODULE_8__delivery_contracts_list_delivery_contracts_list_component__[\"a\" /* DeliveryContractsListComponent */]\r\n            ]\r\n        })\r\n    ], DeliveryContractsModule);\r\n    return DeliveryContractsModule;\r\n}());\r\n\r\n\n\n/***/ }),\n\n/***/ 1427:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DeliveryContractsComponent; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bases_base__ = __webpack_require__(190);\n\r\n\r\n\r\nvar DeliveryContractsComponent = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](DeliveryContractsComponent, _super);\r\n    function DeliveryContractsComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    DeliveryContractsComponent.prototype.ngOnInit = function () {\r\n    };\r\n    DeliveryContractsComponent = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */]([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Component\"])({\r\n            selector: \"delivery-contracts-cmp\",\r\n            template: __webpack_require__(1466),\r\n            styles: []\r\n        }),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __metadata */](\"design:paramtypes\", [])\r\n    ], DeliveryContractsComponent);\r\n    return DeliveryContractsComponent;\r\n}(__WEBPACK_IMPORTED_MODULE_2__bases_base__[\"a\" /* Base */]));\r\n\r\n\n\n/***/ }),\n\n/***/ 1441:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DeliveryContractsActionComponent; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_startWith__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_startWith___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_startWith__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_material__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__bases_base_model__ = __webpack_require__(189);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__delivery_contracts_component__ = __webpack_require__(1427);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__modals_modal_costumers_modal_costumers_component__ = __webpack_require__(599);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operators__ = __webpack_require__(284);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_operators___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_rxjs_operators__);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar DeliveryContractsActionComponent = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](DeliveryContractsActionComponent, _super);\r\n    function DeliveryContractsActionComponent(snackBar, route, router, loaderService, helperService, comp, dialog) {\r\n        var _this = _super.call(this) || this;\r\n        _this.snackBar = snackBar;\r\n        _this.route = route;\r\n        _this.router = router;\r\n        _this.loaderService = loaderService;\r\n        _this.helperService = helperService;\r\n        _this.comp = comp;\r\n        _this.dialog = dialog;\r\n        _this.arrPopulation_type = [];\r\n        _this.costs_centres_groups = [];\r\n        _this.costs_centres_types = [];\r\n        _this.operations_costs_centres = [];\r\n        _this.str_action = 'Guardar';\r\n        _this.booEvento = false;\r\n        _this.booCapita = false;\r\n        _this.booPgp = false;\r\n        _this._model = {\r\n            delivery_contracts: {\r\n                state: true,\r\n                pharmadrug_monopoly: false,\r\n                pharmadrug_control: false,\r\n                cooled_products: false\r\n            }\r\n        };\r\n        return _this;\r\n    }\r\n    DeliveryContractsActionComponent.prototype.ngOnInit = function () {\r\n        this.clean();\r\n        this.getCollection();\r\n        this.getCostCentres();\r\n        if (this.numId > 0) {\r\n            this.str_action = 'Actualizar';\r\n            this.getDataById();\r\n        }\r\n        else {\r\n            this.str_action = 'Guardar';\r\n        }\r\n    };\r\n    /**\r\n     * get the country and the tax regime with the collection of names\r\n     */\r\n    DeliveryContractsActionComponent.prototype.getCollection = function () {\r\n        var _this = this;\r\n        this.helperService.POST(\"/api/collections\", [\"POPULATION_TYPE\"]).subscribe(function (rs) {\r\n            var res = rs.json();\r\n            _this.arrPopulation_type = res.POPULATION_TYPE;\r\n        }, function (err) {\r\n        });\r\n    };\r\n    DeliveryContractsActionComponent.prototype.getCostCentres = function () {\r\n        var _this = this;\r\n        this.helperService.GET(\"/api/costs_centre/operations_costs_centre\")\r\n            .map(function (response) {\r\n            _this.operations_costs_centres = response.json().data;\r\n        }).subscribe(function (error) {\r\n            // this.loaderService.display(false);    \r\n        }, function (done) {\r\n            // this.loaderService.display(false);    \r\n        });\r\n    };\r\n    DeliveryContractsActionComponent.prototype.save = function () {\r\n        var _this = this;\r\n        /** Update */\r\n        if (this.model.id > 0) {\r\n            this.loaderService.display(true);\r\n            this.helperService.PUT(\"/api/costscentres/\" + this.numId, this.model)\r\n                .map(function (response) {\r\n                var res = response.json();\r\n                if (res.status == 'success') {\r\n                    _this.snackBar.open(res.message, 'Actualización', {\r\n                        duration: 3500,\r\n                    });\r\n                    // this.router.navigate(['app/costs-centres-list']);\r\n                    _this.comp.openList();\r\n                }\r\n            }).subscribe(function (error) {\r\n                _this.loaderService.display(false);\r\n            }, function (done) {\r\n                _this.loaderService.display(false);\r\n            });\r\n        }\r\n        else {\r\n            /**Create */\r\n            this.loaderService.display(true);\r\n            this.helperService.POST(\"/api/costscentres\", this.model)\r\n                .map(function (response) {\r\n                var res = response.json();\r\n                if (res.status == 'success') {\r\n                    _this.snackBar.open(res.message, 'Guardado', {\r\n                        duration: 3500,\r\n                    });\r\n                    _this.clean();\r\n                }\r\n            }).subscribe(function (error) {\r\n                _this.loaderService.display(false);\r\n            }, function (done) {\r\n                _this.loaderService.display(false);\r\n            });\r\n        }\r\n    };\r\n    DeliveryContractsActionComponent.prototype.getDataById = function () {\r\n        var _this = this;\r\n        this.loaderService.display(true);\r\n        this.helperService.GET(\"/api/costscentres/\" + this.numId)\r\n            .map(function (response) {\r\n            var res = response.json();\r\n            _this.model = res.data;\r\n            _this.model.operation_cost_centre_id = _this.model.root == true ? 'co-' + _this.model.operation_cost_centre_id : 'cc-' + _this.model.operation_cost_centre_id;\r\n        }).subscribe(function (error) {\r\n            _this.loaderService.display(false);\r\n        }, function (done) {\r\n            _this.loaderService.display(false);\r\n        });\r\n    };\r\n    DeliveryContractsActionComponent.prototype.clean = function () {\r\n        this.model = {};\r\n        this.model.state = true;\r\n    };\r\n    DeliveryContractsActionComponent.prototype.goList = function () {\r\n        this.comp.openList();\r\n    };\r\n    DeliveryContractsActionComponent.prototype.show = function (group) {\r\n        switch (group) {\r\n            case 'evento':\r\n                if (!this.booEvento) {\r\n                    this.objEvent = {};\r\n                }\r\n                break;\r\n            case 'capita':\r\n                if (!this.booCapita) {\r\n                    this.objCapita = {};\r\n                }\r\n                break;\r\n            case 'pgp':\r\n                if (!this.booPgp) {\r\n                    this.objPgp = {};\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    DeliveryContractsActionComponent.prototype.openModalCostumers = function () {\r\n        var _this = this;\r\n        this.modalCostumer = this.dialog.open(__WEBPACK_IMPORTED_MODULE_8__modals_modal_costumers_modal_costumers_component__[\"a\" /* ModalCostumersComponent */], {\r\n            hasBackdrop: false,\r\n            data: {\r\n                title: 'Clientes',\r\n            }\r\n        });\r\n        this.modalCostumer\r\n            .afterClosed()\r\n            .pipe(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9_rxjs_operators__[\"filter\"])(function (data) { return data; }))\r\n            .subscribe(function (data) {\r\n            _this.model.customers_id = data.id;\r\n            _this.customer = data;\r\n        });\r\n    };\r\n    DeliveryContractsActionComponent = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */]([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Component\"])({\r\n            selector: \"delivery-contracts-action-cmp\",\r\n            template: __webpack_require__(1464),\r\n            styles: []\r\n        }),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __metadata */](\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_3__angular_material__[\"c\" /* MdSnackBar */],\r\n            __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"b\" /* ActivatedRoute */],\r\n            __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"a\" /* Router */],\r\n            __WEBPACK_IMPORTED_MODULE_6__shared__[\"a\" /* LoaderService */],\r\n            __WEBPACK_IMPORTED_MODULE_6__shared__[\"b\" /* HelperService */],\r\n            __WEBPACK_IMPORTED_MODULE_7__delivery_contracts_component__[\"a\" /* DeliveryContractsComponent */],\r\n            __WEBPACK_IMPORTED_MODULE_3__angular_material__[\"d\" /* MdDialog */]])\r\n    ], DeliveryContractsActionComponent);\r\n    return DeliveryContractsActionComponent;\r\n}(__WEBPACK_IMPORTED_MODULE_5__bases_base_model__[\"a\" /* BaseModel */]));\r\n\r\n\n\n/***/ }),\n\n/***/ 1442:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DeliveryContractsListComponent; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_startWith__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_startWith___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_startWith__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__bases_base_list__ = __webpack_require__(145);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__delivery_contracts_component__ = __webpack_require__(1427);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar DeliveryContractsListComponent = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](DeliveryContractsListComponent, _super);\r\n    function DeliveryContractsListComponent(router, loaderService, helperService, comp) {\r\n        var _this = _super.call(this, loaderService, helperService) || this;\r\n        _this.router = router;\r\n        _this.loaderService = loaderService;\r\n        _this.helperService = helperService;\r\n        _this.comp = comp;\r\n        _this.urlApi = '/api/delivery-contracts';\r\n        return _this;\r\n    }\r\n    DeliveryContractsListComponent.prototype.ngOnInit = function () {\r\n        this.getAll();\r\n    };\r\n    DeliveryContractsListComponent.prototype.NEW = function (row) {\r\n        this.comp.openActions();\r\n        this.comp.id = 0;\r\n    };\r\n    DeliveryContractsListComponent.prototype.view = function (row) {\r\n        this.comp.openActions();\r\n        this.comp.id = row.id;\r\n    };\r\n    DeliveryContractsListComponent = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */]([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Component\"])({\r\n            selector: \"delivery-contracts-list-cmp\",\r\n            template: __webpack_require__(1465),\r\n            styles: []\r\n        }),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __metadata */](\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_3__angular_router__[\"a\" /* Router */],\r\n            __WEBPACK_IMPORTED_MODULE_5__shared__[\"a\" /* LoaderService */],\r\n            __WEBPACK_IMPORTED_MODULE_5__shared__[\"b\" /* HelperService */],\r\n            __WEBPACK_IMPORTED_MODULE_6__delivery_contracts_component__[\"a\" /* DeliveryContractsComponent */]])\r\n    ], DeliveryContractsListComponent);\r\n    return DeliveryContractsListComponent;\r\n}(__WEBPACK_IMPORTED_MODULE_4__bases_base_list__[\"a\" /* BaseList */]));\r\n\r\n\n\n/***/ }),\n\n/***/ 1464:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<form #modelForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\" [class.btn-action-container]=\\\"booActive\\\">\\r\\n            <button md-raised-button color=\\\"secundary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-md no-margin-left\\\">Regresar</button>\\r\\n        </div>\\r\\n        <!-- name -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"delivery_contracts_name\\\" name=\\\"delivery_contracts_name\\\" [(ngModel)]=\\\"model.name\\\"\\r\\n                    mdInput placeholder=\\\"Nombre\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- estado -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <div class=\\\"flex\\\">\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <md-slide-toggle [labelPosition]=\\\"'before'\\\" id=\\\"delivery_contracts_state\\\" name=\\\"delivery_contracts_state\\\" [(ngModel)]=\\\"model.state\\\">Estado</md-slide-toggle>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- cliente -->\\r\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-3 margin-bottom\\\">\\r\\n            <div class=\\\"box-header no-padding-h\\\">Cliente: {{model.costumer_id}}</div>\\r\\n            <button md-raised-button class=\\\"btn-w-md\\\" (click)=\\\"openModalCostumers()\\\">Seleccionar</button>\\r\\n        </div>\\r\\n        <!-- tipo de poblacion -->\\r\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-3 margin-bottom\\\">\\r\\n            <div style=\\\"height: 48px\\\"></div>\\r\\n            <md-select class=\\\"full-width\\\" placeholder=\\\"Tipo de población\\\" [(ngModel)]=\\\"model.population_type_id\\\"\\r\\n                name=\\\"delivery_contracts_population_type_id\\\" id=\\\"delivery_contracts_population_type_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of arrPopulation_type\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n            <div style=\\\"height: 48px;\\\"></div>\\r\\n            <div class=\\\"flex space-between\\\">\\r\\n                <md-checkbox id=\\\"evento\\\" name=\\\"evento\\\" [(ngModel)]=\\\"booEvento\\\" (click)=\\\"show('evento')\\\">Evento</md-checkbox>\\r\\n                <md-checkbox id=\\\"capita\\\" name=\\\"capita\\\" [(ngModel)]=\\\"booCapita\\\" (click)=\\\"show('capita')\\\">Cápita</md-checkbox>\\r\\n                <md-checkbox id=\\\"pgp\\\" name=\\\"pgp\\\" [(ngModel)]=\\\"booPgp\\\" (click)=\\\"show('pgp')\\\">PGP</md-checkbox>\\r\\n                <!--\\r\\n                <md-checkbox [(ngModel)]=\\\"model.pharmadrug_monopoly\\\" id=\\\"delivery_contracts_pharmadrug_monopoly\\\" name=\\\"delivery_contracts_pharmadrug_monopoly\\\">Monopolio</md-checkbox>\\r\\n                <md-checkbox [(ngModel)]=\\\"model.pharmadrug_control\\\" id=\\\"delivery_contracts_pharmadrug_control\\\" name=\\\"delivery_contracts_pharmadrug_control\\\">Controlado</md-checkbox>\\r\\n                <md-checkbox [(ngModel)]=\\\"model.cooled_products\\\" id=\\\"delivery_contracts_cooled_products\\\" name=\\\"delivery_contracts_cooled_products\\\">Refrigerado</md-checkbox>\\r\\n                -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--Red adscrita-->\\r\\n        <div class=\\\"col-sm-12 col-md-6\\\">\\r\\n            <div class=\\\"flex margin-bottom\\\">\\r\\n                <div class=\\\"box-header no-padding-h text-center\\\">Red adscrita</div>\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <button md-raised-button class=\\\"btn-w-md\\\">Añadir</button>\\r\\n            </div>\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nombre</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--description-->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <textarea type=\\\"text\\\" id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"model.description\\\" mdInput placeholder=\\\"Descripción\\\"></textarea>\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!---->\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!--EVENTO-->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"box-header bg-color-dark no-padding-h text-center\\\">\\r\\n                Evento\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"booEvento\\\">\\r\\n        <!-- numero de contracto -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"evento_contract_number\\\" name=\\\"evento_contract_number\\\" [(ngModel)]=\\\"objEvent.contract_number\\\"\\r\\n                    mdInput placeholder=\\\"Numero de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- inicio del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"evento_contract_start_date\\\" name=\\\"evento_contract_start_date\\\" [(ngModel)]=\\\"objEvent.contrac_start_datet\\\"\\r\\n                    mdInput placeholder=\\\"Inicio de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Vencimiento del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"evento_contract_expiration_date\\\" name=\\\"evento_contract_expiration_date\\\" [(ngModel)]=\\\"objEvent.contrct_expiration_date\\\"\\r\\n                    mdInput placeholder=\\\"Vencimiento del contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- presupuesto -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-4 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"budget\\\" name=\\\"budget\\\" [(ngModel)]=\\\"objEvent.budget\\\" mdInput placeholder=\\\"Presupuesto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Alerta -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"percent_alert\\\" name=\\\"percent_alert\\\" [(ngModel)]=\\\"objEvent.percent_alert\\\" mdInput placeholder=\\\"Alerta\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Inactivacion -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"percent_unable\\\" name=\\\"percent_unable\\\" [(ngModel)]=\\\"objEvent.percent_unable\\\" mdInput placeholder=\\\"Inactivación\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"booEvento\\\">\\r\\n        <!-- autorizacion -->\\r\\n        <div class='col-sm-12 col-md-6 col-lg-4 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"'before'\\\" id=\\\"perauth\\\" name=\\\"perauth\\\" [(ngModel)]=\\\"objEvent.perauth\\\">Autorización</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- longitud -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"perauth_length\\\" name=\\\"perauth_length\\\" [(ngModel)]=\\\"objEvent.perauth_length\\\" mdInput placeholder=\\\"Longitud\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- tipo de caracteres -->\\r\\n        <div class=\\\"col-sm-12 col-md-4 col-lg-4 margin-bottom\\\">\\r\\n            <md-select class=\\\"full-width\\\" placeholder=\\\"Tipo de caracteres\\\" [(ngModel)]=\\\"objEvent.perauth_char_type\\\" name=\\\"perauth_char_type\\\"\\r\\n                id=\\\"perauth_char_type\\\">\\r\\n                <md-option *ngFor=\\\"let item of operations_costs_centres\\\" [value]=\\\"item.id\\\">{{item.name}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"flex margin-bottom\\\">\\r\\n                <div class=\\\"box-header no-padding-h text-center\\\">Puntos de dispensación</div>\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <button md-raised-button color=\\\"secundary\\\" class=\\\"btn-w-md\\\">Añadir</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nombre</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let dp of objEvent.delivery_points\\\">\\r\\n                            <td>{{dp.name}}</td>\\r\\n                            <td>\\r\\n                                <button md-raised-button type=\\\"button\\\">Productos</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--CÁPITA-->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12  margin-bottom\\\">\\r\\n            <div class=\\\"box-header bg-color-dark no-padding-h text-center\\\">\\r\\n                Cápita\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"booCapita\\\">\\r\\n        <!-- numero de contracto -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_contract_number\\\" name=\\\"capita_contract_number\\\" [(ngModel)]=\\\"objCapita.contract_number\\\"\\r\\n                    mdInput placeholder=\\\"Numero de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- inicio del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_contract_start_date\\\" name=\\\"capita_contract_start_date\\\" [(ngModel)]=\\\"objCapita.contract_start_date\\\"\\r\\n                    mdInput placeholder=\\\"Inicio de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Vencimiento del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_contract_expiration_date\\\" name=\\\"capita_contract_expiration_date\\\" [(ngModel)]=\\\"objCapita.contract_expiration_date\\\"\\r\\n                    mdInput placeholder=\\\"Vencimiento del contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- capita global -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-4 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_global\\\" name=\\\"capita_global\\\" [(ngModel)]=\\\"objCapita.global\\\" mdInput placeholder=\\\"Cápita global\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Alerta -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_percent_alert\\\" name=\\\"capita_percent_alert\\\" [(ngModel)]=\\\"objCapita.percent_alert\\\" mdInput\\r\\n                    placeholder=\\\"Alerta\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Inactivacion -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_percent_unable\\\" name=\\\"capita_percent_unable\\\" [(ngModel)]=\\\"objCapita.percent_unable\\\"\\r\\n                    mdInput placeholder=\\\"Inactivación\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- afiliados -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_affiliates_total_qty\\\" name=\\\"capita_affiliates_total_qty\\\" [(ngModel)]=\\\"objCapita.affiliates_total_qty\\\"\\r\\n                    mdInput placeholder=\\\"Afiliados\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"booCapita\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n            <div class=\\\"box-header no-padding-h\\\">Histórico de afiliados</div>\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Fecha</th>\\r\\n                            <th>Afiliados</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!---->\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"flex margin-bottom\\\">\\r\\n                <div class=\\\"box-header no-padding-h\\\">Puntos de dispensación</div>\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <button md-raised-button color=\\\"secundary\\\" class=\\\"btn-w-md\\\">Añadir</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nombre</th>\\r\\n                            <th>Afiliados</th>\\r\\n                            <th>Cápita</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let item of objCapita.delivery_points\\\">\\r\\n                            <td>{{item.name}}</td>\\r\\n                            <td>{{item.affiliates_qty}}</td>\\r\\n                            <td>{{item.capita_value}}</td>\\r\\n                            <td>\\r\\n                                <button md-raised-button type=\\\"button\\\">Productos</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--PGP-->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12  margin-bottom\\\">\\r\\n            <div class=\\\"box-header bg-color-dark no-padding-h text-center\\\">\\r\\n                PGP\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"booPgp\\\">\\r\\n        <!-- numero de contracto -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_contract_number\\\" name=\\\"pgp_contract_number\\\" [(ngModel)]=\\\"objPgp.contract_number\\\" mdInput\\r\\n                    placeholder=\\\"Numero de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- inicio del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_contract_start_date\\\" name=\\\"pgp_contract_start_date\\\" [(ngModel)]=\\\"objPgp.contract_start_date\\\"\\r\\n                    mdInput placeholder=\\\"Inicio de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Vencimiento del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_contract_expiration_date\\\" name=\\\"pgp_contract_expiration_date\\\" [(ngModel)]=\\\"objPgp.contract_expiration_date\\\"\\r\\n                    mdInput placeholder=\\\"Vencimiento del contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- presupuesto -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-4 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_budget\\\" name=\\\"pgp_budget\\\" [(ngModel)]=\\\"objPgp.budget\\\" mdInput placeholder=\\\"Presupuesto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Alerta -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_percent_alert\\\" name=\\\"pgp_percent_alert\\\" [(ngModel)]=\\\"objPgp.percent_alert\\\" mdInput placeholder=\\\"Alerta\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Inactivacion -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_percent_unable\\\" name=\\\"pgp_percent_unable\\\" [(ngModel)]=\\\"objPgp.percent_unable\\\" mdInput\\r\\n                    placeholder=\\\"Inactivación\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- afiliaos -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_affiliates_total_qty\\\" name=\\\"pgp_affiliates_total_qty\\\" [(ngModel)]=\\\"objPgp.affiliates_total_qty\\\"\\r\\n                    mdInput placeholder=\\\"Afiliados\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n\\r\\n        <!---->\\r\\n        <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Histórico de afiliados</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let item of objPgp.delivery_points\\\">\\r\\n                            <td>{{item.name}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"flex space-between\\\">\\r\\n                <md-checkbox [(ngModel)]=\\\"model.pharmadrug_monopoly\\\" id=\\\"delivery_contracts_pharmadrug_monopoly\\\" name=\\\"delivery_contracts_pharmadrug_monopoly\\\">Monopolio</md-checkbox>\\r\\n                <md-checkbox [(ngModel)]=\\\"model.pharmadrug_control\\\" id=\\\"delivery_contracts_pharmadrug_control\\\" name=\\\"delivery_contracts_pharmadrug_control\\\">Controlado</md-checkbox>\\r\\n                <md-checkbox [(ngModel)]=\\\"model.cooled_products\\\" id=\\\"delivery_contracts_cooled_products\\\" name=\\\"delivery_contracts_cooled_products\\\">Refrigerado</md-checkbox>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"flex margin-bottom\\\">\\r\\n                <div class=\\\"box-header no-padding-h text-center\\\">Puntos de dispensación</div>\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <button md-raised-button color=\\\"secundary\\\" class=\\\"btn-w-md\\\">Añadir</button>\\r\\n            </div>\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nombre</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let dp of objPgp.delivery_points\\\">\\r\\n                            <td>{{dp.name}}</td>\\r\\n                            <td>\\r\\n                                <button md-raised-button type=\\\"button\\\">Productos</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\" [class.btn-action-container]=\\\"booActive\\\">\\r\\n            <button [disabled]=\\\"action_active ? false : !modelForm.form.valid\\\" md-raised-button class=\\\"btn-w-md no-margin-left btn-right\\\"\\r\\n                (click)=\\\"save()\\\">{{str_action}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"\n\n/***/ }),\n\n/***/ 1465:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- LIST -->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\" (keydown)=\\\"enter($event)\\\">\\r\\n            <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\r\\n                <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\r\\n                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <button md-raised-button (click)=\\\"NEW()\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">Nuevo</button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n\\r\\n        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n            <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th (click)=\\\"sort('cc.id')\\\">ID\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='cc.id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('code')\\\">Nombre\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='code'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('name')\\\">Cliente\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('operationcostcentres')\\\">Población\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='operationcostcentres'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('ct.value')\\\">Estado\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='ct.value'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of list.data\\\">\\r\\n                        <td>{{ item.id }}</td>\\r\\n                        <td>{{ item.name }}</td>\\r\\n                        <td></td>\\r\\n                        <td></td>\\r\\n                        <td>{{ item.state ? 'Activo' : 'Inactiva' }}</td>\\r\\n                        <td class=\\\"text-center\\\">\\r\\n                            <a style=\\\"color:#0a6ebd;cursor:pointer;\\\" (click)=\\\"view(item)\\\">\\r\\n                                <i class=\\\"fa fa-pencil fa-2x\\\"></i>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"maxSize\\\"\\r\\n            [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\r\\n\\r\\n    </div>\\r\\n</div>\"\n\n/***/ }),\n\n/***/ 1466:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<section class=\\\"chapter\\\">\\r\\n    <section class=\\\"hero\\\">\\r\\n        <div class=\\\"hero-content\\\">\\r\\n            <h1 class=\\\"hero-title\\\">Contratos de dispensación</h1>\\r\\n        </div>\\r\\n        <p class=\\\"hero-tagline\\\"></p>\\r\\n    </section>\\r\\n    <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\r\\n        <div class=\\\"container-fluid with-maxwidth\\\">\\r\\n            <div class=\\\"box box-default\\\">\\r\\n                <div class=\\\"box-body\\\">\\r\\n                    <delivery-contracts-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\"></delivery-contracts-action-cmp>\\r\\n                    <delivery-contracts-list-cmp *ngIf=\\\"isOpenList\\\"></delivery-contracts-list-cmp>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </article>\\r\\n</section>\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 5.fffbfb402a68a372c28e.chunk.js","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { SharedModule } from \"../../shared/shared.module\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DeliveryContractsComponent } from './delivery-contracts.component';\r\nimport { DeliveryContractsActionComponent } from './delivery-contracts-action/delivery-contracts-action.component';\r\nimport { DeliveryContractsListComponent } from './delivery-contracts-list/delivery-contracts-list.component';\r\n\r\nconst routes: Routes = [{ path: '', component: DeliveryContractsComponent }];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,        \r\n        RouterModule.forChild(routes),\r\n        SharedModule,\r\n        NgbModule.forRoot()  \r\n    ],\r\n    declarations: [\r\n        DeliveryContractsComponent,\r\n        DeliveryContractsActionComponent,\r\n        DeliveryContractsListComponent\r\n    ]\r\n})\r\nexport class DeliveryContractsModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/smartity/delivery-contracts/delivery-contracts.module.ts","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { DataTableResource } from \"angular-4-data-table\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { Base } from '../bases/base';\r\n\r\n@Component({\r\n    selector: \"delivery-contracts-cmp\",\r\n    template: require('./delivery-contracts.component.html'),\r\n    styles: []\r\n})\r\n\r\nexport class DeliveryContractsComponent extends Base implements OnInit {\r\n       \r\n    constructor(){\r\n        super();\r\n    }\r\n   \r\n    ngOnInit() {\r\n      \r\n    }\r\n    \r\n      \r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/smartity/delivery-contracts/delivery-contracts.component.ts","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { DataTableResource } from \"angular-4-data-table\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport { AuthenticationService } from \"../../../auth/authentication.service\";\r\nimport { MdSnackBar, MdDialogRef, MdDialog } from \"@angular/material\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseModel } from '../../bases/base-model';\r\nimport { LoaderService, HelperService } from '../../../shared';\r\nimport { Response } from '@angular/http';\r\nimport { DeliveryContractsComponent } from '../delivery-contracts.component';\r\nimport { ModalCostumersComponent } from '../../modals/modal-costumers/modal-costumers.component';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: \"delivery-contracts-action-cmp\",\r\n    template: require('./delivery-contracts-action.component.html'),\r\n    styles: []\r\n})\r\n\r\nexport class DeliveryContractsActionComponent extends BaseModel implements OnInit {\r\n\r\n\r\n    private arrPopulation_type: Array<any> = [];\r\n\r\n    private costs_centres_groups: Array<any> = [];\r\n    private costs_centres_types: Array<any> = [];\r\n    private operations_costs_centres: Array<any> = [];\r\n    private action_active: boolean;\r\n    private str_action: string = 'Guardar';\r\n\r\n    private booEvento: boolean = false;\r\n    private booCapita: boolean = false;\r\n    private booPgp: boolean = false;\r\n\r\n    private objEvent: any;\r\n    private objCapita: any;\r\n    private objPgp: any;\r\n\r\n    private _model: any = {\r\n        delivery_contracts: {\r\n            state: true,\r\n            pharmadrug_monopoly: false,\r\n            pharmadrug_control: false,\r\n            cooled_products: false\r\n        }\r\n    };\r\n\r\n    constructor(public snackBar: MdSnackBar,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private loaderService: LoaderService,\r\n        private helperService: HelperService,\r\n        private comp: DeliveryContractsComponent,\r\n        private dialog: MdDialog) {\r\n        super();\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n        this.clean();\r\n        this.getCollection();\r\n        this.getCostCentres();\r\n\r\n        if (this.numId > 0) {\r\n            this.str_action = 'Actualizar';\r\n            this.getDataById();\r\n        } else {\r\n            this.str_action = 'Guardar';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get the country and the tax regime with the collection of names\r\n     */\r\n    private getCollection() {\r\n        this.helperService.POST(`/api/collections`, [\"POPULATION_TYPE\"]).subscribe(rs => {\r\n            let res = rs.json();\r\n            this.arrPopulation_type = res.POPULATION_TYPE;\r\n        }, err => {\r\n\r\n        });\r\n    }\r\n\r\n    private getCostCentres() {\r\n        this.helperService.GET(`/api/costs_centre/operations_costs_centre`)\r\n            .map((response: Response) => {\r\n\r\n                this.operations_costs_centres = response.json().data;\r\n\r\n            }).subscribe(\r\n                error => {\r\n                    // this.loaderService.display(false);    \r\n                }, done => {\r\n                    // this.loaderService.display(false);    \r\n                });\r\n    }\r\n\r\n    private save() {\r\n        /** Update */\r\n        if (this.model.id > 0) {\r\n            this.loaderService.display(true);\r\n            this.helperService.PUT(`/api/costscentres/${this.numId}`, this.model)\r\n                .map((response: Response) => {\r\n\r\n                    let res = response.json();\r\n                    if (res.status == 'success') {\r\n                        this.snackBar.open(res.message, 'Actualización', {\r\n                            duration: 3500,\r\n                        });\r\n                        // this.router.navigate(['app/costs-centres-list']);\r\n                        this.comp.openList();\r\n                    }\r\n\r\n                }).subscribe(\r\n                    error => {\r\n                        this.loaderService.display(false);\r\n                    }, done => {\r\n                        this.loaderService.display(false);\r\n                    });\r\n\r\n        } else {\r\n            /**Create */\r\n            this.loaderService.display(true);\r\n            this.helperService.POST(`/api/costscentres`, this.model)\r\n                .map((response: Response) => {\r\n\r\n                    let res = response.json();\r\n                    if (res.status == 'success') {\r\n                        this.snackBar.open(res.message, 'Guardado', {\r\n                            duration: 3500,\r\n                        });\r\n                        this.clean();\r\n                    }\r\n\r\n                }).subscribe(\r\n                    error => {\r\n                        this.loaderService.display(false);\r\n                    }, done => {\r\n                        this.loaderService.display(false);\r\n                    });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private getDataById(): void {\r\n        this.loaderService.display(true);\r\n        this.helperService.GET(`/api/costscentres/${this.numId}`)\r\n            .map((response: Response) => {\r\n\r\n                let res = response.json();\r\n                this.model = res.data;\r\n                this.model.operation_cost_centre_id = this.model.root == true ? 'co-' + this.model.operation_cost_centre_id : 'cc-' + this.model.operation_cost_centre_id;\r\n\r\n            }).subscribe(\r\n                error => {\r\n                    this.loaderService.display(false);\r\n                }, done => {\r\n                    this.loaderService.display(false);\r\n                });\r\n    }\r\n\r\n    private clean() {\r\n        this.model = {};\r\n        this.model.state = true;\r\n    }\r\n\r\n    private goList() {\r\n        this.comp.openList();\r\n    }\r\n\r\n    private show(group: string) {\r\n        switch (group) {\r\n            case 'evento':\r\n                if (!this.booEvento) {\r\n                    this.objEvent = {};\r\n                }\r\n                break;\r\n            case 'capita':\r\n                if (!this.booCapita) {\r\n                    this.objCapita = {};\r\n                }\r\n                break;\r\n            case 'pgp':\r\n                if (!this.booPgp) {\r\n                    this.objPgp = {};\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private modalCostumer: MdDialogRef<ModalCostumersComponent>;\r\n    private customer: any;\r\n    private openModalCostumers() {\r\n        this.modalCostumer = this.dialog.open(ModalCostumersComponent, {\r\n            hasBackdrop: false,\r\n            data: {\r\n                title: 'Clientes',\r\n            }\r\n        });\r\n\r\n        this.modalCostumer\r\n            .afterClosed()\r\n            .pipe(filter((data) => data))\r\n            .subscribe((data) => {\r\n                this.model.customers_id = data.id;\r\n                this.customer = data;\r\n            });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/smartity/delivery-contracts/delivery-contracts-action/delivery-contracts-action.component.ts","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { DataTableResource } from \"angular-4-data-table\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport { MdSnackBar } from \"@angular/material\";\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport { BaseList } from '../../bases/base-list';\r\nimport { LoaderService, HelperService } from '../../../shared';\r\nimport { Response } from '@angular/http';\r\nimport { DeliveryContractsComponent } from '../delivery-contracts.component';\r\n\r\n@Component({\r\n    selector: \"delivery-contracts-list-cmp\",\r\n    template: require('./delivery-contracts-list.component.html'),\r\n    styles: []\r\n})\r\n\r\nexport class DeliveryContractsListComponent  extends BaseList implements  OnInit{\r\n    \r\n    constructor(public router: Router,\r\n                public loaderService:LoaderService, \r\n                public helperService:HelperService,\r\n                private comp: DeliveryContractsComponent) {\r\n        super(loaderService, helperService);\r\n        this.urlApi='/api/delivery-contracts';\r\n    }\r\n           \r\n    ngOnInit() {\r\n        this.getAll(); \r\n    }\r\n            \r\n    private NEW(row: any) {               \r\n        this.comp.openActions();\r\n        this.comp.id=0;\r\n    } \r\n\r\n    private view(row: any) {               \r\n        this.comp.openActions();        \r\n        this.comp.id=row.id;\r\n    } \r\n       \r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/smartity/delivery-contracts/delivery-contracts-list/delivery-contracts-list.component.ts","module.exports = \"<form #modelForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\" [class.btn-action-container]=\\\"booActive\\\">\\r\\n            <button md-raised-button color=\\\"secundary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-md no-margin-left\\\">Regresar</button>\\r\\n        </div>\\r\\n        <!-- name -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"delivery_contracts_name\\\" name=\\\"delivery_contracts_name\\\" [(ngModel)]=\\\"model.name\\\"\\r\\n                    mdInput placeholder=\\\"Nombre\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- estado -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <div class=\\\"flex\\\">\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <md-slide-toggle [labelPosition]=\\\"'before'\\\" id=\\\"delivery_contracts_state\\\" name=\\\"delivery_contracts_state\\\" [(ngModel)]=\\\"model.state\\\">Estado</md-slide-toggle>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- cliente -->\\r\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-3 margin-bottom\\\">\\r\\n            <div class=\\\"box-header no-padding-h\\\">Cliente: {{model.costumer_id}}</div>\\r\\n            <button md-raised-button class=\\\"btn-w-md\\\" (click)=\\\"openModalCostumers()\\\">Seleccionar</button>\\r\\n        </div>\\r\\n        <!-- tipo de poblacion -->\\r\\n        <div class=\\\"col-sm-12 col-md-6 col-lg-3 margin-bottom\\\">\\r\\n            <div style=\\\"height: 48px\\\"></div>\\r\\n            <md-select class=\\\"full-width\\\" placeholder=\\\"Tipo de población\\\" [(ngModel)]=\\\"model.population_type_id\\\"\\r\\n                name=\\\"delivery_contracts_population_type_id\\\" id=\\\"delivery_contracts_population_type_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of arrPopulation_type\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n            <div style=\\\"height: 48px;\\\"></div>\\r\\n            <div class=\\\"flex space-between\\\">\\r\\n                <md-checkbox id=\\\"evento\\\" name=\\\"evento\\\" [(ngModel)]=\\\"booEvento\\\" (click)=\\\"show('evento')\\\">Evento</md-checkbox>\\r\\n                <md-checkbox id=\\\"capita\\\" name=\\\"capita\\\" [(ngModel)]=\\\"booCapita\\\" (click)=\\\"show('capita')\\\">Cápita</md-checkbox>\\r\\n                <md-checkbox id=\\\"pgp\\\" name=\\\"pgp\\\" [(ngModel)]=\\\"booPgp\\\" (click)=\\\"show('pgp')\\\">PGP</md-checkbox>\\r\\n                <!--\\r\\n                <md-checkbox [(ngModel)]=\\\"model.pharmadrug_monopoly\\\" id=\\\"delivery_contracts_pharmadrug_monopoly\\\" name=\\\"delivery_contracts_pharmadrug_monopoly\\\">Monopolio</md-checkbox>\\r\\n                <md-checkbox [(ngModel)]=\\\"model.pharmadrug_control\\\" id=\\\"delivery_contracts_pharmadrug_control\\\" name=\\\"delivery_contracts_pharmadrug_control\\\">Controlado</md-checkbox>\\r\\n                <md-checkbox [(ngModel)]=\\\"model.cooled_products\\\" id=\\\"delivery_contracts_cooled_products\\\" name=\\\"delivery_contracts_cooled_products\\\">Refrigerado</md-checkbox>\\r\\n                -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--Red adscrita-->\\r\\n        <div class=\\\"col-sm-12 col-md-6\\\">\\r\\n            <div class=\\\"flex margin-bottom\\\">\\r\\n                <div class=\\\"box-header no-padding-h text-center\\\">Red adscrita</div>\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <button md-raised-button class=\\\"btn-w-md\\\">Añadir</button>\\r\\n            </div>\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nombre</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--description-->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <textarea type=\\\"text\\\" id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"model.description\\\" mdInput placeholder=\\\"Descripción\\\"></textarea>\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!---->\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!--EVENTO-->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"box-header bg-color-dark no-padding-h text-center\\\">\\r\\n                Evento\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"booEvento\\\">\\r\\n        <!-- numero de contracto -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"evento_contract_number\\\" name=\\\"evento_contract_number\\\" [(ngModel)]=\\\"objEvent.contract_number\\\"\\r\\n                    mdInput placeholder=\\\"Numero de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- inicio del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"evento_contract_start_date\\\" name=\\\"evento_contract_start_date\\\" [(ngModel)]=\\\"objEvent.contrac_start_datet\\\"\\r\\n                    mdInput placeholder=\\\"Inicio de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Vencimiento del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"evento_contract_expiration_date\\\" name=\\\"evento_contract_expiration_date\\\" [(ngModel)]=\\\"objEvent.contrct_expiration_date\\\"\\r\\n                    mdInput placeholder=\\\"Vencimiento del contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- presupuesto -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-4 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"budget\\\" name=\\\"budget\\\" [(ngModel)]=\\\"objEvent.budget\\\" mdInput placeholder=\\\"Presupuesto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Alerta -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"percent_alert\\\" name=\\\"percent_alert\\\" [(ngModel)]=\\\"objEvent.percent_alert\\\" mdInput placeholder=\\\"Alerta\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Inactivacion -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"percent_unable\\\" name=\\\"percent_unable\\\" [(ngModel)]=\\\"objEvent.percent_unable\\\" mdInput placeholder=\\\"Inactivación\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"booEvento\\\">\\r\\n        <!-- autorizacion -->\\r\\n        <div class='col-sm-12 col-md-6 col-lg-4 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"'before'\\\" id=\\\"perauth\\\" name=\\\"perauth\\\" [(ngModel)]=\\\"objEvent.perauth\\\">Autorización</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- longitud -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"perauth_length\\\" name=\\\"perauth_length\\\" [(ngModel)]=\\\"objEvent.perauth_length\\\" mdInput placeholder=\\\"Longitud\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- tipo de caracteres -->\\r\\n        <div class=\\\"col-sm-12 col-md-4 col-lg-4 margin-bottom\\\">\\r\\n            <md-select class=\\\"full-width\\\" placeholder=\\\"Tipo de caracteres\\\" [(ngModel)]=\\\"objEvent.perauth_char_type\\\" name=\\\"perauth_char_type\\\"\\r\\n                id=\\\"perauth_char_type\\\">\\r\\n                <md-option *ngFor=\\\"let item of operations_costs_centres\\\" [value]=\\\"item.id\\\">{{item.name}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"flex margin-bottom\\\">\\r\\n                <div class=\\\"box-header no-padding-h text-center\\\">Puntos de dispensación</div>\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <button md-raised-button color=\\\"secundary\\\" class=\\\"btn-w-md\\\">Añadir</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nombre</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let dp of objEvent.delivery_points\\\">\\r\\n                            <td>{{dp.name}}</td>\\r\\n                            <td>\\r\\n                                <button md-raised-button type=\\\"button\\\">Productos</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--CÁPITA-->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12  margin-bottom\\\">\\r\\n            <div class=\\\"box-header bg-color-dark no-padding-h text-center\\\">\\r\\n                Cápita\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"booCapita\\\">\\r\\n        <!-- numero de contracto -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_contract_number\\\" name=\\\"capita_contract_number\\\" [(ngModel)]=\\\"objCapita.contract_number\\\"\\r\\n                    mdInput placeholder=\\\"Numero de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- inicio del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_contract_start_date\\\" name=\\\"capita_contract_start_date\\\" [(ngModel)]=\\\"objCapita.contract_start_date\\\"\\r\\n                    mdInput placeholder=\\\"Inicio de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Vencimiento del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_contract_expiration_date\\\" name=\\\"capita_contract_expiration_date\\\" [(ngModel)]=\\\"objCapita.contract_expiration_date\\\"\\r\\n                    mdInput placeholder=\\\"Vencimiento del contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- capita global -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-4 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_global\\\" name=\\\"capita_global\\\" [(ngModel)]=\\\"objCapita.global\\\" mdInput placeholder=\\\"Cápita global\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Alerta -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_percent_alert\\\" name=\\\"capita_percent_alert\\\" [(ngModel)]=\\\"objCapita.percent_alert\\\" mdInput\\r\\n                    placeholder=\\\"Alerta\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Inactivacion -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_percent_unable\\\" name=\\\"capita_percent_unable\\\" [(ngModel)]=\\\"objCapita.percent_unable\\\"\\r\\n                    mdInput placeholder=\\\"Inactivación\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- afiliados -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"capita_affiliates_total_qty\\\" name=\\\"capita_affiliates_total_qty\\\" [(ngModel)]=\\\"objCapita.affiliates_total_qty\\\"\\r\\n                    mdInput placeholder=\\\"Afiliados\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"booCapita\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n            <div class=\\\"box-header no-padding-h\\\">Histórico de afiliados</div>\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Fecha</th>\\r\\n                            <th>Afiliados</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!---->\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"flex margin-bottom\\\">\\r\\n                <div class=\\\"box-header no-padding-h\\\">Puntos de dispensación</div>\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <button md-raised-button color=\\\"secundary\\\" class=\\\"btn-w-md\\\">Añadir</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nombre</th>\\r\\n                            <th>Afiliados</th>\\r\\n                            <th>Cápita</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let item of objCapita.delivery_points\\\">\\r\\n                            <td>{{item.name}}</td>\\r\\n                            <td>{{item.affiliates_qty}}</td>\\r\\n                            <td>{{item.capita_value}}</td>\\r\\n                            <td>\\r\\n                                <button md-raised-button type=\\\"button\\\">Productos</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--PGP-->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12  margin-bottom\\\">\\r\\n            <div class=\\\"box-header bg-color-dark no-padding-h text-center\\\">\\r\\n                PGP\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"booPgp\\\">\\r\\n        <!-- numero de contracto -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_contract_number\\\" name=\\\"pgp_contract_number\\\" [(ngModel)]=\\\"objPgp.contract_number\\\" mdInput\\r\\n                    placeholder=\\\"Numero de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- inicio del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_contract_start_date\\\" name=\\\"pgp_contract_start_date\\\" [(ngModel)]=\\\"objPgp.contract_start_date\\\"\\r\\n                    mdInput placeholder=\\\"Inicio de contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Vencimiento del contracto -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_contract_expiration_date\\\" name=\\\"pgp_contract_expiration_date\\\" [(ngModel)]=\\\"objPgp.contract_expiration_date\\\"\\r\\n                    mdInput placeholder=\\\"Vencimiento del contracto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- presupuesto -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-4 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_budget\\\" name=\\\"pgp_budget\\\" [(ngModel)]=\\\"objPgp.budget\\\" mdInput placeholder=\\\"Presupuesto\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Alerta -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_percent_alert\\\" name=\\\"pgp_percent_alert\\\" [(ngModel)]=\\\"objPgp.percent_alert\\\" mdInput placeholder=\\\"Alerta\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- Inactivacion -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <span mdPrefix>% &nbsp;</span>\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_percent_unable\\\" name=\\\"pgp_percent_unable\\\" [(ngModel)]=\\\"objPgp.percent_unable\\\" mdInput\\r\\n                    placeholder=\\\"Inactivación\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- afiliaos -->\\r\\n        <div class='col-sm-12 col-md-4 col-lg-2 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"pgp_affiliates_total_qty\\\" name=\\\"pgp_affiliates_total_qty\\\" [(ngModel)]=\\\"objPgp.affiliates_total_qty\\\"\\r\\n                    mdInput placeholder=\\\"Afiliados\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n\\r\\n        <!---->\\r\\n        <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Histórico de afiliados</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let item of objPgp.delivery_points\\\">\\r\\n                            <td>{{item.name}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"flex space-between\\\">\\r\\n                <md-checkbox [(ngModel)]=\\\"model.pharmadrug_monopoly\\\" id=\\\"delivery_contracts_pharmadrug_monopoly\\\" name=\\\"delivery_contracts_pharmadrug_monopoly\\\">Monopolio</md-checkbox>\\r\\n                <md-checkbox [(ngModel)]=\\\"model.pharmadrug_control\\\" id=\\\"delivery_contracts_pharmadrug_control\\\" name=\\\"delivery_contracts_pharmadrug_control\\\">Controlado</md-checkbox>\\r\\n                <md-checkbox [(ngModel)]=\\\"model.cooled_products\\\" id=\\\"delivery_contracts_cooled_products\\\" name=\\\"delivery_contracts_cooled_products\\\">Refrigerado</md-checkbox>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"flex margin-bottom\\\">\\r\\n                <div class=\\\"box-header no-padding-h text-center\\\">Puntos de dispensación</div>\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <button md-raised-button color=\\\"secundary\\\" class=\\\"btn-w-md\\\">Añadir</button>\\r\\n            </div>\\r\\n            <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n                <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nombre</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let dp of objPgp.delivery_points\\\">\\r\\n                            <td>{{dp.name}}</td>\\r\\n                            <td>\\r\\n                                <button md-raised-button type=\\\"button\\\">Productos</button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\" [class.btn-action-container]=\\\"booActive\\\">\\r\\n            <button [disabled]=\\\"action_active ? false : !modelForm.form.valid\\\" md-raised-button class=\\\"btn-w-md no-margin-left btn-right\\\"\\r\\n                (click)=\\\"save()\\\">{{str_action}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smartity/delivery-contracts/delivery-contracts-action/delivery-contracts-action.component.html\n// module id = 1464\n// module chunks = 5","module.exports = \"<!-- LIST -->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\" (keydown)=\\\"enter($event)\\\">\\r\\n            <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\r\\n                <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\r\\n                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <button md-raised-button (click)=\\\"NEW()\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">Nuevo</button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n\\r\\n        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n            <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th (click)=\\\"sort('cc.id')\\\">ID\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='cc.id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('code')\\\">Nombre\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='code'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('name')\\\">Cliente\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('operationcostcentres')\\\">Población\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='operationcostcentres'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('ct.value')\\\">Estado\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='ct.value'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of list.data\\\">\\r\\n                        <td>{{ item.id }}</td>\\r\\n                        <td>{{ item.name }}</td>\\r\\n                        <td></td>\\r\\n                        <td></td>\\r\\n                        <td>{{ item.state ? 'Activo' : 'Inactiva' }}</td>\\r\\n                        <td class=\\\"text-center\\\">\\r\\n                            <a style=\\\"color:#0a6ebd;cursor:pointer;\\\" (click)=\\\"view(item)\\\">\\r\\n                                <i class=\\\"fa fa-pencil fa-2x\\\"></i>\\r\\n                            </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"maxSize\\\"\\r\\n            [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\r\\n\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smartity/delivery-contracts/delivery-contracts-list/delivery-contracts-list.component.html\n// module id = 1465\n// module chunks = 5","module.exports = \"<section class=\\\"chapter\\\">\\r\\n    <section class=\\\"hero\\\">\\r\\n        <div class=\\\"hero-content\\\">\\r\\n            <h1 class=\\\"hero-title\\\">Contratos de dispensación</h1>\\r\\n        </div>\\r\\n        <p class=\\\"hero-tagline\\\"></p>\\r\\n    </section>\\r\\n    <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\r\\n        <div class=\\\"container-fluid with-maxwidth\\\">\\r\\n            <div class=\\\"box box-default\\\">\\r\\n                <div class=\\\"box-body\\\">\\r\\n                    <delivery-contracts-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\"></delivery-contracts-action-cmp>\\r\\n                    <delivery-contracts-list-cmp *ngIf=\\\"isOpenList\\\"></delivery-contracts-list-cmp>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </article>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smartity/delivery-contracts/delivery-contracts.component.html\n// module id = 1466\n// module chunks = 5"],"sourceRoot":""}