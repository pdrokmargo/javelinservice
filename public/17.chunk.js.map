{"version":3,"sources":["C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes-action/customers-quotes-action.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes-action/customers-quotes-action.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes-list/customers-quotes-list.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes-list/customers-quotes-list.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes.module.ts"],"names":[],"mappings":"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","file":"17.chunk.js","sourcesContent":["module.exports = \"<form #modelForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\n  <div class=\\\"row form-inline\\\">\\n      <div class=\\\"margin-bottom-40\\\" style=\\\"padding-left: 15px;padding-right: 15px;\\\">\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-mat no-margin-right\\\">\\n              <mat-icon>keyboard_arrow_left</mat-icon> Regresar\\n          </button>\\n      </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n      <!--vendedor-->\\n      <div class=\\\"col-sm-12 col-md-3 margin-bottom\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n              <input required readonly matInput type=\\\"text\\\" placeholder=\\\"Vendedor\\\" [(ngModel)]=\\\"seller.fullname\\\"\\n                  id=\\\"employees\\\" name=\\\"employees\\\" />\\n              <mat-icon matSuffix class=\\\"wh-24 pointer\\\" (click)=\\\"openAddEmployees()\\\">search</mat-icon>\\n          </mat-form-field>\\n      </div>\\n      <!-- creado el -->\\n    <div class=\\\"col-md-3 margin-bottom\\\">\\n        <mat-form-field>\\n            <input matInput readonly placeholder=\\\"Creado el\\\" name=\\\"created_at\\\" value=\\\"{{model.created_at | date:'dd/MM/yyyy'}}\\\">\\n          </mat-form-field>\\n    </div>\\n  <!-- vence el -->\\n  <div class=\\\"col-md-3 margin-bottom\\\">\\n        <mat-form-field>\\n            <input matInput [matDatepicker]=\\\"pickerExpiredAt\\\" placeholder=\\\"Vence el\\\" [min]=\\\"model.created_at\\\" [(ngModel)]=\\\"model.expire_at\\\" name=\\\"expired_at\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"pickerExpiredAt\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #pickerExpiredAt></mat-datepicker>\\n          </mat-form-field>\\n    </div>\\n      <!-- estado -->\\n      <div class='col-sm-12 col-md-1 margin-bottom'>\\n          <div class=\\\"flex\\\">\\n              <span class=\\\"flex-spacer\\\"></span>\\n              <mat-slide-toggle [labelPosition]=\\\"'before'\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"model.status\\\">Estado</mat-slide-toggle>\\n          </div>\\n      </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n      <!-- proveedor -->\\n      <div class=\\\"col-sm-12 col-md-3 margin-bottom\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n              <input required readonly matInput type=\\\"text\\\" placeholder=\\\"Cliente\\\" [(ngModel)]=\\\"customer.fullname\\\"\\n                  id=\\\"customer\\\" name=\\\"customer\\\" />\\n              <mat-icon matSuffix class=\\\"wh-24 pointer\\\" (click)=\\\"openAddCustomer()\\\">search</mat-icon>\\n          </mat-form-field>\\n      </div>\\n      <!-- contacto de ventas -->\\n      <div class='col-sm-12 col-md-3 margin-bottom'>\\n          <mat-form-field class=\\\"full-width\\\">\\n              <input type=\\\"text\\\" name=\\\"contact_name\\\" [(ngModel)]=\\\"contact_name.name\\\" matInput placeholder=\\\"Contacto\\\">\\n          </mat-form-field>\\n      </div>\\n      <!--condiciones de pago-->\\n      <div class=\\\"col-sm-12 col-md-3 margin-bottom\\\">\\n          <mat-form-field>\\n          <mat-select class=\\\"full-width\\\" placeholder=\\\"Condición de pago\\\" [(ngModel)]=\\\"model.payment_condition_id\\\" name=\\\"payment_condition\\\"\\n              id=\\\"population_type_id\\\">\\n              <mat-option *ngFor=\\\"let item of arrPayment_condition\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\n          </mat-select>\\n      </mat-form-field>\\n      </div>       \\n  </div>\\n  <div class=\\\"row\\\">\\n      <!-- productos -->\\n      <div class=\\\"col-sm-12 margin-bottom\\\">\\n\\n          <div class=\\\"flex margin-bottom\\\">\\n              <div class=\\\"box-header no-padding-h\\\">Productos</div>\\n              <span class=\\\"flex-spacer\\\"></span>\\n              <button [disabled]=\\\"model.customer_id == -1\\\" type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left\\\" (click)=\\\"openModalProducts()\\\">Añadir</button>\\n          </div>\\n          <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n              <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\n                  <thead>\\n                      <tr>\\n                          <th>PLU\\n                              <span class=\\\"glyphicon sort-icon\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                          </th>\\n                          <th>Producto\\n                                  <span class=\\\"glyphicon sort-icon\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                          </th>\\n                          <th>Unidades\\n                                  <span class=\\\"glyphicon sort-icon\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                          </th>\\n                          <th>Precio Unitario\\n                                  <span class=\\\"glyphicon sort-icon\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                          </th>\\n                          <th>Descuento (%)\\n                                  <span class=\\\"glyphicon sort-icon\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                          </th>\\n                          <th>Subtotal\\n                                  <span class=\\\"glyphicon sort-icon\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                          </th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor=\\\"let detail of model.details;let index = index;\\\">\\n                              <td>{{detail.product.sku}}</td>\\n                              <td>{{detail.product.display_name}}</td>\\n                              <td><mat-form-field><input (keyup)=\\\"totalCost()\\\" matInput type=\\\"text\\\" [(ngModel)]=\\\"detail.units\\\" name=\\\"units{{index}}\\\" /></mat-form-field></td>\\n                              <td><mat-form-field>$ <input (keyup)=\\\"totalCost()\\\" matInput type=\\\"text\\\" [(ngModel)]=\\\"detail.product.averageunitcost\\\" name=\\\"average{{index}}\\\" /></mat-form-field></td>\\n                              <td><mat-form-field>% <input (keyup)=\\\"totalCost()\\\" matInput type=\\\"text\\\" [(ngModel)]=\\\"detail.discount\\\" name=\\\"discount{{index}}\\\" /></mat-form-field></td>\\n\\n                              <td>${{ detail.product.averageunitcost * detail.units * (1-(detail.discount/100))}}</td>\\n                          <td class=\\\"w-40\\\">\\n                              <button type=\\\"button\\\" class=\\\"text-danger\\\" mat-icon-button (click)=\\\"removeProduct(index)\\\">\\n                                  <mat-icon>delete</mat-icon>\\n                              </button>\\n                          </td>\\n                      </tr>\\n                  </tbody>\\n              </table>\\n          </div>\\n      </div>\\n      <!--notas-->\\n      <div class='col-sm-12 col-md-12 margin-bottom'>\\n          <mat-form-field class=\\\"full-width\\\">\\n              <textarea type=\\\"text\\\" id=\\\"notes\\\" name=\\\"notes\\\" [(ngModel)]=\\\"model.notes\\\" matInput\\n                  placeholder=\\\"Nota\\\"></textarea>\\n          </mat-form-field>\\n      </div>\\n\\n\\n  </div>\\n  <div class=\\\"row\\\">\\n          <div class=\\\"col-md-5\\\">\\n                  <mat-form-field><input readonly matInput placeholder=\\\"Total ($)\\\" [(ngModel)]=\\\"model.total\\\" name=\\\"total cost\\\"></mat-form-field>\\n              </div>\\n      <div class=\\\"col-md-7\\\" [class.btn-action-container]=\\\"booActive\\\">\\n          <button type=\\\"button\\\" [disabled]=\\\"!modelForm.form.valid\\\" mat-raised-button class=\\\"btn-w-mat no-margin-left btn-right\\\"\\n              (click)=\\\"save()\\\">{{strAction}}</button>\\n      </div>\\n  </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes-action/customers-quotes-action.component.html\n// module id = ../../../../../src/app/smartity/customers-quotes/customers-quotes-action/customers-quotes-action.component.html\n// module chunks = 17","import { Component, OnInit } from '@angular/core';\nimport { ModalStakeholderComponent, ModalSupplierQuotesComponent, ModalDeliveryPointsComponent, ModalIpsNetworkComponent, ModalGeolocationComponent, ModalWarehouseComponent } from '../../modals';\nimport { ModalProductsComponent } from '../../modals/modal-products/modal-products.component';\nimport { MatDialogRef, MatSnackBar, MatDialog } from '@angular/material';\nimport \"rxjs/add/operator/startWith\";\nimport { BaseModel } from '../../bases/base-model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { CustomersQuotesComponent } from '../customers-quotes.component';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'customers-quotes-action-cmp',\n  templateUrl: './customers-quotes-action.component.html'\n})\nexport class CustomersQuotesActionComponent extends BaseModel implements OnInit{\n\n  private modalCostumer: MatDialogRef<ModalStakeholderComponent>;\n    private modalProducts: MatDialogRef<ModalProductsComponent>;\n    private modalDeliveryPoints: MatDialogRef<ModalDeliveryPointsComponent>;\n    private modalStakeHolderDialogRef: MatDialogRef<ModalStakeholderComponent>;\n  \n\n\n    private created_at: string = '';\n    private expire_at: string = '';\n    private estimate_delivery: string = '';\n    private contact_name: any = {};\n\n    private arrPopulation_type: Array<any> = [];\n    private arrPerauth_char_type: Array<any> = [];\n    private operations_costs_centres: Array<any> = [];\n    private arrPayment_condition: Array<any> = [];\n    private customer: any = {};\n    private customers: Array<any> = [];\n    private seller: any = {};\n\n    constructor(\n        public snackBar: MatSnackBar,\n        private route: ActivatedRoute,\n        private router: Router,\n        private loaderService: LoaderService,\n        private helperService: HelperService,\n        private comp: CustomersQuotesComponent,\n        private dialog: MatDialog,\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n      this.model.created_at = '';\n        this.clean();\n        this.getCollection();\n        if (this.numId !== undefined) {\n            this.getDataById();\n        }else{\n            this.model.created_at = new Date();\n        }\n    }\n\n    private getCollection() {\n        this.helperService.POST(`/api/collections`, [\"POPULATION_TYPE\", \"PREAUTH_CHAR_TYPE\", \"PAYMENT_CONDITION\"]).subscribe(rs => {\n            let res = rs.json();\n            this.arrPopulation_type = res.POPULATION_TYPE;\n            this.arrPerauth_char_type = res.PREAUTH_CHAR_TYPE;\n            this.arrPayment_condition = res.PAYMENT_CONDITION;\n        }, err => { });\n    }\n\n  \n    private save() {\n        this.model.products = JSON.stringify(this.model.details || []);  \n        console.log(this.model.products);\n        this.loaderService.display(true);\n        switch (this.strAction) {\n            case 'Guardar':\n                this.helperService.POST(`/api/customers-quotes`, this.model).subscribe(rs => {\n                    const res = rs.json();\n                    if (res.store) {\n                        this.snackBar.open(res.message, 'Guardado', { duration: 4000 });\n                        this.goList();\n                    }\n                }, err => {\n                    this.loaderService.display(false);\n                    this.snackBar.open(err.message, 'Guardado', { duration: 4000 });\n                });\n                break;\n            case 'Actualizar':\n                this.helperService.PUT(`/api/customers-quotes/${this.numId}`, this.model).subscribe(rs => {\n                    const res = rs.json();\n                    if (res.update) {\n                        this.snackBar.open(res.message, 'Actualización', { duration: 4000 });\n                        this.comp.openList();\n                    }\n                }, err => {\n                    this.snackBar.open(err.message, 'Actualización', { duration: 4000 });\n                    this.loaderService.display(false);\n                });\n                break;\n            case 'Eliminar':\n                this.helperService.DELETE(`/api/customers-quotes/${this.numId}`).subscribe(rs => {\n                    const res = rs.json();\n                    if (res.delete) {\n                        this.snackBar.open(res.message, 'Eliminación', { duration: 4000 });\n                        this.comp.openList();\n                    }\n                }, err => {\n                    this.snackBar.open(err.message, 'Eliminación', { duration: 4000 });\n                    this.loaderService.display(false);\n                });\n                break;\n        }\n    }\n\n    private getDataById(): void {\n        this.loaderService.display(true);\n        this.helperService.GET(`/api/customers-quotes/${this.numId}`).subscribe(rs => {\n            const res = rs.json();\n            this.model = res.data;\n            this.customer = res['data']['stakeholder_info'] || {};\n            this.seller = res['data']['seller'] || {};\n            this.contact_name = res['data']['customer_info']['purchases_contact'];\n            this.model.details = JSON.parse(this.model.products);\n            console.log(res);\n            if (this.customer.businessname == '') {\n                this.customer.businessname = this.customer.fullname;\n            }\n            // if (this.employee.businessname == '') {\n            //     this.employee.businessname = this.employee.fullname;\n            // }\n            this.totalCost();\n            this.loaderService.display(false);\n        }, err => {\n            console.log(err);\n            this.loaderService.display(false);\n        });\n    }\n\n    private clean() {\n        this.model = {\"details\":[], \"customer_id\": -1};\n        this.model.status = true;\n    }\n\n    private goList() {\n        this.comp.openList();\n    }\n\n    removeProduct(index){\n        this.model.details.splice(index, 1);\n        this.totalCost();\n    }\n\n    private openModalCostumers() {\n        this.modalCostumer = this.dialog.open(ModalStakeholderComponent, {\n            hasBackdrop: false,\n            data: {\n                title: 'Clientes',\n                option: '1'\n            }\n        });\n\n        this.modalCostumer.afterClosed().pipe(filter((data) => data)).subscribe((data) => {\n            this.model.customer_id = data.id;\n            this.customers = data;\n        });\n    }\n\n    openAddCustomer() {\n        this.modalStakeHolderDialogRef = this.dialog.open(ModalStakeholderComponent, {\n            hasBackdrop: false,\n            data: {\n                title: 'Clientes',\n                option: '1'\n            }\n        });\n\n        this.modalStakeHolderDialogRef.afterClosed().pipe(filter((stakeHolder) => stakeHolder)).subscribe((stakeHolder) => {\n            if (stakeHolder.businessname == '') { stakeHolder.businessname = stakeHolder.name; }\n            this.customer = stakeHolder;\n            this.contact_name = JSON.parse(stakeHolder.purchases_contact);\n            this.model.payment_condition_id = this.customer.payment_condition_id;\n            this.model.customer_id = stakeHolder.id;\n            // this.model.supplier_id = supplierQuotes.supplier_id;\n            // this.supplier = supplierQuotes.stakeholder_info;\n            // this.contact_name[\"name_sales_contact\"] = supplierQuotes.supplier_info.sales_contact.name;\n            // this.model.payment_condition_id = supplierQuotes.payment_condition_id;\n        });\n    }\n\n    openAddEmployees() {\n        this.modalStakeHolderDialogRef = this.dialog.open(ModalStakeholderComponent, {\n            hasBackdrop: false,\n            data: {\n                title: 'Vendedores',\n                option: '3'\n            }\n        });\n\n        this.modalStakeHolderDialogRef.afterClosed().pipe(filter((stakeHolder) => stakeHolder)).subscribe((stakeHolder) => {\n            console.log(stakeHolder);\n            if (stakeHolder.businessname == '') { stakeHolder.businessname = stakeHolder.name; }\n            this.seller[\"fullname\"] = stakeHolder.name;\n            this.model.seller_employee_id = stakeHolder.id;\n            console.log(this.seller);\n        });\n    }\n\n    private openModalProducts() {\n        this.modalProducts = this.dialog.open(ModalProductsComponent, {\n            hasBackdrop: false,\n            data: {\n                title: 'Productos'\n            }\n        });\n        this.modalProducts.afterClosed().pipe(filter((data) => data)).subscribe((data) => {\n            let movement = new Object( {\n                \"product_id\": data.id,\n                \"product\": {\"sku\": data.sku, \"display_name\": data.display_name, \"averageunitcost\": data.averageunitcost, \"units\":data.units},\n                \"batch\": \"\",\n                \"fraction\": false,\n                \"location\": \"\",\n                \"expiration_date\": \"\",\n                \"units\":\"\",\n                \"discount\": this.customer.global_discount,\n                \"unit_cost\":\"\" \n            });\n             this.model.details.push(movement);\n\n            // var exist = false;\n            // this._pharmadrugs.forEach((element, index) => {\n            //     if (element.name == data.name) {\n            //         exist = true;\n            //     }\n            //     if (this._pharmadrugs.length == index + 1) {\n            //         if (!exist) {\n            //             this._pharmadrugs.push(data);\n            //         }\n            //     }\n            // });\n        });\n    }\n\n    totalCost(){\n        this.model.total = 0;\n        this.model.details.forEach(element => {\n            this.model.total = this.model.total + (element.units * element.product.averageunitcost * (1-(element.discount/100)));\n          });\n    }\n\n    private openModalDeliveryPoints() {\n        this.modalDeliveryPoints = this.dialog.open(ModalDeliveryPointsComponent, {\n            hasBackdrop: false,\n            data: {\n                title: 'Puntos de dispensación'\n            }\n        });\n\n        this.modalDeliveryPoints.afterClosed().pipe(filter((data) => data)).subscribe((data) => {\n            data.delivery_point_id = data.id;\n            if (!this.model.delivery_points) {\n                this.model.delivery_points = [];\n            }\n            if (this.model.delivery_points.length == 0) {\n                data.event = false;\n                data.capita = false;\n                data.pgp = false;\n                this.model.delivery_points.push(data);\n            }\n            var exist = false;\n            this.model.delivery_points.forEach((element, index) => {\n                if (element.name == data.name) {\n                    exist = true;\n                }\n                if (this.model.delivery_points.length == index + 1) {\n                    if (!exist) {\n                        data.event = false;\n                        data.capita = false;\n                        data.pgp = false;\n                        this.model.delivery_points.push(data);\n                    }\n                }\n            });\n        });\n    }\n      \n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes-action/customers-quotes-action.component.ts","module.exports = \"<!-- LIST -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\"\\n                (keydown)=\\\"enter($event)\\\">\\n            <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\n                <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\n                    <i class=\\\"fa fa-search\\\"></i>\\n                </a>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <button *ngIf=\\\"actions[0].status\\\" mat-raised-button (click)=\\\"CUD('Guardar')\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">\\n            <mat-icon>add_circle_outline</mat-icon> Nuevo\\n        </button>\\n    </div>\\n  \\n    <div class=\\\"col-sm-12\\\">\\n  \\n        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n  \\n            <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\n                <thead>\\n                    <tr>\\n                        <th class=\\\"noAuto\\\" (click)=\\\"sort('id')\\\"># Cotización\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th (click)=\\\"sort('supplier_id')\\\">Cliente\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='supplier_id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th (click)=\\\"sort('created_at')\\\">Fecha de elaboración\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='created_at'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th (click)=\\\"sort('created_at')\\\">Fecha de vencimiento\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='created_at'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th (click)=\\\"sort('status')\\\">Estado\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='status'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\"></th>\\n                        <th *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\"></th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let item of list.data\\\">\\n                        <td>{{ item.document.prefix }}-{{item.consecutive}}</td>\\n                        <td>{{ item.stakeholder_info.fullname }}</td>\\n                        <td>{{ item.created_at }}</td>\\n                        <td>{{ item.expire_at }}</td>\\n                        <td>{{ item.status ? 'Activo' : 'Inactiva' }}</td>\\n                        <td *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\">\\n                            <button type=\\\"button\\\" mat-icon-button class=\\\"text-primary\\\" (click)=\\\"CUD('Actualizar', item)\\\">\\n                                <mat-icon>mode_edit</mat-icon>\\n                            </button>\\n                        </td>\\n                        <td *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\">\\n                            <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"CUD('Eliminar', item)\\\">\\n                                <mat-icon>delete</mat-icon>\\n                            </button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n  \\n        </div>\\n  \\n        <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"maxSize\\\"\\n            [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\n  \\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes-list/customers-quotes-list.component.html\n// module id = ../../../../../src/app/smartity/customers-quotes/customers-quotes-list/customers-quotes-list.component.html\n// module chunks = 17","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport \"rxjs/add/operator/startWith\";\nimport { LoaderService, HelperService } from '../../../shared';\nimport { CustomersQuotesComponent } from '../customers-quotes.component';\nimport { BaseList } from '../../bases/base-list';\n\n@Component({\n  selector: 'customers-quotes-list-cmp',\n  templateUrl: './customers-quotes-list.component.html'\n})\nexport class CustomersQuotesListComponent  extends BaseList implements OnInit {\n\n  constructor(\n    public router: Router,\n    public loaderService: LoaderService,\n    public helperService: HelperService,\n    private comp: CustomersQuotesComponent\n  ) {\n    super(loaderService, helperService);\n    this.urlApi = '/api/customers-quotes';\n  }\n\n  ngOnInit() {\n    this.getAll();\n  }\n\n  private CUD(action: string, row?: any) {\n    this.comp.strAction = action;\n    switch (action) {\n      case 'Guardar':\n        this.comp.id = undefined;\n        break;\n      default:\n        this.comp.id = row.id;\n        break;\n    }\n    this.comp.openActions();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes-list/customers-quotes-list.component.ts","module.exports = \"<section class=\\\"chapter\\\">\\n    <section class=\\\"hero\\\">\\n        <div class=\\\"hero-content\\\">\\n            <h1 class=\\\"hero-title\\\">Cotizaciones de Clientes</h1>\\n        </div>\\n        <p class=\\\"hero-tagline\\\">We provide amazing solutions that you can't miss</p>\\n    </section>\\n    <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\n        <div class=\\\"container-fluid with-maxwidth\\\">\\n            <div class=\\\"box box-default\\\">\\n                <div class=\\\"box-body\\\">\\n                    <customers-quotes-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\" [strAction]=\\\"strAction\\\"></customers-quotes-action-cmp>\\n                    <customers-quotes-list-cmp *ngIf=\\\"isOpenList\\\"></customers-quotes-list-cmp>\\n                </div>                 \\n            </div>\\n        </div>\\n    </article>\\n</section>                        \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes.component.html\n// module id = ../../../../../src/app/smartity/customers-quotes/customers-quotes.component.html\n// module chunks = 17","import { Component, OnInit } from '@angular/core';\nimport { Base } from '../bases/base';\n\n@Component({\n  selector: 'app-customers-quotes',\n  templateUrl: './customers-quotes.component.html'\n})\nexport class CustomersQuotesComponent extends Base implements  OnInit{\n\n  constructor(){\n      super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { CustomersQuotesComponent } from './customers-quotes.component';\nimport { CustomersQuotesActionComponent } from './customers-quotes-action/customers-quotes-action.component';\nimport { CustomersQuotesListComponent } from './customers-quotes-list/customers-quotes-list.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nconst routes: Routes = [{ path: '', component: CustomersQuotesComponent }];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    NgbModule.forRoot()\n],\ndeclarations: [\n  CustomersQuotesComponent,\n  CustomersQuotesActionComponent,\n  CustomersQuotesListComponent\n]\n})\nexport class CustomersQuotesModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/customers-quotes/customers-quotes.module.ts"],"sourceRoot":"webpack:///"}