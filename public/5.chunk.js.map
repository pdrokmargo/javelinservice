{"version":3,"sources":["C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders-action/stakeholders-action.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders-action/stakeholders-action.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders-list/stakeholders-list.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders-list/stakeholders-list.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders.module.ts"],"names":[],"mappings":"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","file":"5.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\r\\n<form #stakeHolderForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"full-width-40\\\">\\r\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-md no-margin-left\\\">\\r\\n                <mat-icon>keyboard_arrow_left</mat-icon> Regresar\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <!-- person_type_id -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <mat-select required class=\\\"full-width\\\" placeholder=\\\"Tipo de persona\\\" [(ngModel)]=\\\"_model.stakeholders_info.person_type_id\\\"\\r\\n                    name=\\\"person_type_id\\\" id=\\\"person_type_id\\\" (change)=\\\"selectPersonType()\\\">\\r\\n                    <mat-option *ngFor=\\\"let item of persons_type\\\" [value]=\\\"item.id\\\">{{ item.value }}</mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- rut -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"flex height-30\\\">\\r\\n                <span class=\\\"flex-spacer\\\"></span>\\r\\n                <mat-slide-toggle *ngIf=\\\"_model.stakeholders_info.person_type_id == 38 && _model.stakeholders_info.document_type_id == 12\\\"\\r\\n                    [labelPosition]=\\\"'before'\\\" id=\\\"rut\\\" name=\\\"rut\\\" [(ngModel)]=\\\"_model.stakeholders_info.rut\\\">RUT</mat-slide-toggle>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- document_type_id -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <mat-select (change)=\\\"changeDocumentType()\\\" required class=\\\"full-width\\\" placeholder=\\\"Tipo de documento\\\" [(ngModel)]=\\\"_model.stakeholders_info.document_type_id\\\"\\r\\n                    name=\\\"document_type_id\\\" id=\\\"document_type_id\\\">\\r\\n                    <mat-option *ngFor=\\\"let item of document_type\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- document number -->\\r\\n        <div class=\\\"col-md-4\\\" [ngClass]=\\\"\\r\\n    {\\r\\n        'col-sm-8 col-md-4' : _model.stakeholders_info.document_type_id == 14 || _model.stakeholders_info.rut, \\r\\n        'col-sm-4 col-md-6' : _model.stakeholders_info.document_type_id != 14 && !_model.stakeholders_info.rut \\r\\n    }\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input required NumberOnly  (keyup)=\\\"getRutDigit()\\\" type=\\\"text\\\" id=\\\"document_number\\\" name=\\\"document_number\\\" [(ngModel)]=\\\"_model.stakeholders_info.document_number\\\"\\r\\n                    matInput placeholder=\\\"Número de documento\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- document_number_digit -->\\r\\n        <div class=\\\"col-sm-4 col-md-2\\\" *ngIf=\\\"_model.stakeholders_info.document_type_id == 14 || _model.stakeholders_info.rut\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n            <input [disabled]=\\\"true\\\" type=\\\"text\\\" id=\\\"document_number_digit\\\" name=\\\"document_number_digit\\\" [(ngModel)]=\\\"document_number_digit\\\"\\r\\n                matInput placeholder=\\\"Dígito\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <!-- ######################################## IF PERSON NATURAL ######################################## -->\\r\\n    <!--&& !_model.stakeholders_info.rut-->\\r\\n    <ng-container *ngIf=\\\"_model.stakeholders_info.person_type_id === 38\\\">\\r\\n        <!-- firstname -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"firstname\\\" name=\\\"firstname\\\" [(ngModel)]=\\\"_model.stakeholders_info.firstname\\\" matInput placeholder=\\\"Primer nombre\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- middlename -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"middlename\\\" name=\\\"middlename\\\" [(ngModel)]=\\\"_model.stakeholders_info.middlename\\\" matInput placeholder=\\\"Segundo nombres\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- lastname -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"lastname\\\" name=\\\"lastname\\\" [(ngModel)]=\\\"_model.stakeholders_info.lastname\\\" matInput placeholder=\\\"Apellidos\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- second_surname -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"second_surname\\\" name=\\\"second_surname\\\" [(ngModel)]=\\\"_model.stakeholders_info.second_surname\\\" matInput\\r\\n                    placeholder=\\\"Segundo apellido\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n    <!-- ######################################## IF PERSON NATURAL ######################################## -->\\r\\n    <!-- legalname -->\\r\\n    <div class=\\\"col-md-3\\\" [ngClass]=\\\"{ \\r\\n        'col-md-6 ' : _model.stakeholders_info.rut || (_model.stakeholders_info.person_type_id == 39 && _model.stakeholders_info.document_type_id == 14), \\r\\n        'col-md-12 ' : !_model.stakeholders_info.rut && _model.stakeholders_info.person_type_id != 39 }\\\" *ngIf=\\\"_model.stakeholders_info.person_type_id == 39\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"legalname\\\" name=\\\"legalname\\\" [(ngModel)]=\\\"_model.stakeholders_info.legalname\\\" matInput placeholder=\\\"Razón Social\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- business name -->\\r\\n        <div class=\\\"col-md-3\\\" [ngClass]=\\\"{ \\r\\n        'col-md-6 ' : _model.stakeholders_info.person_type_id === 39 , \\r\\n        'col-md-12 ' :  _model.stakeholders_info.person_type_id !== 39 \\r\\n    }\\\" *ngIf=\\\"_model.stakeholders_info.rut || (_model.stakeholders_info.person_type_id == 39)\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"businessname\\\" name=\\\"businessname\\\" [(ngModel)]=\\\"_model.stakeholders_info.businessname\\\" matInput placeholder=\\\"Nombre del Establecimiento\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <!--country -->\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">     <mat-select required class=\\\"full-width\\\" placeholder=\\\"País\\\" [(ngModel)]=\\\"country_id\\\" name=\\\"country_id\\\" (change)=\\\"getDepartments()\\\"\\r\\n            id=\\\"country_id\\\">\\r\\n            <mat-option *ngFor=\\\"let item of countries\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select>     </mat-form-field>\\r\\n    </div>\\r\\n    <!-- department -->\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">     <mat-select required class=\\\"full-width\\\" placeholder=\\\"Departamento\\\" [(ngModel)]=\\\"department_id\\\" name=\\\"department_id\\\" (change)=\\\"getCities()\\\"\\r\\n            id=\\\"department_id\\\">\\r\\n            <mat-option *ngFor=\\\"let item of departments\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select>     </mat-form-field>\\r\\n    </div>\\r\\n    <!--city -->\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">     <mat-select required class=\\\"full-width\\\" placeholder=\\\"Ciudad\\\" [(ngModel)]=\\\"city_id\\\" name=\\\"city_id\\\"\\r\\n            id=\\\"city_id\\\">\\r\\n            <mat-option *ngFor=\\\"let item of cities\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n        </mat-select>     </mat-form-field>\\r\\n    </div>\\r\\n    <!-- address -->\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n            <input required type=\\\"text\\\" id=\\\"address\\\" name=\\\"address\\\" [(ngModel)]=\\\"_model.stakeholders_info.address\\\" matInput placeholder=\\\"Dirección\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <!-- phone_number -->\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n            <input required NumberOnly type=\\\"text\\\" id=\\\"phone_number\\\" name=\\\"phone_number\\\" [(ngModel)]=\\\"_model.stakeholders_info.phone_number\\\"\\r\\n                matInput placeholder=\\\"Teléfono\\\">\\r\\n        </mat-form-field>\\r\\n        \\r\\n    </div>\\r\\n    <!-- email -->\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"website\\\" name=\\\"website\\\" [(ngModel)]=\\\"_model.stakeholders_info.email\\\" matInput placeholder=\\\"Correo electrónico\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- ######################################## PROFILE ######################################## -->\\r\\n\\r\\n    <div class=\\\"row mark\\\">\\r\\n        <!--  -->\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h4>Perfiles como tercero</h4>\\r\\n        </div>\\r\\n        <!--  -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-checkbox id=\\\"is_customer\\\" name=\\\"is_customer\\\" [(ngModel)]=\\\"_model.profile.is_customer\\\">Cliente</mat-checkbox>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-checkbox id=\\\"is_supplier\\\" name=\\\"is_supplier\\\" [(ngModel)]=\\\"_model.profile.is_supplier\\\">Proveedor</mat-checkbox>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-checkbox id=\\\"is_seller\\\" name=\\\"is_seller\\\" [(ngModel)]=\\\"_model.profile.is_seller\\\">Vendedor</mat-checkbox>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-checkbox id=\\\"is_employee\\\" name=\\\"is_employee\\\" [(ngModel)]=\\\"_model.profile.is_employee\\\">Empleado</mat-checkbox>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n                <mat-checkbox id=\\\"is_laboratory\\\" name=\\\"is_laboratory\\\" [(ngModel)]=\\\"_model.profile.is_laboratory\\\">Laboratorio</mat-checkbox>\\r\\n            </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-checkbox id=\\\"is_maker\\\" name=\\\"is_maker\\\" [(ngModel)]=\\\"_model.profile.is_maker\\\">Fabricante</mat-checkbox>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-checkbox id=\\\"is_importer\\\" name=\\\"is_importer\\\" [(ngModel)]=\\\"_model.profile.is_importer\\\">Importador</mat-checkbox>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <mat-checkbox id=\\\"is_holder_sanitary\\\" name=\\\"is_holder_sanitary\\\" [(ngModel)]=\\\"_model.profile.is_holder_sanitary\\\">Titular\\r\\n                de registro sanitario</mat-checkbox>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- ######################################## PROFILE ######################################## -->\\r\\n\\r\\n    <!-- ######################################################################################### -->\\r\\n    <div class=\\\"mark\\\" *ngIf=\\\"(_model.stakeholders_info.rut || _model.stakeholders_info.document_type_id === 14) && (_model.profile.is_supplier || _model.profile.is_customer)\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h2 class=\\\"article-title text-center margin-10\\\">Información Tributaria</h2>\\r\\n        </div>\\r\\n        <!-- tax_regime_id -->\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <mat-select required class=\\\"full-width\\\" placeholder=\\\"Tipo de regimen\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.tax_regime_id\\\"\\r\\n                    name=\\\"tax_regime_id\\\" id=\\\"tax_regime_id\\\">\\r\\n                    <mat-option *ngFor=\\\"let item of tax_regime\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- constitution_date -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input matInput [matDatepicker]=\\\"pickerConstitutionDate\\\" id=\\\"constitution_date\\\" name=\\\"constitution_date\\\" placeholder=\\\"Fecha de constitución\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.constitution_date\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-datepicker #pickerConstitutionDate></mat-datepicker>\\r\\n        </div>\\r\\n        <span class=\\\"col-sm-12\\\"></span>\\r\\n        <!-- retention_for_rent -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"retention_for_rent\\\" name=\\\"retention_for_rent\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.retention_for_rent\\\">Retención por renta</mat-slide-toggle>\\r\\n        </div>\\r\\n        <!-- big_contributor -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"big_contributor\\\" name=\\\"big_contributor\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.big_contributor\\\">Gran Contribuyente</mat-slide-toggle>\\r\\n        </div>\\r\\n        <!-- codes_iva -->\\r\\n        <div class=\\\"col-md-6\\\" [ngClass]=\\\"{ 'col-md-6' : !_model.comercial_stakeholders_info.codes.iva, 'col-sm-3' : _model.comercial_stakeholders_info.codes.iva }\\\">\\r\\n            <mat-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"codes_iva\\\" name=\\\"codes_iva\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.iva\\\">Retenedor\\r\\n                de IVA</mat-slide-toggle>\\r\\n        </div>\\r\\n        <!-- code_iva_percent -->\\r\\n        <div class=\\\"col-sm-3\\\" *ngIf=\\\"_model.comercial_stakeholders_info.codes.iva\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"code_iva_percent\\\" name=\\\"code_iva_percent\\\" placeholder=\\\"Porcentaje\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.iva_percent\\\"\\r\\n                    matInput>\\r\\n                <span matSuffix>% &nbsp;</span>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- codes_ica -->\\r\\n        <div class=\\\"col-md-6\\\" [ngClass]=\\\"{ 'col-md-6 ' : !_model.comercial_stakeholders_info.codes.ica, 'col-sm-3 ' : _model.comercial_stakeholders_info.codes.ica }\\\">\\r\\n            <mat-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"codes_ica\\\" name=\\\"codes_ica\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.ica\\\">Retenedor de ICA</mat-slide-toggle>\\r\\n        </div>\\r\\n        <!-- code_ica_percent -->\\r\\n        <div class=\\\"col-sm-3\\\" *ngIf=\\\"_model.comercial_stakeholders_info.codes.ica\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"code_ica_percent\\\" name=\\\"code_ica_percent\\\" placeholder=\\\"Porcentaje\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.ica_percent\\\"\\r\\n                    matInput>\\r\\n                <span matSuffix>% &nbsp;</span>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <span class=\\\"col-sm-12\\\"></span>\\r\\n        <!-- codes_ciiu -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"ciiu\\\" name=\\\"ciiu\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.ciiu\\\" matInput placeholder=\\\"Código CIIU\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- ######################################################################################### -->\\r\\n    <div class=\\\"mark\\\" *ngIf=\\\"_model.profile.is_customer\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h2 class=\\\"article-title text-center margin-10\\\">Información del Cliente</h2>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <!-- customer_class_id -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\"><mat-select class=\\\"full-width\\\" placeholder=\\\"Clases de cliente\\\" [(ngModel)]=\\\"_model.customer.customer_class_id\\\" name=\\\"customer_class_id\\\"\\r\\n                id=\\\"customer_class_id\\\">\\r\\n                <mat-option *ngFor=\\\"let item of customers_class\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n            </mat-select>     </mat-form-field>\\r\\n        </div>\\r\\n        <!-- debt_type_id -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">     <mat-select required class=\\\"full-width\\\" placeholder=\\\"Tipo de cartera\\\" [(ngModel)]=\\\"_model.customer.debt_type_id\\\" name=\\\"debt_type_id\\\"\\r\\n                id=\\\"city_id\\\">\\r\\n                <mat-option *ngFor=\\\"let item of portfolio_type\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n            </mat-select>     </mat-form-field>\\r\\n        </div>\\r\\n        <!-- credit_limit -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                    \\r\\n                <input appMycurrency required type=\\\"text\\\" id=\\\"customer_credit_limit\\\" name=\\\"customer_credit_limit\\\" [(ngModel)]=\\\"_model.customer.credit_limit\\\"\\r\\n                    matInput placeholder=\\\"Cupo del crédito\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- sales_representative_id -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">     <mat-select required class=\\\"full-width\\\" placeholder=\\\"Vendedor\\\" [(ngModel)]=\\\"_model.customer.sales_representative_id\\\" name=\\\"sales_representative_id\\\"\\r\\n                id=\\\"sales_representative_id\\\">\\r\\n                <mat-option *ngFor=\\\"let item of sales_representatives\\\" [value]=\\\"item.id\\\">{{ item.stakeholder_info.fullname }}</mat-option>\\r\\n            </mat-select>     </mat-form-field>\\r\\n        </div>\\r\\n        <!-- global_discount -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                    \\r\\n                <input appMycurrency type=\\\"text\\\" id=\\\"global_discount\\\" name=\\\"global_discount\\\" max=\\\"12\\\" [(ngModel)]=\\\"_model.customer.global_discount\\\"\\r\\n                    matInput placeholder=\\\"Descuento Global\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- payment_condition -->\\r\\n        <div *ngIf=\\\"_model.customer.debt_type_id == 18\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">     <mat-select [required]=\\\"_model.customer.debt_type_id == 17\\\" class=\\\"full-width\\\" placeholder=\\\"Condición de pago\\\" [(ngModel)]=\\\"_model.customer.payment_condition_id\\\"\\r\\n                name=\\\"payment_condition\\\" id=\\\"payment_condition\\\">\\r\\n                <mat-option *ngFor=\\\"let item of conditions_payment\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n            </mat-select>     </mat-form-field>\\r\\n        </div>\\r\\n        <!-- credit_limit_blocking -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"credit_limit_blocking\\\" name=\\\"credit_limit_blocking\\\" [(ngModel)]=\\\"_model.customer.credit_limit_blocking\\\">Bloqueo por cupo</mat-slide-toggle>\\r\\n        </div>\\r\\n        <span class=\\\"col-sm-12\\\"></span>\\r\\n        <!-- days_early_payment -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                    <input appMycurrency type=\\\"text\\\" id=\\\"days_early_payment\\\" name=\\\"days_early_payment\\\" [(ngModel)]=\\\"_model.customer.days_early_payment\\\"\\r\\n                        matInput placeholder=\\\"Descuento de pronto pago\\\">\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- days_grace -->\\r\\n        <div *ngIf=\\\"_model.customer.debt_type_id == 18\\\" class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input NumberOnly [required]=\\\"_model.customer.debt_type_id == 17\\\" required type=\\\"text\\\" id=\\\"days_grace\\\" name=\\\"days_grace\\\"\\r\\n                    [(ngModel)]=\\\"_model.customer.days_grace\\\" matInput placeholder=\\\"Días de gracia\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- late_payment_blocking -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"late_payment_blocking\\\" name=\\\"late_payment_blocking\\\" [(ngModel)]=\\\"_model.customer.late_payment_blocking\\\">Bloqueo por mora</mat-slide-toggle>\\r\\n        </div>\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"box-header no-padding-h text-center\\\">\\r\\n                <h5 class=\\\"text-left\\\">Contacto de Compras</h5>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- name_purchases_contact -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"name_purchases_contact\\\" name=\\\"name_purchases_contact\\\" [(ngModel)]=\\\"_model.customer.purchases_contact.name\\\"\\r\\n                    matInput placeholder=\\\"Nombre\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- phone_purchases_contact -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"phone_purchases_contact\\\" name=\\\"phone_purchases_contact\\\" [(ngModel)]=\\\"_model.customer.purchases_contact.phone\\\"\\r\\n                    matInput placeholder=\\\"Teléfono\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- email_purchases_contact -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"email_purchases_contact\\\" name=\\\"email_purchases_contact\\\" [(ngModel)]=\\\"_model.customer.purchases_contact.email\\\"\\r\\n                    matInput placeholder=\\\"Correo electrónico\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"box-header no-padding-h text-center\\\">\\r\\n                <h5 class=\\\"text-left\\\">Contacto de Cartera</h5>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- name_debt_contact -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"name_debt_contact\\\" name=\\\"name_debt_contact\\\" [(ngModel)]=\\\"_model.customer.debt_contact.name\\\" matInput\\r\\n                    placeholder=\\\"Nombre\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- phone_debt_contact -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" NumberOnly id=\\\"phone_debt_contact\\\" name=\\\"phone_debt_contact\\\" [(ngModel)]=\\\"_model.customer.debt_contact.phone\\\"\\r\\n                    matInput placeholder=\\\"Teléfono\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- email_debt_contact -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"email_debt_contact\\\" name=\\\"email_debt_contact\\\" [(ngModel)]=\\\"_model.customer.debt_contact.email\\\" matInput\\r\\n                    placeholder=\\\"Correo electrónico \\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"full-width\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"full-width: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Puntos de envío</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddSucursal()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n\\r\\n                                    <th>Sucursal</th>\\r\\n                                    <th>Ubicación</th>\\r\\n                                    <th class=\\\"w-40\\\"></th>\\r\\n                                    <th class=\\\"w-40\\\"></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.shipping_points; let index = index\\\">\\r\\n\\r\\n                                    <td>{{ item.name }}</td>\\r\\n                                    <td>{{ item.country.value + ', ' + item.department.value + ', ' + item.city.value }}</td>\\r\\n                                    <td class=\\\"w-40\\\">\\r\\n                                        <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"removeSucursal(item)\\\">\\r\\n                                            <mat-icon>delete</mat-icon>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"w-40\\\">\\r\\n                                        <button type=\\\"button\\\" mat-icon-button (click)=\\\"openSucursal(item, index)\\\">\\r\\n                                            <mat-icon>remove_red_eye</mat-icon>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n\\r\\n        <div class=\\\"full-width\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"full-width: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Contrato institucional</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddInstitucionalSale()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n\\r\\n                                    <th>No. Contrato</th>\\r\\n                                    <th>Entidad contratante</th>\\r\\n                                    <!--th></th-->\\r\\n                                    <th class=\\\"w-40\\\"></th>\\r\\n                                    <th class=\\\"w-40\\\"></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.institutional_sale_contract; let index = index\\\">\\r\\n\\r\\n                                    <td>{{ item.contract_number }}</td>\\r\\n                                    <td>{{ item.contracting_entity }}</td>\\r\\n                                    <!--td>\\r\\n                                        <a *ngIf=\\\"item.file !== ' ' && item.file !== null\\\" href=\\\"{{ item.file }}\\\">\\r\\n                                            <i class=\\\"fa fa-paperclip fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td-->\\r\\n                                    <td class=\\\"w-40\\\">\\r\\n                                        <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"removeInstitucionalSale(item)\\\">\\r\\n                                            <mat-icon>delete</mat-icon>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"w-40\\\">\\r\\n                                        <button type=\\\"button\\\" mat-icon-button (click)=\\\"openInstitucionalSale(item, index)\\\">\\r\\n                                            <mat-icon>remove_red_eye</mat-icon>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"full-width\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"full-width: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Resoluciones de controlado</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddControlledResolution()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>No. Resolución</th>\\r\\n                                    <th>Fecha de as</th>\\r\\n                                    <th>Fecha de expiración</th>\\r\\n                                    <th>Estado</th>\\r\\n                                    <th class=\\\"w-40\\\"></th>\\r\\n                                    <th class=\\\"w-40\\\"></th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.controlled_resolution\\\">\\r\\n\\r\\n                                    <td>{{ item.resolution_number }}</td>\\r\\n                                    <td>{{ item.issue_date | date: 'dd-MM-yyyy '}}</td>\\r\\n                                    <td>{{ item.expiration_date | date: 'dd-MM-yyyy '}}</td>\\r\\n                                    <td>{{ item.state ? 'Actvo ' : 'Inactivo ' }}</td>\\r\\n                                    <td class=\\\"w-40\\\">\\r\\n                                        <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"removeControlledResolution(item)\\\">\\r\\n                                            <mat-icon>delete</mat-icon>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"w-40\\\">\\r\\n                                        <button type=\\\"button\\\" mat-icon-button (click)=\\\"openControlledResolution(item)\\\">\\r\\n                                            <mat-icon>remove_red_eye</mat-icon>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"full-width\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"full-width: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Resoluciones de monopolio</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button type=\\\"button\\\" [disabled]=\\\"_model.customer.shipping_points.length == 0\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\"\\r\\n                            (click)=\\\"openAddMonopolyResolution()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>No. Resolución</th>\\r\\n                                    <th>Fecha de as</th>\\r\\n                                    <th>Fecha de expiración</th>\\r\\n                                    <th>Estado</th>\\r\\n                                    <th class=\\\"w-40\\\"></th>\\r\\n                                    <th class=\\\"w-40\\\"></th>\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.monopoly_resolution; let index = index\\\">\\r\\n\\r\\n                                    <td>{{ item.resolution_number }}</td>\\r\\n                                    <td>{{ item.issue_date | date: 'dd-MM-yyyy '}}</td>\\r\\n                                    <td>{{ item.expiration_date | date: 'dd-MM-yyyy '}}</td>\\r\\n                                    <td>{{ item.state ? 'Actvo ' : 'Inactivo ' }}</td>\\r\\n                                    <td class=\\\"w-40\\\">\\r\\n                                        <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"removeMonopolyResolution(item)\\\">\\r\\n                                            <mat-icon>delete</mat-icon>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"w-40\\\">\\r\\n                                        <button type=\\\"button\\\" mat-icon-button (click)=\\\"openMonopolyResolution(item, index)\\\">\\r\\n                                            <mat-icon>remove_red_eye</mat-icon>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- ######################################################################################### -->\\r\\n    <div class=\\\"mark\\\" *ngIf=\\\"_model.profile.is_supplier\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h2 class=\\\"article-title text-center margin-10\\\">Información del proveedor</h2>\\r\\n        </div>\\r\\n        <!-- class supplier -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">     <mat-select required class=\\\"full-width\\\" placeholder=\\\"Clase de proveedor\\\" [(ngModel)]=\\\"_model.supplier.supplier_class_id\\\" name=\\\"supplier_class_id\\\"\\r\\n                id=\\\"supplier_class_id\\\">\\r\\n                <mat-option *ngFor=\\\"let item of suppliers_class\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n            </mat-select>     </mat-form-field>\\r\\n        </div>\\r\\n        <!-- credit_limit -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                \\r\\n                <input appMycurrency required type=\\\"text\\\" id=\\\"supplier_credit_limit\\\" name=\\\"supplier_credit_limit\\\" [(ngModel)]=\\\"_model.supplier.credit_limit\\\"\\r\\n                    matInput placeholder=\\\"Cupo de crédito\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- supplier_global_discount -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                    \\r\\n                <input appMycurrency type=\\\"text\\\" id=\\\"supplier_global_discount\\\" name=\\\"supplier_global_discount\\\" max=\\\"12\\\" [(ngModel)]=\\\"_model.supplier.global_discount\\\"\\r\\n                    matInput placeholder=\\\"Descuento Global\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- supplier_payment_condition -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">     <mat-select required class=\\\"full-width\\\" placeholder=\\\"Condición de pago\\\" [(ngModel)]=\\\"_model.supplier.payment_condition_id\\\"\\r\\n                name=\\\"supplier_payment_condition\\\" id=\\\"supplier_payment_condition\\\">\\r\\n                <mat-option *ngFor=\\\"let item of conditions_payment\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n            </mat-select>     </mat-form-field>\\r\\n        </div>\\r\\n        <!-- supplier_days_early_payment -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"supplier_days_early_payment\\\" name=\\\"supplier_days_early_payment\\\" [(ngModel)]=\\\"_model.supplier.days_early_payment\\\"\\r\\n                    matInput placeholder=\\\"Días de pronto pago\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- supplier_days_grace -->\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"supplier_days_grace\\\" name=\\\"supplier_days_grace\\\" [(ngModel)]=\\\"_model.supplier.days_grace\\\"\\r\\n                    matInput placeholder=\\\"Días de gracia\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- payment_method_id -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">     <mat-select required class=\\\"full-width\\\" placeholder=\\\"Método de pago\\\" [(ngModel)]=\\\"_model.supplier.payment_method_id\\\" name=\\\"supplier_payment_method_id\\\"\\r\\n                id=\\\"supplier_class_id\\\">\\r\\n                <mat-option *ngFor=\\\"let item of payment_method\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n            </mat-select>     </mat-form-field>\\r\\n        </div>\\r\\n        <!-- purchase_order -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"purchase_order\\\" name=\\\"purchase_order\\\" [(ngModel)]=\\\"_model.supplier.purchase_order\\\">Exige orden de compra</mat-slide-toggle>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"full-width\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Cuentas bancarias</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddBankAccount()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n\\r\\n                                    <th>Nombre</th>\\r\\n                                    <th>Cuenta</th>\\r\\n                                    <th>Tipo de cuenta</th>\\r\\n                                    <th class=\\\"w-40\\\"></th>\\r\\n                                    <th class=\\\"w-40\\\"></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.supplier.bank_accounts; let index = index\\\">\\r\\n\\r\\n                                    <td>{{ item.bank_name }}</td>\\r\\n                                    <td>{{ item?.account_number }}</td>\\r\\n                                    <td>{{ item.bank_account_type_name }}</td>\\r\\n                                    <td class=\\\"w-40\\\">\\r\\n                                        <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"removeBankAccount(item)\\\">\\r\\n                                            <mat-icon>delete</mat-icon>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"w-40\\\">\\r\\n                                        <button type=\\\"button\\\" mat-icon-button (click)=\\\"openBankAccount(item, index)\\\">\\r\\n                                            <mat-icon>remove_red_eye</mat-icon>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"box-header no-padding-h text-center\\\">Contacto de Venta</div>\\r\\n        </div>\\r\\n        <!-- name_sales_contact -->\\r\\n        <div class=\\\"col-md-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"name_sales_contact\\\" name=\\\"name_sales_contact\\\" [(ngModel)]=\\\"_model.supplier.sales_contact.name\\\"\\r\\n                    matInput placeholder=\\\"Nombre del contacto de compras\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- phone_sales_contact -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"phone_sales_contact\\\" name=\\\"phone_sales_contact\\\" [(ngModel)]=\\\"_model.supplier.sales_contact.phone\\\"\\r\\n                    matInput placeholder=\\\"Teléfono del contacto de compras\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- email_sales_contact -->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"email_sales_contact\\\" name=\\\"email_sales_contact\\\" [(ngModel)]=\\\"_model.supplier.sales_contact.email\\\"\\r\\n                    matInput placeholder=\\\"Correo electrónico del contacto de compras\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-12\\\" [class.btn-action-container]=\\\"booActive\\\">\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"!stakeHolderForm.form.valid\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\"\\r\\n            (click)=\\\"save()\\\">{{strAction}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders-action/stakeholders-action.component.html\n// module id = ../../../../../src/app/smartity/stakeholders/stakeholders-action/stakeholders-action.component.html\n// module chunks = 5","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar, MatDialogRef, MatDialog } from '@angular/material';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { Response } from '@angular/http';\nimport { StakeholdersComponent } from '../stakeholders.component';\nimport { BaseModel } from '../../bases/base-model';\nimport {\n    ModalConfirmationComponent,\n    ModalSucursalComponent,\n    ModalResolutionComponent,\n    ModalInstitucionalSaleContractComponent,\n    ModalBankAccountComponent\n} from '../../modals';\nimport { filter } from 'rxjs/operators';\nimport { isNullOrUndefined, log } from 'util';\n\n@Component({\n    selector: 'stakeholders-action-cmp',\n    templateUrl: 'stakeholders-action.component.html'\n})\nexport class StakeholdersActionComponent extends BaseModel implements OnInit {\n\n    private _model: any = {\n        stakeholders_info: {},\n        comercial_stakeholders_info: {\n            codes: {}\n        },\n        customer: {\n            purchases_contact: {},\n            debt_contact: {},\n            shipping_points: [],\n            institutional_sale_contract: [],\n            controlled_resolution: [],\n            monopoly_resolution: []\n        },\n        employee: {},\n        supplier: {\n            bank_accounts: [],\n            sales_contact: {}\n        },\n        laboratory: {},\n        profile: {}\n    }\n    private document_number_digit = undefined;\n    private countries: any[] = [];\n    private country_id: any;\n    private departments: any[] = [];\n    private department_id: any;\n    private city_id: any;\n    private cities: any[] = [];\n    /**\n     * Array para los combos\n     */\n    private tax_regime: any[] = [];\n    private document_type: any[] = [];\n    private document_type_n: any[] = [];\n    private document_type_j: any[] = [];\n    private persons_type: any[] = [];\n    private conditions_payment: any[] = [];\n    private portfolio_type: any[] = [];\n    private sales_representatives: any[] = [];\n    private suppliers_class: any[] = [];\n    private customers_class: any[] = [];\n    private payment_method: any[] = [];\n    /**\n     *  Modalas\n     */\n    private sucursalDialogRef: MatDialogRef<ModalSucursalComponent>;\n    private confirmDialogRef: MatDialogRef<ModalConfirmationComponent>;\n    private confirmDialogRef1: MatDialogRef<ModalConfirmationComponent>;\n    private confirmDialogRef2: MatDialogRef<ModalConfirmationComponent>;\n    private confirmDialogRef3: MatDialogRef<ModalConfirmationComponent>;\n    private confirmDialogRef4: MatDialogRef<ModalConfirmationComponent>;\n    private resolutionDialogRef: MatDialogRef<ModalResolutionComponent>;\n    private institutionalSaleDialogRef: MatDialogRef<ModalInstitucionalSaleContractComponent>;\n    private bankAccountDialogRef: MatDialogRef<ModalBankAccountComponent>;\n    /**\n     *\n     */\n    constructor(\n        private loaderService: LoaderService,\n        private helperService: HelperService,\n        public snackBar: MatSnackBar,\n        private comp: StakeholdersComponent,\n        private dialog: MatDialog\n    ) {\n        super();\n    }\n\n\n    ngOnInit() {\n        this.clean();\n        this.getCollection();\n        this.getSalesRepresentative();\n        if (this.numId !== undefined) {\n            this.getDataById();\n        }\n    }\n    private getCollection() {\n        this.loaderService.display(true);\n        this.helperService.POST(`/api/collections`, ['COUNTRIES', 'TAX_REGIME', 'TYPES_OF_DOCUMENTS', 'PORTFOLIO_TYPE', 'PERSONS_TYPE', 'PAYMENT_CONDITION', 'SUPPLIERS_CLASS', 'CUSTOMERS_CLASS', 'PAYMENT_METHOD']).subscribe(rs => {\n            const res = rs.json();\n            this.countries = res.COUNTRIES;\n            this.tax_regime = res.TAX_REGIME;\n            var document_type = res.TYPES_OF_DOCUMENTS;\n            this.portfolio_type = res.PORTFOLIO_TYPE;\n            this.persons_type = res.PERSONS_TYPE;\n            this.conditions_payment = res.PAYMENT_CONDITION;\n            this.suppliers_class = res.SUPPLIERS_CLASS;\n            this.customers_class = res.CUSTOMERS_CLASS;\n            this.payment_method = res.PAYMENT_METHOD;\n            document_type.filter(item => { if (item.code !== 'NIT') { this.document_type_n.push(item); } });\n            document_type.filter(item => { if (item.code == 'NIT' || item.code == 'VAT') { this.document_type_j.push(item); } });\n            this.loaderService.display(false);\n        }, err => {\n            console.log(err);\n            this.loaderService.display(false);\n        });\n    }\n    private getSalesRepresentative() {\n        this.loaderService.display(true);\n        this.helperService.GET(`/api/sales_representatives?all=all`).subscribe(rs => {\n            const res = rs.json();\n            this.sales_representatives = res.data;\n            this.loaderService.display(false);\n        }, err => {\n            console.log(err);\n            this.loaderService.display(false);\n        });\n    }\n    private getDepartments() {\n        this.loaderService.display(true);\n        this.helperService.GET(`/api/departamentos?pais_id=${this.country_id}`).subscribe(rs => {\n            const res = rs.json();\n            this.departments = res['departamentos'];\n            this.loaderService.display(false);\n        }, err => {\n            console.log(err);\n            this.loaderService.display(false);\n        });\n    }\n    private getCities() {\n        this.loaderService.display(true);\n        this.helperService.GET(`/api/ciudades?departamento_id=${this.department_id}`).subscribe(rs => {\n            const res = rs.json();\n            this.cities = res['ciudades'];\n            this.loaderService.display(false);\n        }, err => {\n            console.log(err);\n            this.loaderService.display(false);\n        });\n    }\n    private save() {\n        this.loaderService.display(true);\n        this._model.country_id = this.country_id;\n        this._model.department_id = this.department_id;\n        this._model.city_id = this.city_id;\n        const formData: FormData = new FormData();\n        formData.append('data', JSON.stringify(this._model));\n        switch (this.strAction) {\n            case 'Guardar':\n                this.helperService.POSTFORMDATA(`/api/stakeholders`, formData).subscribe(rs => {\n                    const res = rs.json();\n                    if (res.store) {\n                        this.snackBar.open(res.message, 'Guardado', { duration: 4000 });\n                        this.goList();\n                    }\n                }, err => {\n                    this.snackBar.open(err.message, 'Guardado', { duration: 4000 });\n                    this.loaderService.display(false);\n                });\n                break;\n            case 'Actualizar':\n                this.helperService.POSTFORMDATA(`/api/update_stake_holder/${this.numId}`, formData).subscribe(rs => {\n                    const res = rs.json();\n                    if (res.update) {\n                        this.snackBar.open(res.message, 'Actualización', { duration: 4000 });\n                        this.comp.openList();\n                    }\n                }, err => {\n                    this.snackBar.open(err.message, 'Actualización', { duration: 4000 });\n                    this.loaderService.display(true);\n                });\n                break;\n            case 'Eliminar':\n                this.helperService.DELETE(`/api/stakeholders/${this.numId}`).subscribe(rs => {\n                    const res = rs.json();\n                    if (res.delete) {\n                        this.snackBar.open(res.message, 'Eliminación', { duration: 4000 });\n                        this.comp.openList();\n                    }\n                }, err => {\n                    this.snackBar.open(err.message, 'Eliminación', { duration: 4000 });\n                    this.loaderService.display(true);\n                });\n                break;\n        }\n\n    }\n    private getDataById(): void {\n        this.loaderService.display(true);\n        this.helperService.GET(`/api/stakeholders/${this.numId}`).subscribe(rs => {\n            const res = rs.json();\n            if (res['data']['comercial_stakeholders_info'] == null) {\n                res['data']['comercial_stakeholders_info'] = {\n                    codes: {}\n                };\n            }\n            if (res['data']['customer']) {\n                if (res['data']['customer']['purchases_contact'] == null) {\n                    res['data']['customer']['purchases_contact'] = {};\n                }\n                if (res['data']['customer']['debt_contact'] == null) {\n                    res['data']['customer']['debt_contact'] = {};\n                }\n            } else {\n                res['data']['customer'] = {\n                    purchases_contact: {},\n                    debt_contact: {},\n                    shipping_points: [],\n                    institutional_sale_contract: [],\n                    controlled_resolution: [],\n                    monopoly_resolution: []\n                };\n            }\n\n\n            this._model = res['data'];\n            this.selectPersonType(false);\n            this.country_id = res.country_id;\n            this.getDepartments();\n            this.department_id = res.department_id;\n            this.city_id = res.city_id;\n            this.getCities();\n            this.getRutDigit();\n\n            if (!this._model.comercial_stakeholders_info) {\n                this._model.comercial_stakeholders_info = {\n                    codes: {}\n                }\n            }\n            if (!this._model.customer) {\n                this._model.customer = {\n                    purchases_contact: {},\n                    debt_contact: {},\n                    shipping_points: [],\n                    institutional_sale_contract: [],\n                    controlled_resolution: []\n                }\n            }\n            if (!this._model.employee) {\n                this._model.employee = {}\n            }\n            if (!this._model.laboratory) {\n                this._model.laboratory = {}\n            }\n            if (!this._model.supplier) {\n                this._model.supplier = {\n                    bank_accounts: [],\n                    sales_contact: {}\n                }\n            }\n        }, err => {\n            this.loaderService.display(false);\n        });\n    }\n    private clean() {\n        this._model = {\n            stakeholders_info: {},\n            comercial_stakeholders_info: {\n                codes: {}\n            },\n            customer: {\n                purchases_contact: {},\n                debt_contact: {},\n                shipping_points: [],\n                institutional_sale_contract: [],\n                controlled_resolution: [],\n                monopoly_resolution: []\n            },\n            employee: {},\n            laboratory: {},\n            supplier: {\n                bank_accounts: [],\n                sales_contact: {}\n            },\n            profile: {}\n        }\n    }\n    private goList() {\n        this.comp.openList();\n    }\n    private openAddSucursal() {\n        this.sucursalDialogRef = this.dialog.open(ModalSucursalComponent, { hasBackdrop: false });\n        this.sucursalDialogRef.afterClosed().pipe(filter((shipping_point) => shipping_point)).subscribe((shipping_point) => {\n            if (shipping_point) {\n                this._model.customer.shipping_points.push(shipping_point);\n            }\n        });\n    }\n    private openSucursal(data, index) {\n        let _data = Object.assign({}, data);\n        let cloned = Object.assign({}, data);\n        this.sucursalDialogRef = this.dialog.open(ModalSucursalComponent, {\n            hasBackdrop: false,\n            data: _data\n        });\n        this.sucursalDialogRef.afterClosed().subscribe(x => {\n            if (x) {\n                this._model.customer.shipping_points[index] = x;\n            } else {\n                data = cloned;\n            }\n        });\n    }\n    private removeSucursal(obj: any) {\n        this.confirmDialogRef = this.dialog.open(ModalConfirmationComponent, {\n            hasBackdrop: false, data: {\n                message: 'Desea remover el registro?',\n                title: 'Confirmar',\n                button_confirm: 'Si',\n                button_close: 'No'\n            }\n        });\n        this.confirmDialogRef.afterClosed().subscribe((confirmation) => {\n            if (confirmation) {\n                const index = this._model.customer.shipping_points.indexOf(obj);\n                this._model.customer.shipping_points.splice(index, 1);\n            }\n        });\n    }\n    private removeInstitucionalSale(obj: any) {\n        this.confirmDialogRef1 = this.dialog.open(ModalConfirmationComponent, {\n            hasBackdrop: false, data: {\n                message: 'Desea remover el registro?',\n                title: 'Confirmar',\n                button_confirm: 'Si',\n                button_close: 'No'\n            }\n        });\n        this.confirmDialogRef1.afterClosed().subscribe((confirmation) => {\n            if (confirmation) {\n                var index = this._model.customer.institutional_sale_contract.indexOf(obj);\n                this._model.customer.institutional_sale_contract.splice(index, 1);\n            }\n        });\n    }\n    private removeControlledResolution(obj: any) {\n        this.confirmDialogRef2 = this.dialog.open(ModalConfirmationComponent, {\n            hasBackdrop: false,\n            data: {\n                message: 'Desea remover el registro?',\n                title: 'Confirmar',\n                button_confirm: 'Si',\n                button_close: 'No'\n            }\n        });\n\n        this.confirmDialogRef2.afterClosed().subscribe(confirmation => {\n            if (confirmation) {\n                var index = this._model.customer.controlled_resolution.indexOf(obj);\n                this._model.customer.controlled_resolution.splice(index, 1);\n            }\n        });\n\n    }\n    private removeMonopolyResolution(obj: any) {\n        this.confirmDialogRef3 = this.dialog.open(ModalConfirmationComponent, {\n            hasBackdrop: false,\n            data: {\n                message: 'Desea remover el registro?',\n                title: 'Confirmar',\n                button_confirm: 'Si',\n                button_close: 'No'\n            }\n        });\n\n        this.confirmDialogRef3.afterClosed().subscribe(confirmation => {\n            if (confirmation) {\n                var index = this._model.customer.monopoly_resolution.indexOf(obj);\n                this._model.customer.monopoly_resolution.splice(index, 1);\n            }\n        });\n    }\n    private removeBankAccount(obj: any) {\n\n        this.confirmDialogRef4 = this.dialog.open(ModalConfirmationComponent, {\n            hasBackdrop: false,\n            data: {\n                message: 'Desea remover el registro?',\n                title: 'Confirmar',\n                button_confirm: 'Si',\n                button_close: 'No'\n            }\n        });\n\n        this.confirmDialogRef4.afterClosed().subscribe(confirmation => {\n            if (confirmation) {\n                var index = this._model.supplier.bank_accounts.indexOf(obj);\n                this._model.supplier.bank_accounts.splice(index, 1);\n            }\n        });\n\n    }\n    private openAddControlledResolution() {\n        this.resolutionDialogRef = this.dialog.open(ModalResolutionComponent, {\n            hasBackdrop: false,\n            data: {\n                shipping_points: this._model.customer.shipping_points,\n                title: 'Agregar Resolución de controlado'\n            }\n        });\n        this.resolutionDialogRef.afterClosed().pipe(filter(ctr_resolution => ctr_resolution)).subscribe(ctr_resolution => {\n            this._model.customer.controlled_resolution.push(ctr_resolution);\n        });\n    }\n    private openControlledResolution(data) {\n        this.resolutionDialogRef = this.dialog.open(ModalResolutionComponent, {\n            hasBackdrop: false,\n            data: {\n                shipping_points: this._model.customer.shipping_points,\n                title: 'Agregar Resolución de controlado',\n                data: data\n            }\n        });\n    }\n    private openAddInstitucionalSale() {\n        this.institutionalSaleDialogRef = this.dialog.open(ModalInstitucionalSaleContractComponent, {\n            hasBackdrop: false,\n            data: {\n                title: 'Agregar Contrato institucional'\n            }\n        });\n\n        this.institutionalSaleDialogRef\n            .afterClosed()\n            .pipe(filter(institutional_sale_contract => institutional_sale_contract))\n            .subscribe(institutional_sale_contract => {\n                this._model.customer.institutional_sale_contract.push(institutional_sale_contract);\n            });\n    }\n    private openInstitucionalSale(data, index) {\n        let _data = Object.assign({}, data);\n        let cloned = Object.assign({}, data);\n        this.institutionalSaleDialogRef = this.dialog.open(ModalInstitucionalSaleContractComponent, {\n            hasBackdrop: false,\n            data: {\n                title: 'Agregar Contrato institucional',\n                data: _data\n            }\n        });\n        this.institutionalSaleDialogRef.afterClosed().subscribe(x => {\n            if (x) {\n                this._model.customer.institutional_sale_contract[index] = x;\n            } else {\n                data = cloned\n            }\n        });\n    }\n    private openAddMonopolyResolution() {\n        this.resolutionDialogRef = this.dialog.open(ModalResolutionComponent, {\n            hasBackdrop: false,\n            data: {\n                shipping_points: this._model.customer.shipping_points,\n                title: 'Agregar Resolución de monopolio'\n            }\n        });\n\n        this.resolutionDialogRef.afterClosed().pipe().subscribe(data => {\n            if (data) {\n                this._model.customer.monopoly_resolution.push(data);\n            }\n            console.log(data);\n        });\n\n    }\n    private openMonopolyResolution(data, index) {\n        let _data = Object.assign({}, data);\n        let cloned = Object.assign({}, data);\n        this.resolutionDialogRef = this.dialog.open(ModalResolutionComponent, {\n            hasBackdrop: false,\n            data: {\n                shipping_points: this._model.customer.shipping_points,\n                title: 'Agregar Resolución de monopolio',\n                data: _data\n            }\n        });\n        this.resolutionDialogRef.afterClosed().subscribe(x => {\n\n            if (x) {\n                this._model.customer.monopoly_resolution[index] = x\n            } else {\n                data = cloned;\n            }\n        });\n    }\n    private openAddBankAccount() {\n        this.bankAccountDialogRef = this.dialog.open(ModalBankAccountComponent, {\n            hasBackdrop: false,\n            data: {\n                title: 'Cuenta bancaria'\n            }\n        });\n\n        this.bankAccountDialogRef.afterClosed().pipe(filter(bank_account => bank_account)).subscribe(bank_account => {\n            this._model.supplier.bank_accounts.push(bank_account);\n        });\n    }\n    private openBankAccount(data, index) {\n        let _data = Object.assign({}, data);\n        let cloned = Object.assign({}, data);\n        this.bankAccountDialogRef = this.dialog.open(ModalBankAccountComponent, {\n            hasBackdrop: false,\n            data: {\n                title: 'Cuenta bancaria',\n                data: _data\n            }\n        });\n\n        this.bankAccountDialogRef.afterClosed().subscribe(x => {\n            if (x) {\n                this._model.supplier.bank_accounts[index] = x;\n            } else {\n                data = cloned;\n            }\n        });\n    }\n    private zero_fill(i_valor, num_ceros) {\n        let relleno = '';\n        let i = 1;\n        let salir = 0;\n        while (!salir) {\n            let total_caracteres = i_valor.length + i;\n            if (i > num_ceros || total_caracteres > num_ceros) {\n                salir = 1;\n            } else {\n                relleno = relleno + \"0\";\n            }\n            i++\n        }\n\n        i_valor = relleno + i_valor\n        return i_valor\n    }\n    private getRutDigit() {\n        if (this._model.stakeholders_info.document_type_id == 14 || this._model.stakeholders_info.rut) {\n            let i_rut = this._model.stakeholders_info.document_number;\n            let pesos = [71, 67, 59, 53, 47, 43, 41, 37, 29, 23, 19, 17, 13, 7, 3];\n            let rut_fmt = this.zero_fill(i_rut, 15)\n            let suma = 0;\n            let digitov;\n            for (let i = 0; i <= 14; i++) {\n                suma += rut_fmt.substring(i, i + 1) * pesos[i];\n            }\n\n            let resto = suma % 11;\n            if (resto === 0 || resto === 1) {\n                digitov = resto;\n            } else {\n                digitov = 11 - resto;\n            }\n\n            this.document_number_digit = digitov;\n        } else {\n            this.document_number_digit = undefined;\n        }\n    }\n    private selectPersonType(est = true) {\n        if (est) {\n            this._model.stakeholders_info.rut = false;\n            this._model.stakeholders_info.document_type_id = undefined;\n        }\n\n        if (this._model.stakeholders_info.person_type_id == 39) {\n            this.document_type = this.document_type_j;\n        } else {\n            this.document_type = this.document_type_n;\n        }\n    }\n    private changeDocumentType() {\n        this._model.stakeholders_info.rut = false;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders-action/stakeholders-action.component.ts","module.exports = \"<!-- LIST -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\" (keydown)=\\\"enter($event)\\\">\\n            <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\n                <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\n                    <i class=\\\"fa fa-search\\\"></i>\\n                </a>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\" *ngIf=\\\"!noaction\\\">\\n        <button *ngIf=\\\"actions[0].status\\\" mat-raised-button (click)=\\\"CUD('Guardar')\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">\\n            <mat-icon>add_circle_outline</mat-icon> Nuevo\\n        </button>\\n    </div>\\n\\n    <div class=\\\"col-sm-12\\\">\\n\\n        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n\\n            <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\n                <thead>\\n                    <tr>\\n                        <!-- <th class=\\\"noAuto\\\" (click)=\\\"sort('i.id')\\\">ID\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='i.id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th> -->\\n                        <th (click)=\\\"sort('firstname')\\\">Nombre\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='firstname'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th (click)=\\\"sort('document_number')\\\">Número de documento\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n\\n                        <th (click)=\\\"sort('c.value')\\\">Ubicación\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='c.value'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th (click)=\\\"sort('i.status')\\\">Estado\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='i.status'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\"></th>\\n                        <th *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\"></th>\\n\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let item of list.data\\\">\\n                        <td *ngIf=\\\"item.person_type_id === 38\\\">{{ item.name }}</td>\\n                        <td *ngIf=\\\"item.person_type_id === 39\\\">{{ item.legalname }}</td>\\n                        <td>{{ item.document_number }}</td>\\n                        <td>{{ item.country }}<span *ngIf=\\\"item.department\\\">, {{ item.department }}</span><span *ngIf=\\\"item.department\\\">, {{ item.city }}</span></td>\\n                        <td>{{ item.status ? 'Activo' : 'Inactivo' }}</td>\\n                        <td *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\">\\n                            <button type=\\\"button\\\" mat-icon-button class=\\\"text-primary\\\" (click)=\\\"CUD('Actualizar',item)\\\">\\n                                <mat-icon>mode_edit</mat-icon>\\n                            </button>\\n                        </td>\\n                        <td *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\">\\n                            <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"CUD('Eliminar',item)\\\">\\n                                <mat-icon>delete</mat-icon>\\n                            </button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n\\n        </div>\\n        <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"6\\\" [rotate]=\\\"true\\\"\\n            [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders-list/stakeholders-list.component.html\n// module id = ../../../../../src/app/smartity/stakeholders/stakeholders-list/stakeholders-list.component.html\n// module chunks = 5","import { Component, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\nimport { DataTableResource } from 'angular-4-data-table';\nimport { FormControl } from '@angular/forms';\nimport 'rxjs/add/operator/startWith';\nimport { MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseList } from '../../bases/base-list';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { Response } from '@angular/http';\nimport { StakeholdersComponent } from '../stakeholders.component';\n\n@Component({\n    selector: 'stakeholders-list-cmp',\n    templateUrl: 'stakeholders-list.component.html',\n    styles: []\n})\n\nexport class StakeholdersListComponent extends BaseList implements OnInit {\n\n    @Output() select = new EventEmitter();\n    @Input() noaction: boolean;\n    @Input() type: string;\n\n    constructor(public router: Router,\n        public loaderService: LoaderService,\n        public helperService: HelperService,\n        private comp: StakeholdersComponent) {\n        super(loaderService, helperService);\n        this.urlApi = '/api/stakeholders';\n    }\n\n    ngOnInit() {\n        this.getAll();\n    }\n\n    private CUD(action:string, row?:any){\n        this.comp.strAction = action;\n        switch (action) {\n            case 'Guardar':\n                this.comp.id = undefined;\n                break;\n            default:\n                this.comp.id = row.id;\n                break;\n        }\n        this.comp.openActions();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders-list/stakeholders-list.component.ts","module.exports = \"<section class=\\\"chapter\\\">\\n    <section class=\\\"hero\\\">\\n        <div class=\\\"hero-content\\\">\\n            <h1 class=\\\"hero-title\\\">Terceros</h1>\\n        </div>\\n        <p class=\\\"hero-tagline\\\">A través de esta opción, usted podrá crear los clientes, proveedores, vendedores y empleados</p>\\n    </section>\\n    <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\n        <div class=\\\"container-fluid with-maxwidth\\\">\\n            <div class=\\\"box box-default\\\">\\n                <div class=\\\"box-body\\\">\\n                    <stakeholders-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\" [strAction]=\\\"strAction\\\"></stakeholders-action-cmp>\\n                    <stakeholders-list-cmp *ngIf=\\\"isOpenList\\\"></stakeholders-list-cmp>\\n                </div>               \\n            </div>\\n        </div>\\n    </article>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders.component.html\n// module id = ../../../../../src/app/smartity/stakeholders/stakeholders.component.html\n// module chunks = 5","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataTableResource } from 'angular-4-data-table';\nimport { FormControl } from '@angular/forms';\nimport { Base } from '../bases/base';\n\n@Component({\n    selector: 'stakeholders-cmp',\n    templateUrl: 'stakeholders.component.html',\n    styles: []\n})\n\nexport class StakeholdersComponent extends Base implements OnInit {\n\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { StakeholdersComponent } from \"./stakeholders.component\";\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { StakeholdersActionComponent } from \"./stakeholders-action/stakeholders-action.component\";\nimport { StakeholdersListComponent } from \"./stakeholders-list/stakeholders-list.component\";\nimport { MatDialogModule } from '@angular/material';\n\nconst routes: Routes = [{ path: '', component: StakeholdersComponent }];\n\n@NgModule({\n    imports: [\n        CommonModule,        \n        RouterModule.forChild(routes),\n        SharedModule,\n        NgbModule.forRoot(),\n        MatDialogModule      \n    ],\n    declarations: [\n        StakeholdersComponent,\n        StakeholdersActionComponent,\n        StakeholdersListComponent\n    ]\n    \n})\nexport class StakeholdersModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/stakeholders/stakeholders.module.ts"],"sourceRoot":"webpack:///"}