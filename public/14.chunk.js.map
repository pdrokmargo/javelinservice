{"version":3,"sources":["C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery-action/delivery-action.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery-action/delivery-action.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery-list/delivery-list.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery-list/delivery-list.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery.component.html","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery.component.ts","C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery.module.ts"],"names":[],"mappings":"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","file":"14.chunk.js","sourcesContent":["module.exports = \"<form #modelForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12 margin-bottom-40\\\">\\n      <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-md no-margin-left\\\">\\n        <mat-icon>keyboard_arrow_left</mat-icon> Regresar\\n      </button>\\n    </div>\\n    <!-- Afiliado -->\\n    <div class=\\\"col-sm-12 col-md-9 margin-bottom\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input readonly matInput type=\\\"text\\\" placeholder=\\\"Afiliado\\\" [(ngModel)]=\\\"affiliate.display_name\\\" id=\\\"affiliate\\\"\\n          name=\\\"affiliate\\\" />\\n        <mat-icon matSuffix mdSuffix class=\\\"wh-24 pointer\\\" (click)=\\\"openModalAffiliates()\\\">search</mat-icon>\\n      </mat-form-field>\\n    </div>\\n    <!-- estado -->\\n    <!-- <div class='col-sm-12 col-md-3 col-lg-3 margin-bottom left'>\\n      <div class=\\\"flex\\\">\\n        <span class=\\\"flex-spacer\\\"></span>\\n        <mat-slide-toggle [labelPosition]=\\\"'before'\\\" id=\\\"state\\\" name=\\\"state\\\" [(ngModel)]=\\\"model.state\\\">Estado\\n        </mat-slide-toggle>\\n      </div>\\n    </div> -->\\n    <!-- pendientes -->\\n    <div class=\\\"col-sm-12 col-md-12 margin-bottom\\\"  *ngIf=\\\"numId == undefined\\\">\\n\\n        <div class=\\\"flex margin-bottom\\\">\\n          <div class=\\\"box-header no-padding-h\\\">Entregas Programadas: Pendientes y Entregas Futuras</div>\\n          <span class=\\\"flex-spacer\\\"></span>\\n        </div>\\n        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n          <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\n            <thead>\\n              <tr>\\n                <th>PLU\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                </th>\\n                <th>Producto\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                </th>\\n                <!-- <th>Laboratorio/Fabricante\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                </th> -->\\n                <th>Unidades a Entregar\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                </th>\\n                <!-- <th>Fecha a Entregar\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                </th> -->\\n                <th>Tipo de Entrega Programada\\n                    <span class=\\\"glyphicon sort-icon\\\"\\n                      [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                  </th>\\n                <!-- <th>Estado\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                </th> -->\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let detail of arrScheduledDeliveries;let index = index;\\\">\\n                  <!-- <td style=\\\"width:80px;\\\">{{detail.delivery.consecutive}}</td> -->\\n                  <td>{{detail.product.sku}}</td>\\n                  <td>{{detail.product.name}}<span style=\\\"font-weight:bold;\\\" *ngIf=\\\"detail.product.comercial\\\">({{detail.product.comercial_name}})</span></td>\\n                  <td style=\\\"width:80px;\\\"><span style=\\\"width:80px;\\\">{{detail.units}}</span></td>\\n                  <td style=\\\"width:80px;\\\"><span style=\\\"width:80px;\\\">{{detail.scheduled_delivery_type.value}}</span></td>\\n  \\n                <td>\\n                  <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\"\\n            class=\\\"btn-w-md no-margin-left\\\" (click)=\\\"openModalProducts()\\\">Entregar</button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n      \\n      <!-- historial de entregas -->\\n      <div class=\\\"col-sm-12 col-md-12 margin-bottom\\\" *ngIf=\\\"numId == undefined\\\">\\n  \\n        <div class=\\\"flex margin-bottom\\\">\\n          <div class=\\\"box-header no-padding-h\\\">Historial de Entregas</div>\\n          <span class=\\\"flex-spacer\\\"></span>\\n        </div>\\n        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n          <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\" style=\\\"white-space: normal;\\\">\\n            <thead>\\n              <tr>\\n                  <th># Entrega\\n                      <span class=\\\"glyphicon sort-icon\\\"\\n                        [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                    </th>\\n                <th>PLU\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                </th>\\n                <th>Producto\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                </th>\\n                <th>Unidades Solicitadas\\n                    <span class=\\\"glyphicon sort-icon\\\"\\n                      [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                  </th>\\n                <th>Unidades Entregadas\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                </th>\\n                <th>Fecha de Entrega\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                </th>\\n                <th>Fecha de Creación\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let detail of arrAffiliateDeliveries;let index = index;\\\">\\n                <td style=\\\"width:80px;\\\">{{detail.delivery.consecutive}}</td>\\n                <td>{{detail.product.sku}}</td>\\n                <td>{{detail.product.name}}<span style=\\\"font-weight:bold;\\\" *ngIf=\\\"detail.product.comercial\\\">({{detail.product.comercial_name}})</span></td>\\n                <td style=\\\"width:80px;\\\"><span style=\\\"width:80px;\\\">{{detail.requested_units}}</span></td>\\n                <td style=\\\"width:80px;\\\"><span style=\\\"width:80px;\\\">{{detail.delivered_units}}</span></td>\\n                <td style=\\\"width:80px;\\\"><span style=\\\"width:80px;\\\">{{detail.delivery.delivery_date | date:'dd/MM/yyyy'}}</span></td>\\n                <td style=\\\"width:80px;\\\"><span style=\\\"width:80px;\\\">{{detail.delivery.date | date:'dd/MM/yyyy'}}</span></td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    \\n    <!-- Afiliado -->\\n    <div class=\\\"col-sm-12 col-md-12 margin-bottom\\\"  *ngIf=\\\"numId == undefined\\\">\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input readonly matInput type=\\\"text\\\" placeholder=\\\"Afiliado\\\" [(ngModel)]=\\\"affiliate.display_name\\\" id=\\\"affiliate2\\\"\\n            name=\\\"affiliate2\\\" />\\n        </mat-form-field>\\n      </div>  \\n    <!-- Diagnóstico -->\\n    <div class=\\\"col-sm-12 col-md-3 margin-bottom\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-select class=\\\"full-width\\\" placeholder=\\\"Diagnóstico\\\" [(ngModel)]=\\\"model.medical_diagnostic_id\\\"\\n          name=\\\"medical_diagnostic_id\\\" id=\\\"medical_diagnostic_id\\\">\\n          <mat-option *ngFor=\\\"let item of arrMedicalDiagnostics\\\" [value]=\\\"item.id\\\">{{item.code}}: {{item.description}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n    <!-- Formulado el -->\\n    <div class=\\\"col-md-3 margin-bottom\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"pickerFormulaDate\\\" placeholder=\\\"Formulado el\\\" [max]=\\\"model.created_at\\\"\\n          [(ngModel)]=\\\"model.formula_date\\\" name=\\\"formula_date\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"pickerFormulaDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #pickerFormulaDate></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n    <!-- Entregado el -->\\n    <div class=\\\"col-md-3 margin-bottom\\\">\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"pickerDeliveryDate\\\" placeholder=\\\"Entregado el\\\" [max]=\\\"model.created_at\\\"\\n          [(ngModel)]=\\\"model.delivery_date\\\" name=\\\"delivery_date\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"pickerDeliveryDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #pickerDeliveryDate></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n    <!-- Creado el -->\\n    <div class=\\\"col-md-3 margin-bottom\\\">\\n      <mat-form-field>\\n        <input matInput readonly placeholder=\\\"Creado el\\\" name=\\\"created_at\\\"\\n          value=\\\"{{model.date | date:'dd/MM/yyyy'}}\\\">\\n      </mat-form-field>\\n    </div>\\n    <!-- Modalidad -->\\n    <div class=\\\"col-sm-12 col-md-3 margin-bottom\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-select class=\\\"full-width\\\" placeholder=\\\"Modalidad\\\" [(ngModel)]=\\\"model.modality_id\\\" name=\\\"modality_id\\\"\\n          id=\\\"modality_id\\\">\\n          <mat-option *ngFor=\\\"let item of arrModality\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n    <!-- Red Adscrita -->\\n    <div class=\\\"col-sm-12 col-md-3 margin-bottom\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-select class=\\\"full-width\\\" placeholder=\\\"Red Adscrita\\\" [(ngModel)]=\\\"model.ips_id\\\" name=\\\"ips_id\\\" id=\\\"ips_id\\\">\\n          <mat-option *ngFor=\\\"let item of arrIPS\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n    <!-- # Autorización -->\\n    <div class=\\\"col-md-3 margin-bottom\\\" *ngIf=\\\"model.modality_id == 1399\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Número de Autorización\\\" name=\\\"authorization\\\" [(ngModel)]=\\\"model.authorization\\\">\\n      </mat-form-field>\\n    </div>\\n\\n    \\n\\n    <!-- productos -->\\n    <div class=\\\"col-sm-12 col-md-12 margin-bottom\\\">\\n\\n      <div class=\\\"flex margin-bottom\\\">\\n        <div class=\\\"box-header no-padding-h\\\">Productos</div>\\n        <span class=\\\"flex-spacer\\\"></span>\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\"\\n          class=\\\"btn-w-md no-margin-left\\\" (click)=\\\"openModalProducts()\\\">Añadir</button>\\n      </div>\\n      <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n        <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\" style=\\\"white-space: normal;\\\">\\n          <thead>\\n            <tr>\\n              <th>PLU\\n                <span class=\\\"glyphicon sort-icon\\\"\\n                  [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n              </th>\\n              <th>Producto\\n                <span class=\\\"glyphicon sort-icon\\\"\\n                  [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n              </th>\\n              <th>Unidades Solicitadas\\n                <span class=\\\"glyphicon sort-icon\\\"\\n                  [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n              </th>\\n              <th>Unidades Entregadas\\n                <span class=\\\"glyphicon sort-icon\\\"\\n                  [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n              </th>\\n              <!-- <th># Entrega / Total\\n                <span class=\\\"glyphicon sort-icon\\\"\\n                  [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n              </th> -->\\n              <th>Lote\\n                <span class=\\\"glyphicon sort-icon\\\"\\n                  [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n              </th>\\n              <th>Fecha de Vencimiento\\n                <span class=\\\"glyphicon sort-icon\\\"\\n                  [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n              </th>\\n              <th *ngIf=\\\"numId == undefined\\\"><span *ngIf=\\\"numId == undefined\\\">Stock</span><span *ngIf=\\\"numId != undefined\\\">Unidades x Lote</span>\\n                  <span class=\\\"glyphicon sort-icon\\\"\\n                    [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n              </th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let detail of model.details;let index = index;\\\">\\n              <td>{{detail.product.sku}}</td>\\n              <td>{{detail.product.name}}<span style=\\\"font-weight:bold;\\\" *ngIf=\\\"detail.product.comercial\\\">({{detail.product.comercial_name}})</span> <!-- <span *ngIf=\\\"detail.deliveryCovered\\\"> Entrega 1 / {{detail.requested_units/detail.delivered_units}}</span>--></td>\\n              <td style=\\\"width:80px;\\\" *ngIf=\\\"numId != undefined\\\">{{detail.requested_units}}</td><td style=\\\"width:80px;\\\" *ngIf=\\\"numId == undefined\\\"><mat-form-field style=\\\"width:50px;\\\"><input matInput (input)=\\\"validateRequested(detail.requested_units, index, -1)\\\" [disabled]=\\\"detail.stockSelected == undefined\\\"  type=\\\"number\\\" [(ngModel)]=\\\"detail.requested_units\\\" name=\\\"requested_units{{index}}\\\" /></mat-form-field></td>\\n              <td style=\\\"width:80px;\\\" *ngIf=\\\"numId != undefined\\\">{{detail.delivered_units}}</td><td style=\\\"width:80px;\\\" *ngIf=\\\"numId == undefined\\\"><mat-form-field style=\\\"width:50px;\\\"><input (input)=\\\"validateDelivered(detail.requested_units, detail.delivered_units, index)\\\" [disabled]=\\\"detail.stockSelected == undefined\\\" matInput type=\\\"number\\\" [(ngModel)]=\\\"detail.delivered_units\\\" name=\\\"delivered_units{{index}}\\\" /></mat-form-field></td>\\n              <!-- <td style=\\\"width:200px;\\\" *ngIf=\\\"numId != undefined\\\">{{detail.delivery_number}} / {{detail.total_deliveries}}</td><td style=\\\"width:100px;\\\" *ngIf=\\\"numId == undefined\\\"><mat-form-field style=\\\"width:30px;\\\"><input [readonly]=\\\"true\\\" matInput type=\\\"number\\\" [(ngModel)]=\\\"detail.delivery_number\\\" name=\\\"delivery_number{{index}}\\\" /></mat-form-field> / <mat-form-field style=\\\"width:30px;\\\"><input [readonly]=\\\"detail.delivered_units == detail.requested_units\\\" [disabled]=\\\"detail.stockSelected == undefined\\\" matInput type=\\\"number\\\" [(ngModel)]=\\\"detail.total_deliveries\\\" name=\\\"total_deliveries{{index}}\\\" /></mat-form-field></td> -->\\n              \\n              <td colspan=\\\"3\\\" *ngIf=\\\"numId == undefined\\\">\\n                <span *ngIf=\\\"detail.stockSelected == undefined\\\">Sin Existencias</span>\\n                  <div class=\\\"col-sm-12 col-md-12 margin-bottom\\\" *ngFor=\\\"let itemX of detail.stocks; index as i\\\">\\n                      <mat-form-field class=\\\"full-width\\\">\\n                        <mat-select [(ngModel)]=\\\"detail.stockSelected[i]\\\" (change)=\\\"validateRequested(detail.requested_units, index, i)\\\" class=\\\"full-width\\\" placeholder=\\\"Seleccionar\\\" name=\\\"lote_expire{{i}}\\\">\\n                          <mat-option *ngFor=\\\"let item of itemX\\\" [value]=\\\"item\\\">{{item.batch}} - {{item.expiration_date}} <span *ngIf=\\\"numId == undefined\\\">- {{item.fraction_stock}}</span></mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                    </div>\\n              </td>\\n              <td colspan=\\\"3\\\" *ngIf=\\\"numId != undefined\\\">\\n                <span *ngFor=\\\"let item of detail.stocks\\\">\\n                    {{item.batch}} - {{item.expiration_date | date:'dd/MM/yyyy'}} <br>\\n                </span>\\n                \\n              </td>\\n              <!-- <td>{{detail.stockSelected}}</td> -->\\n              <td class=\\\"w-40\\\">\\n                <button type=\\\"button\\\" class=\\\"text-danger\\\" mat-icon-button (click)=\\\"removeProduct(index)\\\">\\n                  <mat-icon>delete</mat-icon>\\n                </button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n\\n\\n\\n    <!--notas-->\\n    <div class='col-sm-12 col-md-12 margin-bottom'>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <textarea type=\\\"text\\\" id=\\\"notes\\\" name=\\\"notes\\\" [(ngModel)]=\\\"model.notes\\\" matInput placeholder=\\\"Nota\\\"></textarea>\\n      </mat-form-field>\\n    </div>\\n\\n\\n    <div class=\\\"col-sm-12\\\">\\n      <button [disabled]=\\\"action_active ? false : !modelForm.form.valid\\\" mat-raised-button color=\\\"primary\\\"\\n        class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openModalConfirmYesNo()\\\">{{strAction}}</button>\\n        <button [disabled]=\\\"action_active ? false : !modelForm.form.valid\\\" mat-raised-button color=\\\"primary\\\"\\n        class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"print()\\\">Imprimir</button>\\n    </div>\\n  </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery-action/delivery-action.component.html\n// module id = ../../../../../src/app/smartity/delivery/delivery-action/delivery-action.component.html\n// module chunks = 14","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseModel } from '../../bases/base-model';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { DeliveryComponent } from '../delivery.component';\nimport { filter } from 'rxjs/operators';\nimport { ModalAffiliatesComponent, ModalConfirmationComponent, ModalProductsComponent } from '../../modals';\n\n@Component({\n  selector: 'delivery-action-cmp',\n  templateUrl: './delivery-action.component.html'\n})\nexport class DeliveryActionComponent extends BaseModel implements OnInit {\n\n  private modalAffiliates: MatDialogRef<ModalAffiliatesComponent>;\n  private modalProducts: MatDialogRef<ModalProductsComponent>;\n  private modalConfirmYesNo: MatDialogRef<ModalConfirmationComponent>;\n  private affiliate: any = {};\n  private pharmadrugs: any = {};\n  private arrModality: any = [];\n  private arrMedicalDiagnostics: any = [];\n  private arrIPS: any = [];\n  private arrAffiliateDeliveries: any = [];\n  private arrScheduledDeliveries: any = [];\n  private arrStock: any = [];\n\n\n  constructor(public snackBar: MatSnackBar,\n    private route: ActivatedRoute,\n    private router: Router,\n    private loaderService: LoaderService,\n    private helperService: HelperService,\n    private comp: DeliveryComponent,\n    private dialog: MatDialog) {\n    super();\n  }\n\n\n  ngOnInit() {\n    this.clean();\n    this.getCollection();\n    this.getMedicalDiagnostics();\n    if (this.numId !== undefined) {\n      this.getDataById();\n    } else {\n      this.model.date = new Date();\n    }\n  }\n\n  private print(){\n    window.onafterprint = (event) => {\n      this.goList();\n    };\n    window.print();\n  }\n\n//   var beforePrint = function() {\n//     console.log('Functionality to run before printing.');\n// };\n\n  private getCollection() {\n    this.helperService.POST(`/api/collections`, [\"DELIVERY_CONTRACT_MODALITY\"]).subscribe(rs => {\n      let res = rs.json();\n      this.arrModality = res.DELIVERY_CONTRACT_MODALITY;\n    }, err => { });\n  }\n\n  private getMedicalDiagnostics() {\n    this.helperService.GET(`/api/medical-diagnostics`).subscribe(rs => {\n      let res = rs.json();\n      this.arrMedicalDiagnostics = res.medical_diagnostics;\n    }, err => { });\n  }\n  private getScheduledDeliveries() {\n    this.helperService.GET(`/api/scheduled-deliveries/${this.affiliate.id}`).subscribe(rs => {\n      let res = rs.json();\n      this.arrScheduledDeliveries = res.scheduled_deliveries.data;\n      \n    }, err => { });\n  }\n  private getAffiliateDeliveries() {\n    this.helperService.GET(`/api/affiliate-deliveries/${this.affiliate.id}`).subscribe(rs => {\n      let res = rs.json();\n      this.arrAffiliateDeliveries = res.affiliate_deliveries.data;\n      this.groupAffiliateDeliveriesDetails();\n    }, err => { });\n  }\n  private clean() {\n    this.model = { \"details\": [], \"delivery_date\": new Date() };\n    this.model.state = true;\n  }\n  private goList() {\n    this.comp.openList();\n  }\n\n  private updateRowStock(index, detail) {\n\n    // detail.stockSelected = detail.stocks[index].fraction_stock;\n\n  }\n  private groupAffiliateDeliveriesDetails(): void {\n    let details = [];\n    let i = 0;\n    do {\n      let detail = {};\n      detail = this.arrAffiliateDeliveries[i];\n      let passed = false;\n      details.forEach(d => {\n        if (d.delivery_id == detail['delivery_id']) {\n          passed = true;\n        }\n      });\n      if(!passed){\n        details.push(detail);\n      }\n      i++;\n    } while (this.arrAffiliateDeliveries.length > i);\n    this.arrAffiliateDeliveries = details;\n    console.log(this.arrAffiliateDeliveries);\n    console.log(details);\n  }\n  private groupBatchs(): void {\n    let details = [];\n    let i = 0;\n    let empty = false;\n    let toRemove = [];\n    do {\n      let detail = {};\n      if (!empty && this.model.details.length > 0) {\n        detail = this.model.details[i];\n      }\n      let passed = false;\n      details.forEach(d => {\n        if (d.product_id == detail['product_id']) {\n          passed = true;\n        }\n      });\n      if (!passed) {\n        detail['stocks'] = [];\n        this.model.details.forEach(d => {\n          if (!empty && d.product_id == detail['product_id'] && !passed) {\n            let _stockSelected = {};\n            _stockSelected['batch'] = d.batch;\n            _stockSelected['expiration_date'] = d.expiration_date;\n            detail['stocks'].push(_stockSelected);\n          }\n        });\n        details.push(detail);\n        passed = false;\n      }\n      i++;\n    } while (this.model.details.length > i);\n    this.model.details = details;\n    console.log(this.model.details);\n    console.log(details);\n  }\n  private getDataById(): void {\n    this.loaderService.display(true);\n    this.helperService.GET(`/api/deliveries/${this.numId}`).subscribe(rs => {\n      let res = rs.json();\n      this.model = res.data;\n      this.groupBatchs();\n      this.affiliate = this.model.affiliate;\n      this.arrIPS = this.affiliate.delivery_contract.ips;\n      this.pharmadrugs = JSON.parse(this.affiliate.delivery_contract.pharmadrugs);\n      this.getScheduledDeliveries();\n      this.getAffiliateDeliveries();\n      this.loaderService.display(false);\n    }, err => {\n      console.log(err);\n      this.loaderService.display(false);\n    });\n\n  }\n\n\n  private openModalAffiliates() {\n    this.modalAffiliates = this.dialog.open(ModalAffiliatesComponent, {\n      hasBackdrop: false,\n      data: {\n        title: 'Afiliados',\n        option: '1'\n      }\n    });\n\n    this.modalAffiliates.afterClosed().pipe(filter((data) => data)).subscribe((data) => {\n      this.model.affiliate_id = data.id;\n      this.affiliate = data;\n      this.arrIPS = this.affiliate.delivery_contract.ips;\n      this.pharmadrugs = JSON.parse(this.affiliate.delivery_contract.pharmadrugs);\n      this.getScheduledDeliveries();\n      this.getAffiliateDeliveries();\n    });\n  }\n  private openModalProducts() {\n    this.modalProducts = this.dialog.open(ModalProductsComponent, {\n      hasBackdrop: false,\n      data: {\n        title: 'Productos'\n      }\n    });\n    this.modalProducts.afterClosed().pipe(filter((data) => data)).subscribe((data) => {\n      this.loaderService.display(true);\n      this.helperService.GET(`/api/product/${data.id}`).subscribe(rs => {\n        let res = rs.json();\n        let canBeDelivered = false;\n        this.pharmadrugs.forEach(element => {\n          if (res.data.product_detail.pharmaceutical_drug_id == element.pharmaceutical_drug_id) {\n            canBeDelivered = true;\n          }\n        });\n        if (canBeDelivered) {\n          this.helperService.GET(`/api/stocks-products/${data.id}`).subscribe(rs => {\n            let res = rs.json();\n            let movement = new Object({\n              \"product_id\": data.id,\n              \"product\": data,\n              \"batch\": \"\",\n              \"requested_units\": 0,\n              \"delivered_units\": 0,\n              \"delivery_number\": 1,\n              \"total_deliveries\": 1,\n              \"stocks\": [res.data],\n              \"location\": \"\",\n              \"expiration_date\": \"\",\n              \"stockSelected\": [res.data[0]],\n              \"deliveryCovered\": false,\n              \"scheduleddelivery_id\": '',\n            });\n            console.log(res.data[0]);\n            let productIsLoaded = false;\n            this.model.details.forEach(element => {\n              if (element.product.sku == data.sku) {\n                productIsLoaded = true;\n              }\n            });\n            if (!productIsLoaded) {\n              this.model.details.push(movement);\n              if (movement[\"stockSelected\"] == undefined) {\n                this.snackBar.open('El producto no tiene existencias. Se creará un pendiente al guardar la dispensación.', 'Dispensación', { duration: 10000 });\n              }\n            } else {\n              this.snackBar.open('El producto ya se encuentra en la lista', 'Dispensación', { duration: 7000 });\n            }\n\n            this.loaderService.display(false);\n          }, err => {\n            console.log(err);\n            this.loaderService.display(false);\n          });\n        } else {\n          this.snackBar.open('El producto no está habilitado para el contrato del afiliado', 'Contratos', { duration: 7000 });\n        }\n        this.loaderService.display(false);\n      }, err => {\n        console.log(err);\n        this.loaderService.display(false);\n      });\n    });\n  }\n  private removeProduct(index) {\n    this.model.details.splice(index, 1);\n  }\n  private validateDelivered(unitsR, unitsD, index) {\n    let sumStocks = 0;\n    this.model.details[index][\"stockSelected\"].forEach(element => {\n      sumStocks += element[\"fraction_stock\"];\n    });\n    if (unitsD > unitsR) {\n      this.snackBar.open('Se han modificado automáticamente las unidades de entrega debido a que se ingresaron cantidades superiores a las unidades solicitadas (' + unitsR + '). ', 'Producto a dispensar', { duration: 7000 });\n      this.model.details[index][\"delivered_units\"] = unitsR;\n    } else if (unitsD > sumStocks) {\n      this.snackBar.open('Se han modificado automáticamente las unidades de entrega debido a que se ingresaron cantidades superiores a las unidades existentes (' + sumStocks + '). ', 'Producto a dispensar', { duration: 7000 });\n      this.model.details[index][\"delivered_units\"] = sumStocks;\n    }\n  }\n  private validateRequested(units, index, i) {\n    this.model.details[index][\"delivered_units\"] = units;\n    this.model.details[index][\"deliveryCovered\"] = true;\n    let sumStocks = 0;\n    let ic = 0;\n    this.model.details[index][\"stockSelected\"].forEach(element => {\n      sumStocks += element[\"fraction_stock\"];\n\n      if (units > sumStocks) {\n        ic += 1;\n      }\n    });\n    if (i > -1) {\n      this.model.details[index][\"stocks\"].splice(i + 1, this.model.details[index][\"stocks\"].length - i - 1);\n      this.model.details[index][\"stockSelected\"].splice(i + 1, this.model.details[index][\"stockSelected\"].length - i - 1);\n    }\n    if (units > sumStocks) {\n      if (this.model.details[index][\"stocks\"][this.model.details[index][\"stocks\"].length - 1].length > 1) {\n        let newStocks = this.model.details[index][\"stocks\"][this.model.details[index][\"stocks\"].length - 1].filter(e => e.id != this.model.details[index][\"stockSelected\"][this.model.details[index][\"stocks\"].length - 1][\"id\"])\n        this.model.details[index][\"stocks\"].push(newStocks);\n        this.model.details[index][\"stockSelected\"].push(this.model.details[index][\"stocks\"][this.model.details[index][\"stocks\"].length - 1][0]);\n        // sumStocks += this.model.details[index][\"stocks\"][this.model.details[index][\"stocks\"].length-1][0][\"fraction_stock\"];\n        if (this.model.details[index][\"stocks\"][this.model.details[index][\"stocks\"].length - 1][0][\"fraction_stock\"] + sumStocks < units) {\n          this.validateRequested(units, index, i);\n        }\n      } else {\n        this.snackBar.open('No hay unidades suficientes para cubrir las unidades solicitadas', 'Existencias Dispensación', { duration: 4000 });\n        this.model.details[index][\"delivered_units\"] = sumStocks;\n        this.model.details[index][\"deliveryCovered\"] = false;\n      }\n\n    } else {\n      this.model.details[index][\"stocks\"].splice(ic + 1, this.model.details[index][\"stocks\"].length - ic - 1);\n      this.model.details[index][\"stockSelected\"].splice(ic + 1, this.model.details[index][\"stockSelected\"].length - ic - 1);\n    }\n  }\n  private openModalConfirmYesNo() {\n    this.modalConfirmYesNo = this.dialog.open(ModalConfirmationComponent, {\n      data: {\n        message: 'Desea crear el registro?',\n        title: 'Confirmar',\n        button_confirm: 'Sí',\n        button_close: 'No'\n      }\n\n    });\n\n    this.modalConfirmYesNo.afterClosed().subscribe((confirmation) => {\n      if (confirmation) {\n        console.log('SI');//save() or update()\n        this.save();\n      } else {\n        console.log('NO');\n      }\n    });\n  }\n\n  private save() {\n    this.loaderService.display(true);\n    switch (this.strAction) {\n      case 'Guardar':\n        this.helperService.POST(`/api/deliveries`, this.model).subscribe(rs => {\n          let res = rs.json();\n          if (res.store) {\n            this.snackBar.open(res.message, 'Guardado', { duration: 4000 });\n            this.goList();\n          }\n        }, err => {\n          this.snackBar.open(err.message, 'Guardado', { duration: 4000 });\n          this.loaderService.display(false);\n        });\n        break;\n      case 'Actualizar':\n        this.helperService.PUT(`/api/deliveries/${this.numId}`, this.model).subscribe(rs => {\n          let res = rs.json();\n          if (res.update) {\n            this.snackBar.open(res.message, 'Actualización', { duration: 4000 });\n            this.goList();\n          }\n        }, err => {\n          this.snackBar.open(err.message, 'Actualización', { duration: 4000 });\n          this.loaderService.display(false);\n        });\n        this.loaderService.display(false);\n        break;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery-action/delivery-action.component.ts","module.exports = \"<!-- LIST -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n      <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\" (keydown)=\\\"enter($event)\\\">\\n          <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\n              <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\n                  <i class=\\\"fa fa-search\\\"></i>\\n              </a>\\n          </div>\\n      </div>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n      <button *ngIf=\\\"actions[0].status\\\" mat-raised-button (click)=\\\"CUD('Guardar')\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">\\n          <mat-icon>add_circle_outline</mat-icon> Nuevo\\n      </button>\\n  </div>\\n\\n  <div class=\\\"col-sm-12\\\">\\n\\n      <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n\\n          <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\n              <thead>\\n                  <tr>\\n                      <th class=\\\"noAuto\\\" (click)=\\\"sort('id')\\\"># Entrega\\n                          <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                      </th>\\n                      <th (click)=\\\"sort('code')\\\">Afiliado\\n                          <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='code'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                      </th>\\n                      <th (click)=\\\"sort('name')\\\">Contrato\\n                          <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                      </th>\\n                      <th (click)=\\\"sort('operationcostcentres')\\\">Modalidad\\n                          <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='operationcostcentres'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                      </th>\\n                      <th (click)=\\\"sort('operationcostcentres')\\\">Fecha Digitación\\n                        <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='operationcostcentres'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                    </th>\\n                    <th (click)=\\\"sort('operationcostcentres')\\\">Fecha de Entrega\\n                      <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='operationcostcentres'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                  </th>\\n                      <!-- <th (click)=\\\"sort('ct.value')\\\">Estado\\n                          <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='ct.value'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                      </th> -->\\n                      <th *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\"></th>\\n                      <!-- <th *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\"></th> -->\\n                  </tr>\\n              </thead>\\n              <tbody>\\n                  <tr *ngFor=\\\"let item of list.data\\\">\\n                      <td class=\\\"noAuto\\\">{{ item.consecutive }}</td>\\n                      <td>{{ item.affiliate.display_name }}</td>\\n                      <td>{{ item.affiliate.delivery_contract.name }}</td>\\n                      <td>{{ item.modality.value }}</td>\\n                      <td>{{ item.date | date:'dd/MM/yyyy'}}</td>\\n                      <td>{{ item.delivery_date | date:'dd/MM/yyyy'}}</td>\\n                      <td *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\">\\n                          <button type=\\\"button\\\" mat-icon-button class=\\\"text-primary\\\" (click)=\\\"CUD('Actualizar', item)\\\">\\n                              <mat-icon>mode_edit</mat-icon>\\n                          </button>\\n                      </td>\\n                      <!-- <td *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\">\\n                          <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"CUD('Eliminar',item)\\\">\\n                              <mat-icon>delete</mat-icon>\\n                          </button>\\n                      </td> -->\\n                  </tr>\\n              </tbody>\\n          </table>\\n\\n      </div>\\n\\n      <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"maxSize\\\"\\n          [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery-list/delivery-list.component.html\n// module id = ../../../../../src/app/smartity/delivery/delivery-list/delivery-list.component.html\n// module chunks = 14","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { DataTableResource } from \"angular-4-data-table\";\nimport { FormControl } from \"@angular/forms\";\nimport \"rxjs/add/operator/startWith\";\nimport { MatSnackBar } from \"@angular/material\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseList } from '../../bases/base-list';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { Response } from '@angular/http';\nimport { DeliveryComponent } from '../delivery.component';\n\n@Component({\n    selector: \"delivery-list-cmp\",\n    templateUrl: \"delivery-list.component.html\",\n    styles: []\n})\n\nexport class DeliveryListComponent extends BaseList implements OnInit {\n\n    constructor(\n        public router: Router,\n        public loaderService: LoaderService,\n        public helperService: HelperService,\n        private comp: DeliveryComponent\n    ) {\n        super(loaderService, helperService);\n        this.urlApi = '/api/deliveries';\n    }\n\n    ngOnInit() {\n        this.getAll();\n        console.log(this.list);\n    }\n\n    private CUD(action:string, row?:any){\n        this.comp.strAction = action;\n        switch (action) {\n            case 'Guardar':\n                this.comp.id = undefined;\n                break;\n            default:\n                this.comp.id = row.id;\n                break;\n        }\n        this.comp.openActions();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery-list/delivery-list.component.ts","module.exports = \"<section class=\\\"chapter\\\">\\n  <section class=\\\"hero\\\">\\n      <div class=\\\"hero-content\\\">\\n          <h1 class=\\\"hero-title\\\">Dispensación</h1>\\n      </div>\\n      <p class=\\\"hero-tagline\\\"></p>\\n  </section>\\n  <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\n      <div class=\\\"container-fluid with-maxwidth\\\">\\n          <div class=\\\"box box-default\\\">\\n              <div class=\\\"box-body\\\">\\n                  <delivery-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\" [strAction]=\\\"strAction\\\"></delivery-action-cmp>\\n                  <delivery-list-cmp *ngIf=\\\"isOpenList\\\"></delivery-list-cmp>\\n              </div>\\n          </div>\\n      </div>\\n  </article>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery.component.html\n// module id = ../../../../../src/app/smartity/delivery/delivery.component.html\n// module chunks = 14","import { Component, OnInit } from '@angular/core';\nimport { Base } from '../bases/base';\n\n@Component({\n  selector: 'app-delivery',\n  templateUrl: './delivery.component.html'\n})\nexport class DeliveryComponent extends Base implements OnInit {\n\n  constructor(){\n      super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DeliveryComponent } from './delivery.component';\nimport { DeliveryActionComponent } from './delivery-action/delivery-action.component';\nimport { DeliveryListComponent } from './delivery-list/delivery-list.component';\n\nconst routes: Routes = [{ path: '', component: DeliveryComponent }];\n\n@NgModule({\n    imports: [\n        CommonModule,        \n        RouterModule.forChild(routes),\n        SharedModule,\n        NgbModule.forRoot()  \n    ],\n    declarations: [\n        DeliveryComponent,\n        DeliveryActionComponent,\n        DeliveryListComponent\n    ]\n})\nexport class DeliveryModule {\n}\n\n\n// WEBPACK FOOTER //\n// C:/xampp3/htdocs/javelinservice/javelin/src/app/smartity/delivery/delivery.module.ts"],"sourceRoot":"webpack:///"}