{"version":3,"sources":["webpack:///3.c4e8c33cbe5203000fa9.chunk.js","webpack:///./src/app/smartity/stakeholders/stakeholders.module.ts","webpack:///./src/app/smartity/stakeholders/stakeholders.component.ts","webpack:///./src/app/smartity/stakeholders/stakeholders-action/stakeholders-action.component.ts","webpack:///./src/app/smartity/stakeholders/stakeholders-list/stakeholders-list.component.ts","webpack:///./src/app/smartity/stakeholders/stakeholders-action/stakeholders-action.component.html","webpack:///./src/app/smartity/stakeholders/stakeholders-list/stakeholders-list.component.html","webpack:///./src/app/smartity/stakeholders/stakeholders.component.html"],"names":["webpackJsonp","1428","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","d","StakeholdersModule","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_2__angular_common__","__WEBPACK_IMPORTED_MODULE_3__angular_router__","__WEBPACK_IMPORTED_MODULE_4__shared_shared_module__","__WEBPACK_IMPORTED_MODULE_5__stakeholders_component__","__WEBPACK_IMPORTED_MODULE_6__ng_bootstrap_ng_bootstrap__","__WEBPACK_IMPORTED_MODULE_7__stakeholders_action_stakeholders_action_component__","__WEBPACK_IMPORTED_MODULE_8__stakeholders_list_stakeholders_list_component__","__WEBPACK_IMPORTED_MODULE_9__angular_material__","routes","path","component","i","imports","forChild","forRoot","declarations","1442","StakeholdersComponent","__WEBPACK_IMPORTED_MODULE_2__bases_base__","_super","call","this","prototype","ngOnInit","selector","template","styles","1467","StakeholdersActionComponent","__WEBPACK_IMPORTED_MODULE_2__angular_material__","__WEBPACK_IMPORTED_MODULE_3__shared__","__WEBPACK_IMPORTED_MODULE_4__stakeholders_component__","__WEBPACK_IMPORTED_MODULE_5__bases_base_model__","__WEBPACK_IMPORTED_MODULE_6__modals__","__WEBPACK_IMPORTED_MODULE_7_rxjs_operators__","n","loaderService","helperService","snackBar","comp","dialog","_this","_model","stakeholders_info","comercial_stakeholders_info","codes","customer","purchases_contact","debt_contact","shipping_points","institutional_sale_contract","controlled_resolution","employee","supplier","bank_accounts","sales_contact","profile","document_number_digit","undefined","countries","departments","cities","tax_regime","document_type","document_type_n","document_type_j","persons_type","conditions_payment","portfolio_type","sales_representatives","suppliers_class","customers_class","payment_method","clean","getCollection","getSalesRepresentative","numId","getDataById","display","POST","subscribe","rs","res","json","COUNTRIES","TAX_REGIME","TYPES_OF_DOCUMENTS","PORTFOLIO_TYPE","PERSONS_TYPE","PAYMENT_CONDITION","SUPPLIERS_CLASS","CUSTOMERS_CLASS","PAYMENT_METHOD","filter","item","push","err","console","log","GET","data","getDepartments","country_id","getCities","department_id","save","formData","FormData","append","JSON","stringify","forEach","obj","is_file","contract_number","file","strAction","POSTFORMDATA","store","open","message","duration","goList","update","openList","DELETE","delete","selectPersonType","getRutDigit","openAddSucursal","sucursalDialogRef","hasBackdrop","afterClosed","pipe","shipping_point","removeSucursal","confirmDialogRef","title","button_confirm","button_close","confirmation","index","indexOf","splice","openAddControlledResolution","resolutionDialogRef","ctr_resolution","removeControlledResolution","openAddMonopolyResolution","mnp_resolution","monopoly_resolution","removeMonopolyResolution","openAddInstitucionalSale","institutionalSaleDialogRef","removeInstitucionalSale","openAddBankAccount","bankAccountDialogRef","bank_account","removeBankAccount","zero_fill","i_valor","num_ceros","relleno","salir","total_caracteres","length","document_type_id","rut","i_rut","document_number","pesos","rut_fmt","suma","digitov","substring","resto","est","person_type_id","changeDocumentType","1468","StakeholdersListComponent","__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_startWith__","__WEBPACK_IMPORTED_MODULE_4__bases_base_list__","__WEBPACK_IMPORTED_MODULE_5__shared__","__WEBPACK_IMPORTED_MODULE_6__stakeholders_component__","router","select","urlApi","getAll","CUD","action","row","id","openActions","Boolean","String","1503","exports","1504","1505"],"mappings":"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","file":"3.c4e8c33cbe5203000fa9.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 1428:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StakeholdersModule\", function() { return StakeholdersModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_shared_module__ = __webpack_require__(276);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__stakeholders_component__ = __webpack_require__(1442);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ng_bootstrap_ng_bootstrap__ = __webpack_require__(593);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__stakeholders_action_stakeholders_action_component__ = __webpack_require__(1467);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__stakeholders_list_stakeholders_list_component__ = __webpack_require__(1468);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__angular_material__ = __webpack_require__(18);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar routes = [{ path: '', component: __WEBPACK_IMPORTED_MODULE_5__stakeholders_component__[\"a\" /* StakeholdersComponent */] }];\r\nvar StakeholdersModule = /** @class */ (function () {\r\n    function StakeholdersModule() {\r\n    }\r\n    StakeholdersModule = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */]([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"])({\r\n            imports: [\r\n                __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"],\r\n                __WEBPACK_IMPORTED_MODULE_3__angular_router__[\"g\" /* RouterModule */].forChild(routes),\r\n                __WEBPACK_IMPORTED_MODULE_4__shared_shared_module__[\"a\" /* SharedModule */],\r\n                __WEBPACK_IMPORTED_MODULE_6__ng_bootstrap_ng_bootstrap__[\"a\" /* NgbModule */].forRoot(),\r\n                __WEBPACK_IMPORTED_MODULE_9__angular_material__[\"g\" /* MdDialogModule */]\r\n            ],\r\n            declarations: [\r\n                __WEBPACK_IMPORTED_MODULE_5__stakeholders_component__[\"a\" /* StakeholdersComponent */],\r\n                __WEBPACK_IMPORTED_MODULE_7__stakeholders_action_stakeholders_action_component__[\"a\" /* StakeholdersActionComponent */],\r\n                __WEBPACK_IMPORTED_MODULE_8__stakeholders_list_stakeholders_list_component__[\"a\" /* StakeholdersListComponent */]\r\n            ]\r\n        })\r\n    ], StakeholdersModule);\r\n    return StakeholdersModule;\r\n}());\r\n\r\n\n\n/***/ }),\n\n/***/ 1442:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return StakeholdersComponent; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bases_base__ = __webpack_require__(594);\n\r\n\r\n\r\nvar StakeholdersComponent = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](StakeholdersComponent, _super);\r\n    function StakeholdersComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    StakeholdersComponent.prototype.ngOnInit = function () { };\r\n    StakeholdersComponent = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */]([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Component\"])({\r\n            selector: 'stakeholders-cmp',\r\n            template: __webpack_require__(1505),\r\n            styles: []\r\n        }),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __metadata */](\"design:paramtypes\", [])\r\n    ], StakeholdersComponent);\r\n    return StakeholdersComponent;\r\n}(__WEBPACK_IMPORTED_MODULE_2__bases_base__[\"a\" /* Base */]));\r\n\r\n\n\n/***/ }),\n\n/***/ 1467:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return StakeholdersActionComponent; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_material__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__stakeholders_component__ = __webpack_require__(1442);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__bases_base_model__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__modals__ = __webpack_require__(115);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operators__ = __webpack_require__(113);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_operators___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_operators__);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar StakeholdersActionComponent = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](StakeholdersActionComponent, _super);\r\n    /**\r\n     *\r\n     */\r\n    function StakeholdersActionComponent(loaderService, helperService, snackBar, comp, dialog) {\r\n        var _this = _super.call(this) || this;\r\n        _this.loaderService = loaderService;\r\n        _this.helperService = helperService;\r\n        _this.snackBar = snackBar;\r\n        _this.comp = comp;\r\n        _this.dialog = dialog;\r\n        _this._model = {\r\n            stakeholders_info: {},\r\n            comercial_stakeholders_info: {\r\n                codes: {}\r\n            },\r\n            customer: {\r\n                purchases_contact: {},\r\n                debt_contact: {},\r\n                shipping_points: [],\r\n                institutional_sale_contract: [],\r\n                controlled_resolution: []\r\n            },\r\n            employee: {},\r\n            supplier: {\r\n                bank_accounts: [],\r\n                sales_contact: {}\r\n            },\r\n            profile: {}\r\n        };\r\n        _this.document_number_digit = undefined;\r\n        _this.countries = [];\r\n        _this.departments = [];\r\n        _this.cities = [];\r\n        /**\r\n         * Array para los combos\r\n         */\r\n        _this.tax_regime = [];\r\n        _this.document_type = [];\r\n        _this.document_type_n = [];\r\n        _this.document_type_j = [];\r\n        _this.persons_type = [];\r\n        _this.conditions_payment = [];\r\n        _this.portfolio_type = [];\r\n        _this.sales_representatives = [];\r\n        _this.suppliers_class = [];\r\n        _this.customers_class = [];\r\n        _this.payment_method = [];\r\n        return _this;\r\n    }\r\n    StakeholdersActionComponent.prototype.ngOnInit = function () {\r\n        this.clean();\r\n        this.getCollection();\r\n        this.getSalesRepresentative();\r\n        if (this.numId !== undefined) {\r\n            this.getDataById();\r\n        }\r\n    };\r\n    StakeholdersActionComponent.prototype.getCollection = function () {\r\n        var _this = this;\r\n        this.loaderService.display(true);\r\n        this.helperService.POST(\"/api/collections\", ['COUNTRIES', 'TAX_REGIME', 'TYPES_OF_DOCUMENTS', 'PORTFOLIO_TYPE', 'PERSONS_TYPE', 'PAYMENT_CONDITION', 'SUPPLIERS_CLASS', 'CUSTOMERS_CLASS', 'PAYMENT_METHOD']).subscribe(function (rs) {\r\n            var res = rs.json();\r\n            _this.countries = res.COUNTRIES;\r\n            _this.tax_regime = res.TAX_REGIME;\r\n            var document_type = res.TYPES_OF_DOCUMENTS;\r\n            _this.portfolio_type = res.PORTFOLIO_TYPE;\r\n            _this.persons_type = res.PERSONS_TYPE;\r\n            _this.conditions_payment = res.PAYMENT_CONDITION;\r\n            _this.suppliers_class = res.SUPPLIERS_CLASS;\r\n            _this.customers_class = res.CUSTOMERS_CLASS;\r\n            _this.payment_method = res.PAYMENT_METHOD;\r\n            document_type.filter(function (item) { if (item.value !== 'NIT') {\r\n                _this.document_type_n.push(item);\r\n            } });\r\n            document_type.filter(function (item) { if (item.value == 'NIT') {\r\n                _this.document_type_j.push(item);\r\n            } });\r\n            _this.loaderService.display(false);\r\n        }, function (err) {\r\n            console.log(err);\r\n            _this.loaderService.display(false);\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.getSalesRepresentative = function () {\r\n        var _this = this;\r\n        this.loaderService.display(true);\r\n        this.helperService.GET(\"/api/sales_representatives?all=all\").subscribe(function (rs) {\r\n            var res = rs.json();\r\n            _this.sales_representatives = res.data;\r\n            _this.loaderService.display(false);\r\n        }, function (err) {\r\n            console.log(err);\r\n            _this.loaderService.display(false);\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.getDepartments = function () {\r\n        var _this = this;\r\n        this.loaderService.display(true);\r\n        this.helperService.GET(\"/api/departamentos?pais_id=\" + this.country_id).subscribe(function (rs) {\r\n            var res = rs.json();\r\n            _this.departments = res['departamentos'];\r\n            _this.loaderService.display(false);\r\n        }, function (err) {\r\n            console.log(err);\r\n            _this.loaderService.display(false);\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.getCities = function () {\r\n        var _this = this;\r\n        this.loaderService.display(true);\r\n        this.helperService.GET(\"/api/ciudades?departamento_id=\" + this.department_id).subscribe(function (rs) {\r\n            var res = rs.json();\r\n            _this.cities = res['ciudades'];\r\n            _this.loaderService.display(false);\r\n        }, function (err) {\r\n            console.log(err);\r\n            _this.loaderService.display(false);\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.save = function () {\r\n        var _this = this;\r\n        this.loaderService.display(true);\r\n        var formData = new FormData();\r\n        formData.append('data', JSON.stringify(this._model));\r\n        if (this._model.customer) {\r\n            if (this._model.customer.institutional_sale_contract) {\r\n                this._model.customer.institutional_sale_contract.forEach(function (obj) {\r\n                    if (obj.is_file === true) {\r\n                        formData.append(obj.contract_number + '_file', obj.file);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        switch (this.strAction) {\r\n            case 'Guardar':\r\n                this.helperService.POSTFORMDATA(\"/api/stakeholders\", formData).subscribe(function (rs) {\r\n                    var res = rs.json();\r\n                    if (res.store) {\r\n                        _this.snackBar.open(res.message, 'Guardado', { duration: 4000 });\r\n                        _this.goList();\r\n                    }\r\n                }, function (err) {\r\n                    _this.snackBar.open(err.message, 'Guardado', { duration: 4000 });\r\n                    _this.loaderService.display(false);\r\n                });\r\n                break;\r\n            case 'Actualizar':\r\n                this.helperService.POSTFORMDATA(\"/api/update_stake_holder/\" + this.numId, formData).subscribe(function (rs) {\r\n                    var res = rs.json();\r\n                    if (res.update) {\r\n                        _this.snackBar.open(res.message, 'Actualización', { duration: 4000 });\r\n                        _this.comp.openList();\r\n                    }\r\n                }, function (err) {\r\n                    _this.snackBar.open(err.message, 'Actualización', { duration: 4000 });\r\n                    _this.loaderService.display(true);\r\n                });\r\n                break;\r\n            case 'Eliminar':\r\n                this.helperService.DELETE(\"/api/stakeholders/\" + this.numId).subscribe(function (rs) {\r\n                    var res = rs.json();\r\n                    if (res.delete) {\r\n                        _this.snackBar.open(res.message, 'Eliminación', { duration: 4000 });\r\n                        _this.comp.openList();\r\n                    }\r\n                }, function (err) {\r\n                    _this.snackBar.open(err.message, 'Eliminación', { duration: 4000 });\r\n                    _this.loaderService.display(true);\r\n                });\r\n                break;\r\n        }\r\n    };\r\n    StakeholdersActionComponent.prototype.getDataById = function () {\r\n        var _this = this;\r\n        this.loaderService.display(true);\r\n        this.helperService.GET(\"/api/stakeholders/\" + this.numId).subscribe(function (rs) {\r\n            var res = rs.json();\r\n            _this._model = res['data'];\r\n            _this.selectPersonType(false);\r\n            _this.country_id = res.country_id;\r\n            _this.getDepartments();\r\n            _this.department_id = res.department_id;\r\n            _this.getCities();\r\n            _this.getRutDigit();\r\n            if (!_this._model.comercial_stakeholders_info) {\r\n                _this._model.comercial_stakeholders_info = {\r\n                    codes: {}\r\n                };\r\n            }\r\n            if (!_this._model.customer) {\r\n                _this._model.customer = {\r\n                    purchases_contact: {},\r\n                    debt_contact: {},\r\n                    shipping_points: [],\r\n                    institutional_sale_contract: [],\r\n                    controlled_resolution: []\r\n                };\r\n            }\r\n            if (!_this._model.employee) {\r\n                _this._model.employee = {};\r\n            }\r\n            if (!_this._model.supplier) {\r\n                _this._model.supplier = {\r\n                    bank_accounts: [],\r\n                    sales_contact: {}\r\n                };\r\n            }\r\n        }, function (err) {\r\n            _this.loaderService.display(false);\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.clean = function () {\r\n        this._model = {\r\n            stakeholders_info: {},\r\n            comercial_stakeholders_info: {\r\n                codes: {}\r\n            },\r\n            customer: {\r\n                purchases_contact: {},\r\n                debt_contact: {},\r\n                shipping_points: [],\r\n                institutional_sale_contract: [],\r\n                controlled_resolution: []\r\n            },\r\n            employee: {},\r\n            supplier: {\r\n                bank_accounts: [],\r\n                sales_contact: {}\r\n            },\r\n            profile: {}\r\n        };\r\n    };\r\n    StakeholdersActionComponent.prototype.goList = function () {\r\n        this.comp.openList();\r\n    };\r\n    StakeholdersActionComponent.prototype.openAddSucursal = function () {\r\n        var _this = this;\r\n        this.sucursalDialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_6__modals__[\"a\" /* ModalSucursalComponent */], { hasBackdrop: false });\r\n        this.sucursalDialogRef.afterClosed().pipe(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7_rxjs_operators__[\"filter\"])(function (shipping_point) { return shipping_point; })).subscribe(function (shipping_point) {\r\n            _this._model.customer.shipping_points.push(shipping_point);\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.removeSucursal = function (obj) {\r\n        var _this = this;\r\n        this.confirmDialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_6__modals__[\"b\" /* ModalConfirmationComponent */], {\r\n            hasBackdrop: false, data: {\r\n                message: 'Desea remover la sucursal?',\r\n                title: 'Confirmar',\r\n                button_confirm: 'Si',\r\n                button_close: 'No'\r\n            }\r\n        });\r\n        this.confirmDialogRef.afterClosed().subscribe(function (confirmation) {\r\n            if (confirmation) {\r\n                var index = _this._model.customer.shipping_points.indexOf(obj);\r\n                _this._model.customer.shipping_points.splice(index, 1);\r\n            }\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.openAddControlledResolution = function () {\r\n        var _this = this;\r\n        this.resolutionDialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_6__modals__[\"c\" /* ModalResolutionComponent */], {\r\n            hasBackdrop: false,\r\n            data: {\r\n                shipping_points: this._model.customer.shipping_points,\r\n                title: 'Agregar Resolución de controlado'\r\n            }\r\n        });\r\n        this.resolutionDialogRef.afterClosed().pipe(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7_rxjs_operators__[\"filter\"])(function (ctr_resolution) { return ctr_resolution; })).subscribe(function (ctr_resolution) {\r\n            _this._model.customer.controlled_resolution.push(ctr_resolution);\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.removeControlledResolution = function (obj) {\r\n        var _this = this;\r\n        this.resolutionDialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_6__modals__[\"c\" /* ModalResolutionComponent */], {\r\n            hasBackdrop: false,\r\n            data: {\r\n                message: 'Desea remover el registro?',\r\n                title: 'Confirmar',\r\n                button_confirm: 'Si',\r\n                button_close: 'No'\r\n            }\r\n        });\r\n        this.resolutionDialogRef.afterClosed().subscribe(function (confirmation) {\r\n            if (confirmation) {\r\n                var index = _this._model.customer.controlled_resolution.indexOf(obj);\r\n                _this._model.customer.controlled_resolution.splice(index, 1);\r\n            }\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.openAddMonopolyResolution = function () {\r\n        var _this = this;\r\n        this.resolutionDialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_6__modals__[\"c\" /* ModalResolutionComponent */], {\r\n            hasBackdrop: false,\r\n            data: {\r\n                shipping_points: this._model.customer.shipping_points,\r\n                title: 'Agregar Resolución de monopolio'\r\n            }\r\n        });\r\n        this.resolutionDialogRef.afterClosed().pipe(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7_rxjs_operators__[\"filter\"])(function (mnp_resolution) { return mnp_resolution; })).subscribe(function (mnp_resolution) {\r\n            _this._model.customer.monopoly_resolution.push(mnp_resolution);\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.removeMonopolyResolution = function (obj) {\r\n        var _this = this;\r\n        this.resolutionDialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_6__modals__[\"c\" /* ModalResolutionComponent */], {\r\n            hasBackdrop: false,\r\n            data: {\r\n                message: 'Desea remover el registro?',\r\n                title: 'Confirmar',\r\n                button_confirm: 'Si',\r\n                button_close: 'No'\r\n            }\r\n        });\r\n        this.resolutionDialogRef.afterClosed().subscribe(function (confirmation) {\r\n            if (confirmation) {\r\n                var index = _this._model.customer.monopoly_resolution.indexOf(obj);\r\n                _this._model.customer.monopoly_resolution.splice(index, 1);\r\n            }\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.openAddInstitucionalSale = function () {\r\n        var _this = this;\r\n        this.institutionalSaleDialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_6__modals__[\"d\" /* ModalInstitucionalSaleContractComponent */], {\r\n            hasBackdrop: false,\r\n            data: {\r\n                title: 'Agregar Contrato institucional'\r\n            }\r\n        });\r\n        this.institutionalSaleDialogRef\r\n            .afterClosed()\r\n            .pipe(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7_rxjs_operators__[\"filter\"])(function (institutional_sale_contract) { return institutional_sale_contract; }))\r\n            .subscribe(function (institutional_sale_contract) {\r\n            _this._model.customer.institutional_sale_contract.push(institutional_sale_contract);\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.removeInstitucionalSale = function (obj) {\r\n        var _this = this;\r\n        this.institutionalSaleDialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_6__modals__[\"d\" /* ModalInstitucionalSaleContractComponent */], {\r\n            hasBackdrop: false,\r\n            data: {\r\n                message: 'Desea remover el registro?',\r\n                title: 'Confirmar',\r\n                button_confirm: 'Si',\r\n                button_close: 'No'\r\n            }\r\n        });\r\n        this.institutionalSaleDialogRef\r\n            .afterClosed()\r\n            .subscribe(function (confirmation) {\r\n            if (confirmation) {\r\n                var index = _this._model.customer.institutional_sale_contract.indexOf(obj);\r\n                _this._model.customer.institutional_sale_contract.splice(index, 1);\r\n            }\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.openAddBankAccount = function () {\r\n        var _this = this;\r\n        this.bankAccountDialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_6__modals__[\"e\" /* ModalBankAccountComponent */], {\r\n            hasBackdrop: false,\r\n            data: {\r\n                title: 'Cuenta bancaria'\r\n            }\r\n        });\r\n        this.bankAccountDialogRef.afterClosed().pipe(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7_rxjs_operators__[\"filter\"])(function (bank_account) { return bank_account; })).subscribe(function (bank_account) {\r\n            _this._model.supplier.bank_accounts.push(bank_account);\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.removeBankAccount = function (obj) {\r\n        var _this = this;\r\n        this.bankAccountDialogRef = this.dialog.open(__WEBPACK_IMPORTED_MODULE_6__modals__[\"e\" /* ModalBankAccountComponent */], {\r\n            hasBackdrop: false,\r\n            data: {\r\n                message: 'Desea remover el registro?',\r\n                title: 'Confirmar',\r\n                button_confirm: 'Si',\r\n                button_close: 'No'\r\n            }\r\n        });\r\n        this.bankAccountDialogRef.afterClosed().subscribe(function (confirmation) {\r\n            if (confirmation) {\r\n                var index = _this._model.supplier.bank_accounts.indexOf(obj);\r\n                _this._model.supplier.bank_accounts.splice(index, 1);\r\n            }\r\n        });\r\n    };\r\n    StakeholdersActionComponent.prototype.zero_fill = function (i_valor, num_ceros) {\r\n        var relleno = '';\r\n        var i = 1;\r\n        var salir = 0;\r\n        while (!salir) {\r\n            var total_caracteres = i_valor.length + i;\r\n            if (i > num_ceros || total_caracteres > num_ceros) {\r\n                salir = 1;\r\n            }\r\n            else {\r\n                relleno = relleno + \"0\";\r\n            }\r\n            i++;\r\n        }\r\n        i_valor = relleno + i_valor;\r\n        return i_valor;\r\n    };\r\n    StakeholdersActionComponent.prototype.getRutDigit = function () {\r\n        if (this._model.stakeholders_info.document_type_id == 14 || this._model.stakeholders_info.rut) {\r\n            var i_rut = this._model.stakeholders_info.document_number;\r\n            var pesos = [71, 67, 59, 53, 47, 43, 41, 37, 29, 23, 19, 17, 13, 7, 3];\r\n            var rut_fmt = this.zero_fill(i_rut, 15);\r\n            var suma = 0;\r\n            var digitov = void 0;\r\n            for (var i = 0; i <= 14; i++) {\r\n                suma += rut_fmt.substring(i, i + 1) * pesos[i];\r\n            }\r\n            var resto = suma % 11;\r\n            if (resto === 0 || resto === 1) {\r\n                digitov = resto;\r\n            }\r\n            else {\r\n                digitov = 11 - resto;\r\n            }\r\n            this.document_number_digit = digitov;\r\n        }\r\n        else {\r\n            this.document_number_digit = undefined;\r\n        }\r\n    };\r\n    StakeholdersActionComponent.prototype.selectPersonType = function (est) {\r\n        if (est === void 0) { est = true; }\r\n        if (est) {\r\n            this._model.stakeholders_info.rut = false;\r\n            this._model.stakeholders_info.document_type_id = undefined;\r\n        }\r\n        if (this._model.stakeholders_info.person_type_id == 39) {\r\n            this.document_type = this.document_type_j;\r\n        }\r\n        else {\r\n            this.document_type = this.document_type_n;\r\n        }\r\n    };\r\n    StakeholdersActionComponent.prototype.changeDocumentType = function () {\r\n        this._model.stakeholders_info.rut = false;\r\n    };\r\n    StakeholdersActionComponent = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */]([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Component\"])({\r\n            selector: 'stakeholders-action-cmp',\r\n            template: __webpack_require__(1503)\r\n        }),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __metadata */](\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_3__shared__[\"a\" /* LoaderService */],\r\n            __WEBPACK_IMPORTED_MODULE_3__shared__[\"b\" /* HelperService */],\r\n            __WEBPACK_IMPORTED_MODULE_2__angular_material__[\"c\" /* MdSnackBar */],\r\n            __WEBPACK_IMPORTED_MODULE_4__stakeholders_component__[\"a\" /* StakeholdersComponent */],\r\n            __WEBPACK_IMPORTED_MODULE_2__angular_material__[\"d\" /* MdDialog */]])\r\n    ], StakeholdersActionComponent);\r\n    return StakeholdersActionComponent;\r\n}(__WEBPACK_IMPORTED_MODULE_5__bases_base_model__[\"a\" /* BaseModel */]));\r\n\r\n\n\n/***/ }),\n\n/***/ 1468:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return StakeholdersListComponent; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_startWith__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_startWith___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_startWith__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__bases_base_list__ = __webpack_require__(71);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__stakeholders_component__ = __webpack_require__(1442);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar StakeholdersListComponent = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](StakeholdersListComponent, _super);\r\n    function StakeholdersListComponent(router, loaderService, helperService, comp) {\r\n        var _this = _super.call(this, loaderService, helperService) || this;\r\n        _this.router = router;\r\n        _this.loaderService = loaderService;\r\n        _this.helperService = helperService;\r\n        _this.comp = comp;\r\n        _this.select = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"EventEmitter\"]();\r\n        _this.urlApi = '/api/stakeholders';\r\n        return _this;\r\n    }\r\n    StakeholdersListComponent.prototype.ngOnInit = function () {\r\n        this.getAll();\r\n    };\r\n    StakeholdersListComponent.prototype.CUD = function (action, row) {\r\n        this.comp.strAction = action;\r\n        switch (action) {\r\n            case 'Guardar':\r\n                this.comp.id = undefined;\r\n                break;\r\n            default:\r\n                this.comp.id = row.id;\r\n                break;\r\n        }\r\n        this.comp.openActions();\r\n    };\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */]([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Output\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __metadata */](\"design:type\", Object)\r\n    ], StakeholdersListComponent.prototype, \"select\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */]([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __metadata */](\"design:type\", Boolean)\r\n    ], StakeholdersListComponent.prototype, \"noaction\", void 0);\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */]([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Input\"])(),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __metadata */](\"design:type\", String)\r\n    ], StakeholdersListComponent.prototype, \"type\", void 0);\r\n    StakeholdersListComponent = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __decorate */]([\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Component\"])({\r\n            selector: 'stakeholders-list-cmp',\r\n            template: __webpack_require__(1504),\r\n            styles: []\r\n        }),\r\n        __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __metadata */](\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_3__angular_router__[\"a\" /* Router */],\r\n            __WEBPACK_IMPORTED_MODULE_5__shared__[\"a\" /* LoaderService */],\r\n            __WEBPACK_IMPORTED_MODULE_5__shared__[\"b\" /* HelperService */],\r\n            __WEBPACK_IMPORTED_MODULE_6__stakeholders_component__[\"a\" /* StakeholdersComponent */]])\r\n    ], StakeholdersListComponent);\r\n    return StakeholdersListComponent;\r\n}(__WEBPACK_IMPORTED_MODULE_4__bases_base_list__[\"a\" /* BaseList */]));\r\n\r\n\n\n/***/ }),\n\n/***/ 1503:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<form #stakeHolderForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"col-sm-12 margin-bottom-40\\\">\\r\\n        <button type=\\\"button\\\" md-raised-button color=\\\"primary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-md no-margin-left\\\">\\r\\n            <md-icon>keyboard_arrow_left</md-icon> Regresar\\r\\n        </button>\\r\\n    </div>\\r\\n    <!-- person_type_id -->\\r\\n    <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n        <md-select required class=\\\"full-width\\\" placeholder=\\\"Tipo de persona\\\" [(ngModel)]=\\\"_model.stakeholders_info.person_type_id\\\"\\r\\n            name=\\\"person_type_id\\\" id=\\\"person_type_id\\\" (change)=\\\"selectPersonType()\\\">\\r\\n            <md-option *ngFor=\\\"let item of persons_type\\\" [value]=\\\"item.id\\\">{{ item.value }}</md-option>\\r\\n        </md-select>\\r\\n    </div>\\r\\n    <!-- rut -->\\r\\n    <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n        <div class=\\\"flex height-30\\\">\\r\\n            <span class=\\\"flex-spacer\\\"></span>\\r\\n            <md-slide-toggle *ngIf=\\\"_model.stakeholders_info.person_type_id == 38 && _model.stakeholders_info.document_type_id == 12\\\" [labelPosition]=\\\"'before'\\\" id=\\\"rut\\\" name=\\\"rut\\\" [(ngModel)]=\\\"_model.stakeholders_info.rut\\\">RUT</md-slide-toggle>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- document_type_id -->\\r\\n    <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n        <md-select (change)=\\\"changeDocumentType()\\\" required class=\\\"full-width\\\" placeholder=\\\"Tipo de documento\\\" [(ngModel)]=\\\"_model.stakeholders_info.document_type_id\\\" name=\\\"document_type_id\\\" id=\\\"document_type_id\\\">\\r\\n            <md-option *ngFor=\\\"let item of document_type\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n        </md-select>\\r\\n    </div>\\r\\n    <!-- document number -->\\r\\n    <div class=\\\" margin-bottom\\\" [ngClass]=\\\"\\r\\n    { \\r\\n        'col-sm-8 col-md-4' : _model.stakeholders_info.document_type_id == 14 || _model.stakeholders_info.rut, \\r\\n        'col-sm-12 col-md-6' : _model.stakeholders_info.document_type_id != 14 && !_model.stakeholders_info.rut \\r\\n    }\\\">\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input required NumberOnly (focusout)=\\\"getRutDigit()\\\" type=\\\"text\\\" id=\\\"document_number\\\" name=\\\"document_number\\\" [(ngModel)]=\\\"_model.stakeholders_info.document_number\\\"\\r\\n                mdInput placeholder=\\\"Número de documento\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- document_number_digit -->\\r\\n    <div class='col-sm-4 col-md-2 margin-bottom' *ngIf=\\\"_model.stakeholders_info.document_type_id == 14 || _model.stakeholders_info.rut\\\">\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input [disabled]=\\\"true\\\" type=\\\"text\\\" id=\\\"document_number_digit\\\" name=\\\"document_number_digit\\\" [(ngModel)]=\\\"document_number_digit\\\"\\r\\n                mdInput placeholder=\\\"Dígito\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- ######################################## IF PERSON NATURAL ######################################## -->\\r\\n    <ng-container *ngIf=\\\"_model.stakeholders_info.person_type_id === 38 && !_model.stakeholders_info.rut\\\">\\r\\n        <!-- firstname -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"firstname\\\" name=\\\"firstname\\\" [(ngModel)]=\\\"_model.stakeholders_info.firstname\\\" mdInput placeholder=\\\"Primer nombre\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- middlename -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"middlename\\\" name=\\\"middlename\\\" [(ngModel)]=\\\"_model.stakeholders_info.middlename\\\" mdInput placeholder=\\\"Segundo nombres\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- lastname -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"lastname\\\" name=\\\"lastname\\\" [(ngModel)]=\\\"_model.stakeholders_info.lastname\\\" mdInput placeholder=\\\"Apellidos\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- second_surname -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"second_surname\\\" name=\\\"second_surname\\\" [(ngModel)]=\\\"_model.stakeholders_info.second_surname\\\" mdInput\\r\\n                    placeholder=\\\"Segundo apellido\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n    <!-- ######################################## IF PERSON NATURAL ######################################## -->\\r\\n    <!-- legalname -->\\r\\n    <div class='col-sm-12 margin-bottom' [ngClass]=\\\"{ 'col-md-6' : _model.stakeholders_info.rut, 'col-md-12' : !_model.stakeholders_info.rut }\\\"\\r\\n        *ngIf=\\\"_model.stakeholders_info.person_type_id === 39\\\">\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"legalname\\\" name=\\\"legalname\\\" [(ngModel)]=\\\"_model.stakeholders_info.legalname\\\" mdInput placeholder=\\\"Razón Social\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- business name -->\\r\\n    <div class='col-sm-12 margin-bottom' [ngClass]=\\\"{ 'col-md-6' : _model.stakeholders_info.person_type_id === 39 , 'col-md-12' :  _model.stakeholders_info.person_type_id !== 39 }\\\"\\r\\n        *ngIf=\\\"_model.stakeholders_info.rut\\\">\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"businessname\\\" name=\\\"businessname\\\" [(ngModel)]=\\\"_model.stakeholders_info.businessname\\\" mdInput placeholder=\\\"Nombre del Establecimiento\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!--country -->\\r\\n    <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n        <md-select required class=\\\"full-width\\\" placeholder=\\\"Pais\\\" [(ngModel)]=\\\"country_id\\\" name=\\\"country_id\\\" (change)=\\\"getDepartments()\\\"\\r\\n            id=\\\"country_id\\\">\\r\\n            <md-option *ngFor=\\\"let item of countries\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n        </md-select>\\r\\n    </div>\\r\\n    <!-- department -->\\r\\n    <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n        <md-select required class=\\\"full-width\\\" placeholder=\\\"Departamento\\\" [(ngModel)]=\\\"department_id\\\" name=\\\"department_id\\\" (change)=\\\"getCities()\\\"\\r\\n            id=\\\"department_id\\\">\\r\\n            <md-option *ngFor=\\\"let item of departments\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n        </md-select>\\r\\n    </div>\\r\\n    <!--city -->\\r\\n    <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n        <md-select required class=\\\"full-width\\\" placeholder=\\\"Ciudad\\\" [(ngModel)]=\\\"_model.stakeholders_info.geolocation_id\\\" name=\\\"city_id\\\"\\r\\n            id=\\\"city_id\\\">\\r\\n            <md-option *ngFor=\\\"let item of cities\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n        </md-select>\\r\\n    </div>\\r\\n    <!-- address -->\\r\\n    <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input required type=\\\"text\\\" id=\\\"address\\\" name=\\\"address\\\" [(ngModel)]=\\\"_model.stakeholders_info.address\\\" mdInput placeholder=\\\"Dirección\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- phone_number -->\\r\\n    <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input required NumberOnly type=\\\"text\\\" id=\\\"phone_number\\\" name=\\\"phone_number\\\" [(ngModel)]=\\\"_model.stakeholders_info.phone_number\\\"\\r\\n                mdInput placeholder=\\\"Teléfono\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- email -->\\r\\n    <div class='col-sm-12 col-md-4 margin-botton'>\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input required type=\\\"text\\\" id=\\\"website\\\" name=\\\"website\\\" [(ngModel)]=\\\"_model.stakeholders_info.email\\\" mdInput placeholder=\\\"Correo electrónico\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- ######################################## PROFILE ######################################## -->\\r\\n\\r\\n    <div class=\\\"col-sm-12 mark\\\">\\r\\n        <!--  -->\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h4>Perfiles como tercero</h4>\\r\\n        </div>\\r\\n        <!--  -->\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_customer\\\" name=\\\"is_customer\\\" [(ngModel)]=\\\"_model.profile.is_customer\\\">Cliente</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_supplier\\\" name=\\\"is_supplier\\\" [(ngModel)]=\\\"_model.profile.is_supplier\\\">Proveedor</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_seller\\\" name=\\\"is_seller\\\" [(ngModel)]=\\\"_model.profile.is_seller\\\">Vendedor</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_employee\\\" name=\\\"is_employee\\\" [(ngModel)]=\\\"_model.profile.is_employee\\\">Empleador</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_maker\\\" name=\\\"is_maker\\\" [(ngModel)]=\\\"_model.profile.is_maker\\\">Fabricante</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_importer\\\" name=\\\"is_importer\\\" [(ngModel)]=\\\"_model.profile.is_importer\\\">Importador</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-6'>\\r\\n            <md-checkbox id=\\\"is_holder_sanitary\\\" name=\\\"is_holder_sanitary\\\" [(ngModel)]=\\\"_model.profile.is_holder_sanitary\\\">Titular de registro sanitario</md-checkbox>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- ######################################## PROFILE ######################################## -->\\r\\n\\r\\n    <!-- ######################################################################################### -->\\r\\n    <div class=\\\"col-sm-12 mark\\\" *ngIf=\\\"_model.stakeholders_info.person_type_id == 39 && (_model.profile.is_supplier || _model.profile.is_customer)\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h2 class=\\\"article-title text-center margin-10\\\">Información Tributaria</h2>\\r\\n        </div>\\r\\n        <!-- tax_regime_id -->\\r\\n        <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Tipo de regimen\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.tax_regime_id\\\"\\r\\n                name=\\\"tax_regime_id\\\" id=\\\"tax_regime_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of tax_regime\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <span class=\\\"col-sm-12\\\"></span>\\r\\n        <!-- retention_for_rent -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"retention_for_rent\\\" name=\\\"retention_for_rent\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.retention_for_rent\\\">Retención por renta</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- big_contributor -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"big_contributor\\\" name=\\\"big_contributor\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.big_contributor\\\">Gran Contribuyente</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- codes_iva -->\\r\\n        <div class='col-sm-12 margin-bottom' [ngClass]=\\\"{ 'col-md-6' : !_model.comercial_stakeholders_info.codes.iva, 'col-md-3' : _model.comercial_stakeholders_info.codes.iva }\\\">\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"codes_iva\\\" name=\\\"codes_iva\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.iva\\\">Retenedor de IVA</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- code_iva_percent -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom' *ngIf=\\\"_model.comercial_stakeholders_info.codes.iva\\\">\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"code_iva_percent\\\" name=\\\"code_iva_percent\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.iva_percent\\\"\\r\\n                    mdInput>\\r\\n                <span matSuffix>% &nbsp;</span>\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- codes_ica -->\\r\\n        <div class='col-sm-12 margin-bottom' [ngClass]=\\\"{ 'col-md-6' : !_model.comercial_stakeholders_info.codes.ica, 'col-md-3' : _model.comercial_stakeholders_info.codes.ica }\\\">\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"codes_ica\\\" name=\\\"codes_ica\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.ica\\\">Retenedor de ICA</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- code_ica_percent -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom' *ngIf=\\\"_model.comercial_stakeholders_info.codes.ica\\\">\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"code_ica_percent\\\" name=\\\"code_ica_percent\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.ica_percent\\\"\\r\\n                    mdInput>\\r\\n                <span matSuffix>% &nbsp;</span>\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <span class=\\\"col-sm-12\\\"></span>\\r\\n        <!-- codes_ciiu -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"codes_ica\\\" name=\\\"codes_ica\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.ciiu\\\" mdInput\\r\\n                    placeholder=\\\"Código CIIU\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- ######################################################################################### -->\\r\\n    <div class=\\\"col-sm-12 mark\\\" *ngIf=\\\"_model.profile.is_customer\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h2 class=\\\"article-title text-center margin-10\\\">Información del Cliente</h2>\\r\\n        </div>\\r\\n        <!-- customer_class_id -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-select class=\\\"full-width\\\" placeholder=\\\"Clases de cliente\\\" [(ngModel)]=\\\"_model.customer.customer_class_id\\\" name=\\\"customer_class_id\\\"\\r\\n                id=\\\"customer_class_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of customers_class\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- debt_type_id -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Tipo de cartera\\\" [(ngModel)]=\\\"_model.customer.debt_type_id\\\" name=\\\"debt_type_id\\\"\\r\\n                id=\\\"city_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of portfolio_type\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- credit_limit -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"credit_limit\\\" name=\\\"credit_limit\\\" [(ngModel)]=\\\"_model.customer.credit_limit\\\" mdInput\\r\\n                    placeholder=\\\"Cupo crédito\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- sales_representative_id -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Vendedor\\\" [(ngModel)]=\\\"_model.customer.sales_representative_id\\\" name=\\\"sales_representative_id\\\"\\r\\n                id=\\\"sales_representative_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of sales_representatives\\\" [value]=\\\"item.id\\\">{{ item.stakeholder_info.fullname }}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- global_discount -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"global_discount\\\" name=\\\"global_discount\\\" [(ngModel)]=\\\"_model.customer.global_discount\\\" mdInput\\r\\n                    placeholder=\\\"Descuento Global\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- payment_condition -->\\r\\n        <div *ngIf=\\\"_model.customer.debt_type_id == 18\\\" class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-select [required]=\\\"_model.customer.debt_type_id == 17\\\" class=\\\"full-width\\\" placeholder=\\\"Condición de pago\\\" [(ngModel)]=\\\"_model.customer.payment_condition_id\\\"\\r\\n                name=\\\"payment_condition\\\" id=\\\"payment_condition\\\">\\r\\n                <md-option *ngFor=\\\"let item of conditions_payment\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- credit_limit_blocking -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"credit_limit_blocking\\\" name=\\\"credit_limit_blocking\\\" [(ngModel)]=\\\"_model.customer.credit_limit_blocking\\\">Bloqueo por cupo</md-slide-toggle>\\r\\n        </div>\\r\\n        <span class=\\\"col-sm-12\\\"></span>\\r\\n        <!-- days_early_payment -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"days_early_payment\\\" name=\\\"days_early_payment\\\" [(ngModel)]=\\\"_model.customer.days_early_payment\\\"\\r\\n                    mdInput placeholder=\\\"Descuento de pronto pago\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- days_grace -->\\r\\n        <div *ngIf=\\\"_model.customer.debt_type_id == 18\\\" class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly [required]=\\\"_model.customer.debt_type_id == 17\\\" required type=\\\"text\\\" id=\\\"days_grace\\\" name=\\\"days_grace\\\"\\r\\n                    [(ngModel)]=\\\"_model.customer.days_grace\\\" mdInput placeholder=\\\"Días de gracia\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- late_payment_blocking -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"late_payment_blocking\\\" name=\\\"late_payment_blocking\\\" [(ngModel)]=\\\"_model.customer.late_payment_blocking\\\">Bloqueo por mora</md-slide-toggle>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"box-header no-padding-h text-center\\\">\\r\\n                <h5 class=\\\"text-left\\\">Contacto de Compras</h5>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- name_purchases_contact -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"name_purchases_contact\\\" name=\\\"name_purchases_contact\\\" [(ngModel)]=\\\"_model.customer.purchases_contact.name\\\"\\r\\n                    mdInput placeholder=\\\"Nombre\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- phone_purchases_contact -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"phone_purchases_contact\\\" name=\\\"phone_purchases_contact\\\" [(ngModel)]=\\\"_model.customer.purchases_contact.phone\\\"\\r\\n                    mdInput placeholder=\\\"Teléfono\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- email_purchases_contact -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"email_purchases_contact\\\" name=\\\"email_purchases_contact\\\" [(ngModel)]=\\\"_model.customer.purchases_contact.email\\\"\\r\\n                    mdInput placeholder=\\\"Correo electrónico\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"box-header no-padding-h text-center\\\">\\r\\n                <h5 class=\\\"text-left\\\">Contacto de Cartera</h5>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- name_debt_contact -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"name_debt_contact\\\" name=\\\"name_debt_contact\\\" [(ngModel)]=\\\"_model.customer.debt_contact.name\\\" mdInput\\r\\n                    placeholder=\\\"Nombre\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- phone_debt_contact -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" NumberOnly id=\\\"phone_debt_contact\\\" name=\\\"phone_debt_contact\\\" [(ngModel)]=\\\"_model.customer.debt_contact.phone\\\"\\r\\n                    mdInput placeholder=\\\"Teléfono\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- email_debt_contact -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"email_debt_contact\\\" name=\\\"email_debt_contact\\\" [(ngModel)]=\\\"_model.customer.debt_contact.email\\\" mdInput\\r\\n                    placeholder=\\\"Correo electrónico \\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"margin-bottom: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Puntos de envío</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddSucursal()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Sucursal</th>\\r\\n                                    <th>Ubicación</th>\\r\\n                                    <th></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.shipping_points\\\">\\r\\n                                    <td>{{ item.name }}</td>\\r\\n                                    <td>{{ item.country.value + ', ' + item.department.value + ', ' + item.city.value }}</td>\\r\\n                                    <td class=\\\"text-center\\\" title=\\\"Remover empresa\\\">\\r\\n                                        <a style=\\\"cursor: pointer;\\\" class=\\\"text-danger\\\" (click)=\\\"removeSucursal(item)\\\">\\r\\n                                            <i class=\\\"fa fa-trash fa-2x\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"margin-bottom: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Contrato institucional</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button  md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddInstitucionalSale()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>No. Contrato</th>\\r\\n                                    <th>Entidad contratante</th>\\r\\n                                    <th></th>\\r\\n                                    <th></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.institutional_sale_contract\\\">\\r\\n                                    <td>{{ item.contract_number }}</td>\\r\\n                                    <td>{{ item.contracting_entity }}</td>\\r\\n                                    <td>\\r\\n                                        <a *ngIf=\\\"item.file !== '' && item.file !== null\\\" href=\\\"{{ item.file }}\\\">\\r\\n                                            <i class=\\\"fa fa-paperclip fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-center\\\" title=\\\"Remover empresa\\\">\\r\\n                                        <a style=\\\"cursor: pointer;\\\" class=\\\"text-danger\\\" (click)=\\\"removeInstitucionalSale(item)\\\">\\r\\n                                            <i class=\\\"fa fa-trash fa-2x\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"margin-bottom: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Resoluciones de controlado</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddControlledResolution()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>No. Resolución</th>\\r\\n                                    <th>Fecha de as</th>\\r\\n                                    <th>Fecha de expiración</th>\\r\\n                                    <th>Estado</th>\\r\\n                                    <th colspan=\\\"2\\\"></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.controlled_resolution\\\">\\r\\n                                    <td>{{ item.resolution_number }}</td>\\r\\n                                    <td>{{ item.issue_date | date: 'dd-MM-yyyy'}}</td>\\r\\n                                    <td>{{ item.expiration_date | date: 'dd-MM-yyyy'}}</td>\\r\\n                                    <td>{{ item.state ? 'Actvo' : 'Inactivo' }}</td>\\r\\n                                    <td class=\\\"text-center\\\" title=\\\"Remover empresa\\\">\\r\\n                                        <a style=\\\"cursor: pointer;\\\" class=\\\"text-danger\\\" (click)=\\\"removeControlledResolution(item)\\\">\\r\\n                                            <i class=\\\"fa fa-trash fa-2x\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"margin-bottom: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Resoluciones de monopolio</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button [disabled]=\\\"_model.customer.shipping_points.length == 0\\\" md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddMonopolyResolution()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>No. Resolución</th>\\r\\n                                    <th>Fecha de as</th>\\r\\n                                    <th>Fecha de expiración</th>\\r\\n                                    <th>Estado</th>\\r\\n                                    <th></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.monopoly_resolution\\\">\\r\\n                                    <td>{{ item.resolution_number }}</td>\\r\\n                                    <td>{{ item.issue_date | date: 'dd-MM-yyyy'}}</td>\\r\\n                                    <td>{{ item.expiration_date | date: 'dd-MM-yyyy'}}</td>\\r\\n                                    <td>{{ item.state ? 'Actvo' : 'Inactivo' }}</td>\\r\\n                                    <td class=\\\"text-center\\\" title=\\\"Remover\\\">\\r\\n                                        <a style=\\\"cursor: pointer;\\\" class=\\\"text-danger\\\" (click)=\\\"removeMonopolyResolution(item)\\\">\\r\\n                                            <i class=\\\"fa fa-trash fa-2x\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- ######################################################################################### -->\\r\\n    <div class=\\\"col-sm-12 mark\\\" *ngIf=\\\"_model.profile.is_supplier\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h2 class=\\\"article-title text-center margin-10\\\">Información del proveedor</h2>\\r\\n        </div>\\r\\n        <!-- class supplier -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Clase de proveedor\\\" [(ngModel)]=\\\"_model.supplier.supplier_class_id\\\" name=\\\"supplier_class_id\\\"\\r\\n                id=\\\"supplier_class_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of suppliers_class\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- credit_limit -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"supplier_credit_limit\\\" name=\\\"supplier_credit_limit\\\" [(ngModel)]=\\\"_model.supplier.credit_limit\\\"\\r\\n                    mdInput placeholder=\\\"Cupo de crédito\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- supplier_global_discount -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"supplier_global_discount\\\" name=\\\"supplier_global_discount\\\" [(ngModel)]=\\\"_model.supplier.global_discount\\\"\\r\\n                    mdInput placeholder=\\\"Descuento Global\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- supplier_payment_condition -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Condición de pago\\\" [(ngModel)]=\\\"_model.supplier.payment_condition_id\\\"\\r\\n                name=\\\"supplier_payment_condition\\\" id=\\\"supplier_payment_condition\\\">\\r\\n                <md-option *ngFor=\\\"let item of conditions_payment\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- supplier_days_early_payment -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"supplier_days_early_payment\\\" name=\\\"supplier_days_early_payment\\\" [(ngModel)]=\\\"_model.supplier.days_early_payment\\\"\\r\\n                    mdInput placeholder=\\\"Días de pronto pago\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- supplier_days_grace -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"supplier_days_grace\\\" name=\\\"supplier_days_grace\\\" [(ngModel)]=\\\"_model.supplier.days_grace\\\"\\r\\n                    mdInput placeholder=\\\"Días de gracia\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- payment_method_id -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Método de pago\\\" [(ngModel)]=\\\"_model.supplier.payment_method_id\\\" name=\\\"supplier_payment_method_id\\\"\\r\\n                id=\\\"supplier_class_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of payment_method\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- purchase_order -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"purchase_order\\\" name=\\\"purchase_order\\\" [(ngModel)]=\\\"_model.supplier.purchase_order\\\">Exige orden de compra</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex margin-bottom\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Ceuntas bancarias</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddBankAccount()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Nombre</th>\\r\\n                                    <th>Cuenta</th>\\r\\n                                    <th>Tipo de cuenta</th>\\r\\n                                    <th></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.supplier.bank_accounts\\\">\\r\\n                                    <td>{{ item.bank?.value }}</td>\\r\\n                                    <td>{{ item?.account_number }}</td>\\r\\n                                    <td>{{ item.bank_account_type?.value }}</td>\\r\\n                                    <td class=\\\"text-center\\\" title=\\\"Remover\\\">\\r\\n                                        <a style=\\\"cursor: pointer;\\\" class=\\\"text-danger\\\" (click)=\\\"removeBankAccount(item)\\\">\\r\\n                                            <i class=\\\"fa fa-trash fa-2x\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"box-header no-padding-h text-center\\\">Contacto de Venta</div>\\r\\n        </div>\\r\\n        <!-- name_sales_contact -->\\r\\n        <div class='col-sm-12 col-md-12 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"name_sales_contact\\\" name=\\\"name_sales_contact\\\" [(ngModel)]=\\\"_model.supplier.sales_contact.name\\\"\\r\\n                    mdInput placeholder=\\\"Nombre del contacto de compras\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- phone_sales_contact -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"phone_sales_contact\\\" name=\\\"phone_sales_contact\\\" [(ngModel)]=\\\"_model.supplier.sales_contact.phone\\\"\\r\\n                    mdInput placeholder=\\\"Teléfono del contacto de compras\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- email_sales_contact -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"email_sales_contact\\\" name=\\\"email_sales_contact\\\" [(ngModel)]=\\\"_model.supplier.sales_contact.email\\\"\\r\\n                    mdInput placeholder=\\\"Correo electrónico del contacto de compras\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-12\\\" [class.btn-action-container]=\\\"booActive\\\">\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"!stakeHolderForm.form.valid\\\" md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\"\\r\\n            (click)=\\\"save()\\\">{{strAction}}</button>\\r\\n    </div>\\r\\n</form>\"\n\n/***/ }),\n\n/***/ 1504:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- LIST -->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\" (keydown)=\\\"enter($event)\\\">\\r\\n            <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\r\\n                <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\r\\n                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\" *ngIf=\\\"!noaction\\\">\\r\\n        <button *ngIf=\\\"actions[0].status\\\" md-raised-button (click)=\\\"CUD('Guardar')\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">\\r\\n            <md-icon>add_circle_outline</md-icon> Nuevo\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n\\r\\n        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n            <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th class=\\\"noAuto\\\" (click)=\\\"sort('i.id')\\\">ID\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='i.id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('firstname')\\\">Nombre\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='firstname'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('document_number')\\\">Número de documento\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n\\r\\n                        <th (click)=\\\"sort('c.value')\\\">Ubicación\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='c.value'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('i.status')\\\">Estado\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='i.status'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\"></th>\\r\\n                        <th *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\"></th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of list.data\\\">\\r\\n                        <td class=\\\"noAuto\\\">{{ item.id }}</td>\\r\\n                        <td *ngIf=\\\"item.person_type_id === 38\\\">{{ item.name }}</td>\\r\\n                        <td *ngIf=\\\"item.person_type_id === 39\\\">{{ item.businessname }}</td>\\r\\n                        <td>{{ item.document_number }}</td>\\r\\n                        <td>{{ item.geolocation }}</td>\\r\\n                        <td>{{ item.status ? 'Activo' : 'Inactivo' }}</td>\\r\\n                        <td *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\">\\r\\n                            <button type=\\\"button\\\" md-icon-button class=\\\"text-primary\\\" (click)=\\\"CUD('Actualizar',item)\\\">\\r\\n                                <md-icon>mode_edit</md-icon>\\r\\n                            </button>\\r\\n                        </td>\\r\\n                        <td *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\">\\r\\n                            <button type=\\\"button\\\" md-icon-button class=\\\"text-danger\\\" (click)=\\\"CUD('Eliminar',item)\\\">\\r\\n                                <md-icon>delete</md-icon>\\r\\n                            </button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n\\r\\n        </div>\\r\\n        <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"6\\\" [rotate]=\\\"true\\\"\\r\\n            [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\r\\n\\r\\n    </div>\\r\\n</div>\"\n\n/***/ }),\n\n/***/ 1505:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<section class=\\\"chapter\\\">\\r\\n    <section class=\\\"hero\\\">\\r\\n        <div class=\\\"hero-content\\\">\\r\\n            <h1 class=\\\"hero-title\\\">Terceros</h1>\\r\\n        </div>\\r\\n        <p class=\\\"hero-tagline\\\">A través de esta opción, usted podrá crear los clientes, proveedores, vendedores y empleados</p>\\r\\n    </section>\\r\\n    <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\r\\n        <div class=\\\"container-fluid with-maxwidth\\\">\\r\\n            <div class=\\\"box box-default\\\">\\r\\n                <div class=\\\"box-body\\\">\\r\\n                    <stakeholders-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\" [strAction]=\\\"strAction\\\"></stakeholders-action-cmp>\\r\\n                    <stakeholders-list-cmp *ngIf=\\\"isOpenList\\\"></stakeholders-list-cmp>\\r\\n                </div>               \\r\\n            </div>\\r\\n        </div>\\r\\n    </article>\\r\\n</section>\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 3.c4e8c33cbe5203000fa9.chunk.js","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { SharedModule } from \"../../shared/shared.module\";\r\nimport { StakeholdersComponent } from \"./stakeholders.component\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { StakeholdersActionComponent } from \"./stakeholders-action/stakeholders-action.component\";\r\nimport { StakeholdersListComponent } from \"./stakeholders-list/stakeholders-list.component\";\r\nimport { MdDialogModule } from '@angular/material';\r\n\r\nconst routes: Routes = [{ path: '', component: StakeholdersComponent }];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,        \r\n        RouterModule.forChild(routes),\r\n        SharedModule,\r\n        NgbModule.forRoot(),\r\n        MdDialogModule      \r\n    ],\r\n    declarations: [\r\n        StakeholdersComponent,\r\n        StakeholdersActionComponent,\r\n        StakeholdersListComponent\r\n    ]\r\n    \r\n})\r\nexport class StakeholdersModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/smartity/stakeholders/stakeholders.module.ts","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DataTableResource } from 'angular-4-data-table';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Base } from '../bases/base';\r\n\r\n@Component({\r\n    selector: 'stakeholders-cmp',\r\n    template: require('./stakeholders.component.html'),\r\n    styles: []\r\n})\r\n\r\nexport class StakeholdersComponent extends Base implements OnInit {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/smartity/stakeholders/stakeholders.component.ts","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MdSnackBar, MdDialogRef, MdDialog } from '@angular/material';\r\nimport { LoaderService, HelperService } from '../../../shared';\r\nimport { Response } from '@angular/http';\r\nimport { StakeholdersComponent } from '../stakeholders.component';\r\nimport { BaseModel } from '../../bases/base-model';\r\nimport { ModalConfirmationComponent, ModalSucursalComponent, ModalResolutionComponent, ModalInstitucionalSaleContractComponent, ModalBankAccountComponent } from '../../modals';\r\nimport { filter } from 'rxjs/operators';\r\nimport { isNullOrUndefined } from 'util';\r\n\r\n@Component({\r\n    selector: 'stakeholders-action-cmp',\r\n    template: require('./stakeholders-action.component.html')\r\n})\r\nexport class StakeholdersActionComponent extends BaseModel implements OnInit {\r\n\r\n    private _model: any = {\r\n        stakeholders_info: {},\r\n        comercial_stakeholders_info: {\r\n            codes: {}\r\n        },\r\n        customer: {\r\n            purchases_contact: {},\r\n            debt_contact: {},\r\n            shipping_points: [],\r\n            institutional_sale_contract: [],\r\n            controlled_resolution: []\r\n        },\r\n        employee: {},\r\n        supplier: {\r\n            bank_accounts: [],\r\n            sales_contact: {}\r\n        },\r\n        profile: {}\r\n    }\r\n    private document_number_digit = undefined;\r\n    private countries: any[] = [];\r\n    private country_id: any;\r\n    private departments: any[] = [];\r\n    private department_id: any;\r\n    private cities: any[] = [];\r\n    /**\r\n     * Array para los combos\r\n     */\r\n    private tax_regime: any[] = [];\r\n    private document_type: any[] = [];\r\n    private document_type_n: any[] = [];\r\n    private document_type_j: any[] = [];\r\n    private persons_type: any[] = [];\r\n    private conditions_payment: any[] = [];\r\n    private portfolio_type: any[] = [];\r\n    private sales_representatives: any[] = [];\r\n    private suppliers_class: any[] = [];\r\n    private customers_class: any[] = [];\r\n    private payment_method: any[] = [];\r\n    /**\r\n     *  Modalas\r\n     */\r\n    private sucursalDialogRef: MdDialogRef<ModalSucursalComponent>;\r\n    private confirmDialogRef: MdDialogRef<ModalConfirmationComponent>;\r\n    private resolutionDialogRef: MdDialogRef<ModalResolutionComponent>;\r\n    private institutionalSaleDialogRef: MdDialogRef<ModalInstitucionalSaleContractComponent>;\r\n    private bankAccountDialogRef: MdDialogRef<ModalBankAccountComponent>;\r\n    /**\r\n     *\r\n     */\r\n    constructor(\r\n        private loaderService: LoaderService,\r\n        private helperService: HelperService,\r\n        public snackBar: MdSnackBar,\r\n        private comp: StakeholdersComponent,\r\n        private dialog: MdDialog\r\n    ) {\r\n        super();\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.clean();\r\n        this.getCollection();\r\n        this.getSalesRepresentative();\r\n        if (this.numId !== undefined) {\r\n            this.getDataById();\r\n        }\r\n    }\r\n    private getCollection() {\r\n        this.loaderService.display(true);\r\n        this.helperService.POST(`/api/collections`, ['COUNTRIES', 'TAX_REGIME', 'TYPES_OF_DOCUMENTS', 'PORTFOLIO_TYPE', 'PERSONS_TYPE', 'PAYMENT_CONDITION', 'SUPPLIERS_CLASS', 'CUSTOMERS_CLASS', 'PAYMENT_METHOD']).subscribe(rs => {\r\n            const res = rs.json();\r\n            this.countries = res.COUNTRIES;\r\n            this.tax_regime = res.TAX_REGIME;\r\n            var document_type = res.TYPES_OF_DOCUMENTS;\r\n            this.portfolio_type = res.PORTFOLIO_TYPE;\r\n            this.persons_type = res.PERSONS_TYPE;\r\n            this.conditions_payment = res.PAYMENT_CONDITION;\r\n            this.suppliers_class = res.SUPPLIERS_CLASS;\r\n            this.customers_class = res.CUSTOMERS_CLASS;\r\n            this.payment_method = res.PAYMENT_METHOD;\r\n            document_type.filter(item => { if (item.value !== 'NIT') { this.document_type_n.push(item); } });\r\n            document_type.filter(item => { if (item.value == 'NIT') { this.document_type_j.push(item); } });\r\n            this.loaderService.display(false);\r\n        }, err => {\r\n            console.log(err);\r\n            this.loaderService.display(false);\r\n        });\r\n    }\r\n    private getSalesRepresentative() {\r\n        this.loaderService.display(true);\r\n        this.helperService.GET(`/api/sales_representatives?all=all`).subscribe(rs => {\r\n            const res = rs.json();\r\n            this.sales_representatives = res.data;\r\n            this.loaderService.display(false);\r\n        }, err => {\r\n            console.log(err);\r\n            this.loaderService.display(false);\r\n        });\r\n    }\r\n    private getDepartments() {\r\n        this.loaderService.display(true);\r\n        this.helperService.GET(`/api/departamentos?pais_id=${this.country_id}`).subscribe(rs => {\r\n            const res = rs.json();\r\n            this.departments = res['departamentos'];\r\n            this.loaderService.display(false);\r\n        }, err => {\r\n            console.log(err);\r\n            this.loaderService.display(false);\r\n        });\r\n    }\r\n    private getCities() {\r\n        this.loaderService.display(true);\r\n        this.helperService.GET(`/api/ciudades?departamento_id=${this.department_id}`).subscribe(rs => {\r\n            const res = rs.json();\r\n            this.cities = res['ciudades'];\r\n            this.loaderService.display(false);\r\n        }, err => {\r\n            console.log(err);\r\n            this.loaderService.display(false);\r\n        });\r\n    }\r\n    private save() {\r\n        this.loaderService.display(true);\r\n        const formData: FormData = new FormData();\r\n        formData.append('data', JSON.stringify(this._model));\r\n        if (this._model.customer) {\r\n            if (this._model.customer.institutional_sale_contract) {\r\n                this._model.customer.institutional_sale_contract.forEach((obj) => {\r\n                    if (obj.is_file === true) {\r\n                        formData.append(obj.contract_number + '_file', obj.file);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        switch (this.strAction) {\r\n            case 'Guardar':\r\n                this.helperService.POSTFORMDATA(`/api/stakeholders`, formData).subscribe(rs => {\r\n                    const res = rs.json();\r\n                    if (res.store) {\r\n                        this.snackBar.open(res.message, 'Guardado', { duration: 4000 });\r\n                        this.goList();\r\n                    }\r\n                }, err => {\r\n                    this.snackBar.open(err.message, 'Guardado', { duration: 4000 });\r\n                    this.loaderService.display(false);\r\n                });\r\n                break;\r\n            case 'Actualizar':\r\n                this.helperService.POSTFORMDATA(`/api/update_stake_holder/${this.numId}`, formData).subscribe(rs => {\r\n                    const res = rs.json();\r\n                    if (res.update) {\r\n                        this.snackBar.open(res.message, 'Actualización', { duration: 4000 });\r\n                        this.comp.openList();\r\n                    }\r\n                }, err => {\r\n                    this.snackBar.open(err.message, 'Actualización', { duration: 4000 });\r\n                    this.loaderService.display(true);\r\n                });\r\n                break;\r\n            case 'Eliminar':\r\n                this.helperService.DELETE(`/api/stakeholders/${this.numId}`).subscribe(rs => {\r\n                    const res = rs.json();\r\n                    if (res.delete) {\r\n                        this.snackBar.open(res.message, 'Eliminación', { duration: 4000 });\r\n                        this.comp.openList();\r\n                    }\r\n                }, err => {\r\n                    this.snackBar.open(err.message, 'Eliminación', { duration: 4000 });\r\n                    this.loaderService.display(true);\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    private getDataById(): void {\r\n        this.loaderService.display(true);\r\n        this.helperService.GET(`/api/stakeholders/${this.numId}`).subscribe(rs => {\r\n            const res = rs.json();\r\n            this._model = res['data'];\r\n            this.selectPersonType(false);\r\n            this.country_id = res.country_id;\r\n            this.getDepartments();\r\n            this.department_id = res.department_id;\r\n            this.getCities();\r\n            this.getRutDigit();\r\n\r\n            if(!this._model.comercial_stakeholders_info) {\r\n                this._model.comercial_stakeholders_info = {\r\n                    codes: {}\r\n                }\r\n            }\r\n            if(!this._model.customer){\r\n                this._model.customer = {\r\n                    purchases_contact: {},\r\n                    debt_contact: {},\r\n                    shipping_points: [],\r\n                    institutional_sale_contract: [],\r\n                    controlled_resolution: []\r\n                }\r\n            }\r\n            if(!this._model.employee) {\r\n                this._model.employee = {}\r\n            }\r\n            if(!this._model.supplier) {\r\n                this._model.supplier = {\r\n                    bank_accounts: [],\r\n                    sales_contact: {}\r\n                }\r\n            }\r\n        }, err => {\r\n            this.loaderService.display(false);\r\n        });\r\n    }\r\n    private clean() {\r\n        this._model = {\r\n            stakeholders_info: {},\r\n            comercial_stakeholders_info: {\r\n                codes: {}\r\n            },\r\n            customer: {\r\n                purchases_contact: {},\r\n                debt_contact: {},\r\n                shipping_points: [],\r\n                institutional_sale_contract: [],\r\n                controlled_resolution: []\r\n            },\r\n            employee: {},\r\n            supplier: {\r\n                bank_accounts: [],\r\n                sales_contact: {}\r\n            },\r\n            profile: {}\r\n        }\r\n    }\r\n    private goList() {\r\n        this.comp.openList();\r\n    }\r\n    private openAddSucursal() {\r\n        this.sucursalDialogRef = this.dialog.open(ModalSucursalComponent, { hasBackdrop: false });\r\n        this.sucursalDialogRef.afterClosed().pipe(filter((shipping_point) => shipping_point)).subscribe((shipping_point) => {\r\n            this._model.customer.shipping_points.push(shipping_point);\r\n        });\r\n    }\r\n    private removeSucursal(obj: any) {\r\n        this.confirmDialogRef = this.dialog.open(ModalConfirmationComponent, {\r\n            hasBackdrop: false, data: {\r\n                message: 'Desea remover la sucursal?',\r\n                title: 'Confirmar',\r\n                button_confirm: 'Si',\r\n                button_close: 'No'\r\n            }\r\n        });\r\n        this.confirmDialogRef.afterClosed().subscribe((confirmation) => {\r\n            if (confirmation) {\r\n                const index = this._model.customer.shipping_points.indexOf(obj);\r\n                this._model.customer.shipping_points.splice(index, 1);\r\n            }\r\n        });\r\n    }\r\n    private openAddControlledResolution() {\r\n        this.resolutionDialogRef = this.dialog.open(ModalResolutionComponent, {\r\n            hasBackdrop: false,\r\n            data: {\r\n                shipping_points: this._model.customer.shipping_points,\r\n                title: 'Agregar Resolución de controlado'\r\n            }\r\n        });\r\n        this.resolutionDialogRef.afterClosed().pipe(filter(ctr_resolution => ctr_resolution)).subscribe(ctr_resolution => {\r\n            this._model.customer.controlled_resolution.push(ctr_resolution);\r\n        });\r\n    }\r\n    private removeControlledResolution(obj: any) {\r\n        this.resolutionDialogRef = this.dialog.open(ModalResolutionComponent, {\r\n            hasBackdrop: false,\r\n            data: {\r\n                message: 'Desea remover el registro?',\r\n                title: 'Confirmar',\r\n                button_confirm: 'Si',\r\n                button_close: 'No'\r\n            }\r\n        });\r\n\r\n        this.resolutionDialogRef.afterClosed().subscribe(confirmation => {\r\n            if (confirmation) {\r\n                var index = this._model.customer.controlled_resolution.indexOf(obj);\r\n                this._model.customer.controlled_resolution.splice(index, 1);\r\n            }\r\n        });\r\n\r\n    }\r\n    private openAddMonopolyResolution() {\r\n        this.resolutionDialogRef = this.dialog.open(ModalResolutionComponent, {\r\n            hasBackdrop: false,\r\n            data: {\r\n                shipping_points: this._model.customer.shipping_points,\r\n                title: 'Agregar Resolución de monopolio'\r\n            }\r\n        });\r\n\r\n        this.resolutionDialogRef.afterClosed().pipe(filter(mnp_resolution => mnp_resolution)).subscribe(mnp_resolution => {\r\n            this._model.customer.monopoly_resolution.push(mnp_resolution);\r\n        });\r\n\r\n    }\r\n    private removeMonopolyResolution(obj: any) {\r\n\r\n        this.resolutionDialogRef = this.dialog.open(ModalResolutionComponent, {\r\n            hasBackdrop: false,\r\n            data: {\r\n                message: 'Desea remover el registro?',\r\n                title: 'Confirmar',\r\n                button_confirm: 'Si',\r\n                button_close: 'No'\r\n            }\r\n        });\r\n\r\n        this.resolutionDialogRef.afterClosed().subscribe(confirmation => {\r\n            if (confirmation) {\r\n                var index = this._model.customer.monopoly_resolution.indexOf(obj);\r\n                this._model.customer.monopoly_resolution.splice(index, 1);\r\n            }\r\n        });\r\n\r\n    }\r\n    private openAddInstitucionalSale() {\r\n        this.institutionalSaleDialogRef = this.dialog.open(ModalInstitucionalSaleContractComponent, {\r\n            hasBackdrop: false,\r\n            data: {\r\n                title: 'Agregar Contrato institucional'\r\n            }\r\n        });\r\n\r\n        this.institutionalSaleDialogRef\r\n            .afterClosed()\r\n            .pipe(filter(institutional_sale_contract => institutional_sale_contract))\r\n            .subscribe(institutional_sale_contract => {\r\n                this._model.customer.institutional_sale_contract.push(institutional_sale_contract);\r\n            });\r\n    }\r\n    private removeInstitucionalSale(obj: any) {\r\n\r\n        this.institutionalSaleDialogRef = this.dialog.open(ModalInstitucionalSaleContractComponent, {\r\n            hasBackdrop: false,\r\n            data: {\r\n                message: 'Desea remover el registro?',\r\n                title: 'Confirmar',\r\n                button_confirm: 'Si',\r\n                button_close: 'No'\r\n            }\r\n        });\r\n\r\n        this.institutionalSaleDialogRef\r\n            .afterClosed()\r\n            // .pipe(filter(confirmation => confirmation))\r\n            .subscribe(confirmation => {\r\n                if (confirmation) {\r\n                    var index = this._model.customer.institutional_sale_contract.indexOf(obj);\r\n                    this._model.customer.institutional_sale_contract.splice(index, 1);\r\n                }\r\n            });\r\n\r\n    }\r\n    private openAddBankAccount() {\r\n        this.bankAccountDialogRef = this.dialog.open(ModalBankAccountComponent, {\r\n            hasBackdrop: false,\r\n            data: {\r\n                title: 'Cuenta bancaria'\r\n            }\r\n        });\r\n\r\n        this.bankAccountDialogRef.afterClosed().pipe(filter(bank_account => bank_account)).subscribe(bank_account => {\r\n            this._model.supplier.bank_accounts.push(bank_account);\r\n        });\r\n    }\r\n    private removeBankAccount(obj: any) {\r\n\r\n        this.bankAccountDialogRef = this.dialog.open(ModalBankAccountComponent, {\r\n            hasBackdrop: false,\r\n            data: {\r\n                message: 'Desea remover el registro?',\r\n                title: 'Confirmar',\r\n                button_confirm: 'Si',\r\n                button_close: 'No'\r\n            }\r\n        });\r\n\r\n        this.bankAccountDialogRef.afterClosed().subscribe(confirmation => {\r\n            if (confirmation) {\r\n                var index = this._model.supplier.bank_accounts.indexOf(obj);\r\n                this._model.supplier.bank_accounts.splice(index, 1);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private zero_fill(i_valor, num_ceros) {\r\n        let relleno = '';\r\n        let i = 1;\r\n        let salir = 0;\r\n        while (!salir) {\r\n            let total_caracteres = i_valor.length + i;\r\n            if (i > num_ceros || total_caracteres > num_ceros) {\r\n                salir = 1;\r\n            } else {\r\n                relleno = relleno + \"0\";\r\n            }\r\n            i++\r\n        }\r\n\r\n        i_valor = relleno + i_valor\r\n        return i_valor\r\n    }\r\n    private getRutDigit() {\r\n        if (this._model.stakeholders_info.document_type_id == 14 || this._model.stakeholders_info.rut) {\r\n            let i_rut = this._model.stakeholders_info.document_number;\r\n            let pesos = [71, 67, 59, 53, 47, 43, 41, 37, 29, 23, 19, 17, 13, 7, 3];\r\n            let rut_fmt = this.zero_fill(i_rut, 15)\r\n            let suma = 0;\r\n            let digitov;\r\n            for (let i = 0; i <= 14; i++) {\r\n                suma += rut_fmt.substring(i, i + 1) * pesos[i];\r\n            }\r\n\r\n            let resto = suma % 11;\r\n            if (resto === 0 || resto === 1) {\r\n                digitov = resto;\r\n            } else {\r\n                digitov = 11 - resto;\r\n            }\r\n\r\n            this.document_number_digit = digitov;\r\n        } else {\r\n            this.document_number_digit = undefined;\r\n        }\r\n    }\r\n    private selectPersonType(est = true) {\r\n        if (est) {\r\n            this._model.stakeholders_info.rut = false;\r\n            this._model.stakeholders_info.document_type_id = undefined;\r\n        }\r\n\r\n        if (this._model.stakeholders_info.person_type_id == 39) {\r\n            this.document_type = this.document_type_j;\r\n        } else {\r\n            this.document_type = this.document_type_n;\r\n        }\r\n    }\r\n    private changeDocumentType() {\r\n        this._model.stakeholders_info.rut = false;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/smartity/stakeholders/stakeholders-action/stakeholders-action.component.ts","import { Component, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\r\nimport { DataTableResource } from 'angular-4-data-table';\r\nimport { FormControl } from '@angular/forms';\r\nimport 'rxjs/add/operator/startWith';\r\nimport { MdSnackBar } from '@angular/material';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseList } from '../../bases/base-list';\r\nimport { LoaderService, HelperService } from '../../../shared';\r\nimport { Response } from '@angular/http';\r\nimport { StakeholdersComponent } from '../stakeholders.component';\r\n\r\n@Component({\r\n    selector: 'stakeholders-list-cmp',\r\n    template: require('./stakeholders-list.component.html'),\r\n    styles: []\r\n})\r\n\r\nexport class StakeholdersListComponent extends BaseList implements OnInit {\r\n\r\n    @Output() select = new EventEmitter();\r\n    @Input() noaction: boolean;\r\n    @Input() type: string;\r\n\r\n    constructor(public router: Router,\r\n        public loaderService: LoaderService,\r\n        public helperService: HelperService,\r\n        private comp: StakeholdersComponent) {\r\n        super(loaderService, helperService);\r\n        this.urlApi = '/api/stakeholders';\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getAll();\r\n    }\r\n\r\n    private CUD(action:string, row?:any){\r\n        this.comp.strAction = action;\r\n        switch (action) {\r\n            case 'Guardar':\r\n                this.comp.id = undefined;\r\n                break;\r\n            default:\r\n                this.comp.id = row.id;\r\n                break;\r\n        }\r\n        this.comp.openActions();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/smartity/stakeholders/stakeholders-list/stakeholders-list.component.ts","module.exports = \"<form #stakeHolderForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"col-sm-12 margin-bottom-40\\\">\\r\\n        <button type=\\\"button\\\" md-raised-button color=\\\"primary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-md no-margin-left\\\">\\r\\n            <md-icon>keyboard_arrow_left</md-icon> Regresar\\r\\n        </button>\\r\\n    </div>\\r\\n    <!-- person_type_id -->\\r\\n    <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n        <md-select required class=\\\"full-width\\\" placeholder=\\\"Tipo de persona\\\" [(ngModel)]=\\\"_model.stakeholders_info.person_type_id\\\"\\r\\n            name=\\\"person_type_id\\\" id=\\\"person_type_id\\\" (change)=\\\"selectPersonType()\\\">\\r\\n            <md-option *ngFor=\\\"let item of persons_type\\\" [value]=\\\"item.id\\\">{{ item.value }}</md-option>\\r\\n        </md-select>\\r\\n    </div>\\r\\n    <!-- rut -->\\r\\n    <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n        <div class=\\\"flex height-30\\\">\\r\\n            <span class=\\\"flex-spacer\\\"></span>\\r\\n            <md-slide-toggle *ngIf=\\\"_model.stakeholders_info.person_type_id == 38 && _model.stakeholders_info.document_type_id == 12\\\" [labelPosition]=\\\"'before'\\\" id=\\\"rut\\\" name=\\\"rut\\\" [(ngModel)]=\\\"_model.stakeholders_info.rut\\\">RUT</md-slide-toggle>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- document_type_id -->\\r\\n    <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n        <md-select (change)=\\\"changeDocumentType()\\\" required class=\\\"full-width\\\" placeholder=\\\"Tipo de documento\\\" [(ngModel)]=\\\"_model.stakeholders_info.document_type_id\\\" name=\\\"document_type_id\\\" id=\\\"document_type_id\\\">\\r\\n            <md-option *ngFor=\\\"let item of document_type\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n        </md-select>\\r\\n    </div>\\r\\n    <!-- document number -->\\r\\n    <div class=\\\" margin-bottom\\\" [ngClass]=\\\"\\r\\n    { \\r\\n        'col-sm-8 col-md-4' : _model.stakeholders_info.document_type_id == 14 || _model.stakeholders_info.rut, \\r\\n        'col-sm-12 col-md-6' : _model.stakeholders_info.document_type_id != 14 && !_model.stakeholders_info.rut \\r\\n    }\\\">\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input required NumberOnly (focusout)=\\\"getRutDigit()\\\" type=\\\"text\\\" id=\\\"document_number\\\" name=\\\"document_number\\\" [(ngModel)]=\\\"_model.stakeholders_info.document_number\\\"\\r\\n                mdInput placeholder=\\\"Número de documento\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- document_number_digit -->\\r\\n    <div class='col-sm-4 col-md-2 margin-bottom' *ngIf=\\\"_model.stakeholders_info.document_type_id == 14 || _model.stakeholders_info.rut\\\">\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input [disabled]=\\\"true\\\" type=\\\"text\\\" id=\\\"document_number_digit\\\" name=\\\"document_number_digit\\\" [(ngModel)]=\\\"document_number_digit\\\"\\r\\n                mdInput placeholder=\\\"Dígito\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- ######################################## IF PERSON NATURAL ######################################## -->\\r\\n    <ng-container *ngIf=\\\"_model.stakeholders_info.person_type_id === 38 && !_model.stakeholders_info.rut\\\">\\r\\n        <!-- firstname -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"firstname\\\" name=\\\"firstname\\\" [(ngModel)]=\\\"_model.stakeholders_info.firstname\\\" mdInput placeholder=\\\"Primer nombre\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- middlename -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"middlename\\\" name=\\\"middlename\\\" [(ngModel)]=\\\"_model.stakeholders_info.middlename\\\" mdInput placeholder=\\\"Segundo nombres\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- lastname -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"lastname\\\" name=\\\"lastname\\\" [(ngModel)]=\\\"_model.stakeholders_info.lastname\\\" mdInput placeholder=\\\"Apellidos\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- second_surname -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"second_surname\\\" name=\\\"second_surname\\\" [(ngModel)]=\\\"_model.stakeholders_info.second_surname\\\" mdInput\\r\\n                    placeholder=\\\"Segundo apellido\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n    <!-- ######################################## IF PERSON NATURAL ######################################## -->\\r\\n    <!-- legalname -->\\r\\n    <div class='col-sm-12 margin-bottom' [ngClass]=\\\"{ 'col-md-6' : _model.stakeholders_info.rut, 'col-md-12' : !_model.stakeholders_info.rut }\\\"\\r\\n        *ngIf=\\\"_model.stakeholders_info.person_type_id === 39\\\">\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"legalname\\\" name=\\\"legalname\\\" [(ngModel)]=\\\"_model.stakeholders_info.legalname\\\" mdInput placeholder=\\\"Razón Social\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- business name -->\\r\\n    <div class='col-sm-12 margin-bottom' [ngClass]=\\\"{ 'col-md-6' : _model.stakeholders_info.person_type_id === 39 , 'col-md-12' :  _model.stakeholders_info.person_type_id !== 39 }\\\"\\r\\n        *ngIf=\\\"_model.stakeholders_info.rut\\\">\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"businessname\\\" name=\\\"businessname\\\" [(ngModel)]=\\\"_model.stakeholders_info.businessname\\\" mdInput placeholder=\\\"Nombre del Establecimiento\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!--country -->\\r\\n    <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n        <md-select required class=\\\"full-width\\\" placeholder=\\\"Pais\\\" [(ngModel)]=\\\"country_id\\\" name=\\\"country_id\\\" (change)=\\\"getDepartments()\\\"\\r\\n            id=\\\"country_id\\\">\\r\\n            <md-option *ngFor=\\\"let item of countries\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n        </md-select>\\r\\n    </div>\\r\\n    <!-- department -->\\r\\n    <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n        <md-select required class=\\\"full-width\\\" placeholder=\\\"Departamento\\\" [(ngModel)]=\\\"department_id\\\" name=\\\"department_id\\\" (change)=\\\"getCities()\\\"\\r\\n            id=\\\"department_id\\\">\\r\\n            <md-option *ngFor=\\\"let item of departments\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n        </md-select>\\r\\n    </div>\\r\\n    <!--city -->\\r\\n    <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n        <md-select required class=\\\"full-width\\\" placeholder=\\\"Ciudad\\\" [(ngModel)]=\\\"_model.stakeholders_info.geolocation_id\\\" name=\\\"city_id\\\"\\r\\n            id=\\\"city_id\\\">\\r\\n            <md-option *ngFor=\\\"let item of cities\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n        </md-select>\\r\\n    </div>\\r\\n    <!-- address -->\\r\\n    <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input required type=\\\"text\\\" id=\\\"address\\\" name=\\\"address\\\" [(ngModel)]=\\\"_model.stakeholders_info.address\\\" mdInput placeholder=\\\"Dirección\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- phone_number -->\\r\\n    <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input required NumberOnly type=\\\"text\\\" id=\\\"phone_number\\\" name=\\\"phone_number\\\" [(ngModel)]=\\\"_model.stakeholders_info.phone_number\\\"\\r\\n                mdInput placeholder=\\\"Teléfono\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- email -->\\r\\n    <div class='col-sm-12 col-md-4 margin-botton'>\\r\\n        <md-input-container class=\\\"full-width\\\">\\r\\n            <input required type=\\\"text\\\" id=\\\"website\\\" name=\\\"website\\\" [(ngModel)]=\\\"_model.stakeholders_info.email\\\" mdInput placeholder=\\\"Correo electrónico\\\">\\r\\n        </md-input-container>\\r\\n    </div>\\r\\n    <!-- ######################################## PROFILE ######################################## -->\\r\\n\\r\\n    <div class=\\\"col-sm-12 mark\\\">\\r\\n        <!--  -->\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h4>Perfiles como tercero</h4>\\r\\n        </div>\\r\\n        <!--  -->\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_customer\\\" name=\\\"is_customer\\\" [(ngModel)]=\\\"_model.profile.is_customer\\\">Cliente</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_supplier\\\" name=\\\"is_supplier\\\" [(ngModel)]=\\\"_model.profile.is_supplier\\\">Proveedor</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_seller\\\" name=\\\"is_seller\\\" [(ngModel)]=\\\"_model.profile.is_seller\\\">Vendedor</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_employee\\\" name=\\\"is_employee\\\" [(ngModel)]=\\\"_model.profile.is_employee\\\">Empleador</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_maker\\\" name=\\\"is_maker\\\" [(ngModel)]=\\\"_model.profile.is_maker\\\">Fabricante</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-3'>\\r\\n            <md-checkbox id=\\\"is_importer\\\" name=\\\"is_importer\\\" [(ngModel)]=\\\"_model.profile.is_importer\\\">Importador</md-checkbox>\\r\\n        </div>\\r\\n        <div class='col-sm-12 col-md-6'>\\r\\n            <md-checkbox id=\\\"is_holder_sanitary\\\" name=\\\"is_holder_sanitary\\\" [(ngModel)]=\\\"_model.profile.is_holder_sanitary\\\">Titular de registro sanitario</md-checkbox>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- ######################################## PROFILE ######################################## -->\\r\\n\\r\\n    <!-- ######################################################################################### -->\\r\\n    <div class=\\\"col-sm-12 mark\\\" *ngIf=\\\"_model.stakeholders_info.person_type_id == 39 && (_model.profile.is_supplier || _model.profile.is_customer)\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h2 class=\\\"article-title text-center margin-10\\\">Información Tributaria</h2>\\r\\n        </div>\\r\\n        <!-- tax_regime_id -->\\r\\n        <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Tipo de regimen\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.tax_regime_id\\\"\\r\\n                name=\\\"tax_regime_id\\\" id=\\\"tax_regime_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of tax_regime\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <span class=\\\"col-sm-12\\\"></span>\\r\\n        <!-- retention_for_rent -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"retention_for_rent\\\" name=\\\"retention_for_rent\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.retention_for_rent\\\">Retención por renta</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- big_contributor -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"big_contributor\\\" name=\\\"big_contributor\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.big_contributor\\\">Gran Contribuyente</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- codes_iva -->\\r\\n        <div class='col-sm-12 margin-bottom' [ngClass]=\\\"{ 'col-md-6' : !_model.comercial_stakeholders_info.codes.iva, 'col-md-3' : _model.comercial_stakeholders_info.codes.iva }\\\">\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"codes_iva\\\" name=\\\"codes_iva\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.iva\\\">Retenedor de IVA</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- code_iva_percent -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom' *ngIf=\\\"_model.comercial_stakeholders_info.codes.iva\\\">\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"code_iva_percent\\\" name=\\\"code_iva_percent\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.iva_percent\\\"\\r\\n                    mdInput>\\r\\n                <span matSuffix>% &nbsp;</span>\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- codes_ica -->\\r\\n        <div class='col-sm-12 margin-bottom' [ngClass]=\\\"{ 'col-md-6' : !_model.comercial_stakeholders_info.codes.ica, 'col-md-3' : _model.comercial_stakeholders_info.codes.ica }\\\">\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"codes_ica\\\" name=\\\"codes_ica\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.ica\\\">Retenedor de ICA</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- code_ica_percent -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom' *ngIf=\\\"_model.comercial_stakeholders_info.codes.ica\\\">\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"code_ica_percent\\\" name=\\\"code_ica_percent\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.ica_percent\\\"\\r\\n                    mdInput>\\r\\n                <span matSuffix>% &nbsp;</span>\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <span class=\\\"col-sm-12\\\"></span>\\r\\n        <!-- codes_ciiu -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"codes_ica\\\" name=\\\"codes_ica\\\" [(ngModel)]=\\\"_model.comercial_stakeholders_info.codes.ciiu\\\" mdInput\\r\\n                    placeholder=\\\"Código CIIU\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- ######################################################################################### -->\\r\\n    <div class=\\\"col-sm-12 mark\\\" *ngIf=\\\"_model.profile.is_customer\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h2 class=\\\"article-title text-center margin-10\\\">Información del Cliente</h2>\\r\\n        </div>\\r\\n        <!-- customer_class_id -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-select class=\\\"full-width\\\" placeholder=\\\"Clases de cliente\\\" [(ngModel)]=\\\"_model.customer.customer_class_id\\\" name=\\\"customer_class_id\\\"\\r\\n                id=\\\"customer_class_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of customers_class\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- debt_type_id -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Tipo de cartera\\\" [(ngModel)]=\\\"_model.customer.debt_type_id\\\" name=\\\"debt_type_id\\\"\\r\\n                id=\\\"city_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of portfolio_type\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- credit_limit -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"credit_limit\\\" name=\\\"credit_limit\\\" [(ngModel)]=\\\"_model.customer.credit_limit\\\" mdInput\\r\\n                    placeholder=\\\"Cupo crédito\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- sales_representative_id -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Vendedor\\\" [(ngModel)]=\\\"_model.customer.sales_representative_id\\\" name=\\\"sales_representative_id\\\"\\r\\n                id=\\\"sales_representative_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of sales_representatives\\\" [value]=\\\"item.id\\\">{{ item.stakeholder_info.fullname }}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- global_discount -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"global_discount\\\" name=\\\"global_discount\\\" [(ngModel)]=\\\"_model.customer.global_discount\\\" mdInput\\r\\n                    placeholder=\\\"Descuento Global\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- payment_condition -->\\r\\n        <div *ngIf=\\\"_model.customer.debt_type_id == 18\\\" class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-select [required]=\\\"_model.customer.debt_type_id == 17\\\" class=\\\"full-width\\\" placeholder=\\\"Condición de pago\\\" [(ngModel)]=\\\"_model.customer.payment_condition_id\\\"\\r\\n                name=\\\"payment_condition\\\" id=\\\"payment_condition\\\">\\r\\n                <md-option *ngFor=\\\"let item of conditions_payment\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- credit_limit_blocking -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"credit_limit_blocking\\\" name=\\\"credit_limit_blocking\\\" [(ngModel)]=\\\"_model.customer.credit_limit_blocking\\\">Bloqueo por cupo</md-slide-toggle>\\r\\n        </div>\\r\\n        <span class=\\\"col-sm-12\\\"></span>\\r\\n        <!-- days_early_payment -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"days_early_payment\\\" name=\\\"days_early_payment\\\" [(ngModel)]=\\\"_model.customer.days_early_payment\\\"\\r\\n                    mdInput placeholder=\\\"Descuento de pronto pago\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- days_grace -->\\r\\n        <div *ngIf=\\\"_model.customer.debt_type_id == 18\\\" class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly [required]=\\\"_model.customer.debt_type_id == 17\\\" required type=\\\"text\\\" id=\\\"days_grace\\\" name=\\\"days_grace\\\"\\r\\n                    [(ngModel)]=\\\"_model.customer.days_grace\\\" mdInput placeholder=\\\"Días de gracia\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- late_payment_blocking -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"late_payment_blocking\\\" name=\\\"late_payment_blocking\\\" [(ngModel)]=\\\"_model.customer.late_payment_blocking\\\">Bloqueo por mora</md-slide-toggle>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"box-header no-padding-h text-center\\\">\\r\\n                <h5 class=\\\"text-left\\\">Contacto de Compras</h5>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- name_purchases_contact -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"name_purchases_contact\\\" name=\\\"name_purchases_contact\\\" [(ngModel)]=\\\"_model.customer.purchases_contact.name\\\"\\r\\n                    mdInput placeholder=\\\"Nombre\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- phone_purchases_contact -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"phone_purchases_contact\\\" name=\\\"phone_purchases_contact\\\" [(ngModel)]=\\\"_model.customer.purchases_contact.phone\\\"\\r\\n                    mdInput placeholder=\\\"Teléfono\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- email_purchases_contact -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"email_purchases_contact\\\" name=\\\"email_purchases_contact\\\" [(ngModel)]=\\\"_model.customer.purchases_contact.email\\\"\\r\\n                    mdInput placeholder=\\\"Correo electrónico\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"box-header no-padding-h text-center\\\">\\r\\n                <h5 class=\\\"text-left\\\">Contacto de Cartera</h5>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- name_debt_contact -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"name_debt_contact\\\" name=\\\"name_debt_contact\\\" [(ngModel)]=\\\"_model.customer.debt_contact.name\\\" mdInput\\r\\n                    placeholder=\\\"Nombre\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- phone_debt_contact -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" NumberOnly id=\\\"phone_debt_contact\\\" name=\\\"phone_debt_contact\\\" [(ngModel)]=\\\"_model.customer.debt_contact.phone\\\"\\r\\n                    mdInput placeholder=\\\"Teléfono\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- email_debt_contact -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"email_debt_contact\\\" name=\\\"email_debt_contact\\\" [(ngModel)]=\\\"_model.customer.debt_contact.email\\\" mdInput\\r\\n                    placeholder=\\\"Correo electrónico \\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"margin-bottom: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Puntos de envío</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddSucursal()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Sucursal</th>\\r\\n                                    <th>Ubicación</th>\\r\\n                                    <th></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.shipping_points\\\">\\r\\n                                    <td>{{ item.name }}</td>\\r\\n                                    <td>{{ item.country.value + ', ' + item.department.value + ', ' + item.city.value }}</td>\\r\\n                                    <td class=\\\"text-center\\\" title=\\\"Remover empresa\\\">\\r\\n                                        <a style=\\\"cursor: pointer;\\\" class=\\\"text-danger\\\" (click)=\\\"removeSucursal(item)\\\">\\r\\n                                            <i class=\\\"fa fa-trash fa-2x\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"margin-bottom: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Contrato institucional</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button  md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddInstitucionalSale()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>No. Contrato</th>\\r\\n                                    <th>Entidad contratante</th>\\r\\n                                    <th></th>\\r\\n                                    <th></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.institutional_sale_contract\\\">\\r\\n                                    <td>{{ item.contract_number }}</td>\\r\\n                                    <td>{{ item.contracting_entity }}</td>\\r\\n                                    <td>\\r\\n                                        <a *ngIf=\\\"item.file !== '' && item.file !== null\\\" href=\\\"{{ item.file }}\\\">\\r\\n                                            <i class=\\\"fa fa-paperclip fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-center\\\" title=\\\"Remover empresa\\\">\\r\\n                                        <a style=\\\"cursor: pointer;\\\" class=\\\"text-danger\\\" (click)=\\\"removeInstitucionalSale(item)\\\">\\r\\n                                            <i class=\\\"fa fa-trash fa-2x\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"margin-bottom: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Resoluciones de controlado</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddControlledResolution()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>No. Resolución</th>\\r\\n                                    <th>Fecha de as</th>\\r\\n                                    <th>Fecha de expiración</th>\\r\\n                                    <th>Estado</th>\\r\\n                                    <th colspan=\\\"2\\\"></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.controlled_resolution\\\">\\r\\n                                    <td>{{ item.resolution_number }}</td>\\r\\n                                    <td>{{ item.issue_date | date: 'dd-MM-yyyy'}}</td>\\r\\n                                    <td>{{ item.expiration_date | date: 'dd-MM-yyyy'}}</td>\\r\\n                                    <td>{{ item.state ? 'Actvo' : 'Inactivo' }}</td>\\r\\n                                    <td class=\\\"text-center\\\" title=\\\"Remover empresa\\\">\\r\\n                                        <a style=\\\"cursor: pointer;\\\" class=\\\"text-danger\\\" (click)=\\\"removeControlledResolution(item)\\\">\\r\\n                                            <i class=\\\"fa fa-trash fa-2x\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex\\\" style=\\\"margin-bottom: 15px;height: 51px;\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Resoluciones de monopolio</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button [disabled]=\\\"_model.customer.shipping_points.length == 0\\\" md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddMonopolyResolution()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>No. Resolución</th>\\r\\n                                    <th>Fecha de as</th>\\r\\n                                    <th>Fecha de expiración</th>\\r\\n                                    <th>Estado</th>\\r\\n                                    <th></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.customer.monopoly_resolution\\\">\\r\\n                                    <td>{{ item.resolution_number }}</td>\\r\\n                                    <td>{{ item.issue_date | date: 'dd-MM-yyyy'}}</td>\\r\\n                                    <td>{{ item.expiration_date | date: 'dd-MM-yyyy'}}</td>\\r\\n                                    <td>{{ item.state ? 'Actvo' : 'Inactivo' }}</td>\\r\\n                                    <td class=\\\"text-center\\\" title=\\\"Remover\\\">\\r\\n                                        <a style=\\\"cursor: pointer;\\\" class=\\\"text-danger\\\" (click)=\\\"removeMonopolyResolution(item)\\\">\\r\\n                                            <i class=\\\"fa fa-trash fa-2x\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- ######################################################################################### -->\\r\\n    <div class=\\\"col-sm-12 mark\\\" *ngIf=\\\"_model.profile.is_supplier\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <h2 class=\\\"article-title text-center margin-10\\\">Información del proveedor</h2>\\r\\n        </div>\\r\\n        <!-- class supplier -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Clase de proveedor\\\" [(ngModel)]=\\\"_model.supplier.supplier_class_id\\\" name=\\\"supplier_class_id\\\"\\r\\n                id=\\\"supplier_class_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of suppliers_class\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- credit_limit -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"supplier_credit_limit\\\" name=\\\"supplier_credit_limit\\\" [(ngModel)]=\\\"_model.supplier.credit_limit\\\"\\r\\n                    mdInput placeholder=\\\"Cupo de crédito\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- supplier_global_discount -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"supplier_global_discount\\\" name=\\\"supplier_global_discount\\\" [(ngModel)]=\\\"_model.supplier.global_discount\\\"\\r\\n                    mdInput placeholder=\\\"Descuento Global\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- supplier_payment_condition -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Condición de pago\\\" [(ngModel)]=\\\"_model.supplier.payment_condition_id\\\"\\r\\n                name=\\\"supplier_payment_condition\\\" id=\\\"supplier_payment_condition\\\">\\r\\n                <md-option *ngFor=\\\"let item of conditions_payment\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- supplier_days_early_payment -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly type=\\\"text\\\" id=\\\"supplier_days_early_payment\\\" name=\\\"supplier_days_early_payment\\\" [(ngModel)]=\\\"_model.supplier.days_early_payment\\\"\\r\\n                    mdInput placeholder=\\\"Días de pronto pago\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- supplier_days_grace -->\\r\\n        <div class='col-sm-12 col-md-3 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"supplier_days_grace\\\" name=\\\"supplier_days_grace\\\" [(ngModel)]=\\\"_model.supplier.days_grace\\\"\\r\\n                    mdInput placeholder=\\\"Días de gracia\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- payment_method_id -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-select required class=\\\"full-width\\\" placeholder=\\\"Método de pago\\\" [(ngModel)]=\\\"_model.supplier.payment_method_id\\\" name=\\\"supplier_payment_method_id\\\"\\r\\n                id=\\\"supplier_class_id\\\">\\r\\n                <md-option *ngFor=\\\"let item of payment_method\\\" [value]=\\\"item.id\\\">{{item.value}}</md-option>\\r\\n            </md-select>\\r\\n        </div>\\r\\n        <!-- purchase_order -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-slide-toggle [labelPosition]=\\\"before\\\" id=\\\"purchase_order\\\" name=\\\"purchase_order\\\" [(ngModel)]=\\\"_model.supplier.purchase_order\\\">Exige orden de compra</md-slide-toggle>\\r\\n        </div>\\r\\n        <!-- TABLE -->\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"flex margin-bottom\\\">\\r\\n                        <div class=\\\"box-header no-padding-h\\\">Ceuntas bancarias</div>\\r\\n                        <span class=\\\"flex-spacer\\\"></span>\\r\\n                        <button md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\" (click)=\\\"openAddBankAccount()\\\">Añadir</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                        <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Nombre</th>\\r\\n                                    <th>Cuenta</th>\\r\\n                                    <th>Tipo de cuenta</th>\\r\\n                                    <th></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of _model.supplier.bank_accounts\\\">\\r\\n                                    <td>{{ item.bank?.value }}</td>\\r\\n                                    <td>{{ item?.account_number }}</td>\\r\\n                                    <td>{{ item.bank_account_type?.value }}</td>\\r\\n                                    <td class=\\\"text-center\\\" title=\\\"Remover\\\">\\r\\n                                        <a style=\\\"cursor: pointer;\\\" class=\\\"text-danger\\\" (click)=\\\"removeBankAccount(item)\\\">\\r\\n                                            <i class=\\\"fa fa-trash fa-2x\\\"></i>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"box-header no-padding-h text-center\\\">Contacto de Venta</div>\\r\\n        </div>\\r\\n        <!-- name_sales_contact -->\\r\\n        <div class='col-sm-12 col-md-12 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"name_sales_contact\\\" name=\\\"name_sales_contact\\\" [(ngModel)]=\\\"_model.supplier.sales_contact.name\\\"\\r\\n                    mdInput placeholder=\\\"Nombre del contacto de compras\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- phone_sales_contact -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input NumberOnly required type=\\\"text\\\" id=\\\"phone_sales_contact\\\" name=\\\"phone_sales_contact\\\" [(ngModel)]=\\\"_model.supplier.sales_contact.phone\\\"\\r\\n                    mdInput placeholder=\\\"Teléfono del contacto de compras\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n        <!-- email_sales_contact -->\\r\\n        <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n            <md-input-container class=\\\"full-width\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"email_sales_contact\\\" name=\\\"email_sales_contact\\\" [(ngModel)]=\\\"_model.supplier.sales_contact.email\\\"\\r\\n                    mdInput placeholder=\\\"Correo electrónico del contacto de compras\\\">\\r\\n            </md-input-container>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-12\\\" [class.btn-action-container]=\\\"booActive\\\">\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"!stakeHolderForm.form.valid\\\" md-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\"\\r\\n            (click)=\\\"save()\\\">{{strAction}}</button>\\r\\n    </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smartity/stakeholders/stakeholders-action/stakeholders-action.component.html\n// module id = 1503\n// module chunks = 3","module.exports = \"<!-- LIST -->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\" (keydown)=\\\"enter($event)\\\">\\r\\n            <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\r\\n                <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\r\\n                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\" *ngIf=\\\"!noaction\\\">\\r\\n        <button *ngIf=\\\"actions[0].status\\\" md-raised-button (click)=\\\"CUD('Guardar')\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">\\r\\n            <md-icon>add_circle_outline</md-icon> Nuevo\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n\\r\\n        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n\\r\\n            <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th class=\\\"noAuto\\\" (click)=\\\"sort('i.id')\\\">ID\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='i.id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('firstname')\\\">Nombre\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='firstname'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('document_number')\\\">Número de documento\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n\\r\\n                        <th (click)=\\\"sort('c.value')\\\">Ubicación\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='c.value'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th (click)=\\\"sort('i.status')\\\">Estado\\r\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='i.status'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\r\\n                        </th>\\r\\n                        <th *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\"></th>\\r\\n                        <th *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\"></th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of list.data\\\">\\r\\n                        <td class=\\\"noAuto\\\">{{ item.id }}</td>\\r\\n                        <td *ngIf=\\\"item.person_type_id === 38\\\">{{ item.name }}</td>\\r\\n                        <td *ngIf=\\\"item.person_type_id === 39\\\">{{ item.businessname }}</td>\\r\\n                        <td>{{ item.document_number }}</td>\\r\\n                        <td>{{ item.geolocation }}</td>\\r\\n                        <td>{{ item.status ? 'Activo' : 'Inactivo' }}</td>\\r\\n                        <td *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\">\\r\\n                            <button type=\\\"button\\\" md-icon-button class=\\\"text-primary\\\" (click)=\\\"CUD('Actualizar',item)\\\">\\r\\n                                <md-icon>mode_edit</md-icon>\\r\\n                            </button>\\r\\n                        </td>\\r\\n                        <td *ngIf=\\\"actions[3].status\\\" class=\\\"w-40\\\">\\r\\n                            <button type=\\\"button\\\" md-icon-button class=\\\"text-danger\\\" (click)=\\\"CUD('Eliminar',item)\\\">\\r\\n                                <md-icon>delete</md-icon>\\r\\n                            </button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n\\r\\n        </div>\\r\\n        <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"6\\\" [rotate]=\\\"true\\\"\\r\\n            [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\r\\n\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smartity/stakeholders/stakeholders-list/stakeholders-list.component.html\n// module id = 1504\n// module chunks = 3","module.exports = \"<section class=\\\"chapter\\\">\\r\\n    <section class=\\\"hero\\\">\\r\\n        <div class=\\\"hero-content\\\">\\r\\n            <h1 class=\\\"hero-title\\\">Terceros</h1>\\r\\n        </div>\\r\\n        <p class=\\\"hero-tagline\\\">A través de esta opción, usted podrá crear los clientes, proveedores, vendedores y empleados</p>\\r\\n    </section>\\r\\n    <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\r\\n        <div class=\\\"container-fluid with-maxwidth\\\">\\r\\n            <div class=\\\"box box-default\\\">\\r\\n                <div class=\\\"box-body\\\">\\r\\n                    <stakeholders-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\" [strAction]=\\\"strAction\\\"></stakeholders-action-cmp>\\r\\n                    <stakeholders-list-cmp *ngIf=\\\"isOpenList\\\"></stakeholders-list-cmp>\\r\\n                </div>               \\r\\n            </div>\\r\\n        </div>\\r\\n    </article>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smartity/stakeholders/stakeholders.component.html\n// module id = 1505\n// module chunks = 3"],"sourceRoot":""}