{"version":3,"sources":["/Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points-action/delivery-points-action.component.html","/Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points-action/delivery-points-action.component.ts","/Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points-list/delivery-points-list.component.html","/Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points-list/delivery-points-list.component.ts","/Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points.component.html","/Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points.component.ts","/Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points.module.ts"],"names":[],"mappings":"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","file":"16.chunk.js","sourcesContent":["module.exports = \"<form #modelForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 margin-bottom\\\" [class.btn-action-container]=\\\"booActive\\\">\\r\\n                <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-md no-margin-left\\\">\\r\\n                    <mat-icon>keyboard_arrow_left</mat-icon> Regresar\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- name -->\\r\\n            <div class='col-sm-12 col-md-6 margin-bottom'>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input required type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"model.name\\\" matInput placeholder=\\\"Nombre\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <!-- token -->\\r\\n            <div *ngIf=\\\"numId != undefined\\\" class='col-sm-12 col-md-2 margin-bottom'>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input required type=\\\"text\\\" id=\\\"token\\\" name=\\\"token\\\" [(ngModel)]=\\\"model.token\\\" matInput placeholder=\\\"Token\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <!-- instalado -->\\r\\n            <div class='col-sm-12 col-md-6 col-lg-2 margin-bottom'>\\r\\n                <div class=\\\"flex\\\">\\r\\n                    <span class=\\\"flex-spacer\\\"></span>\\r\\n                    <mat-slide-toggle [labelPosition]=\\\"'before'\\\" id=\\\"installed\\\" name=\\\"installed\\\" [(ngModel)]=\\\"model.installed\\\">Instalado</mat-slide-toggle>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <!-- estado -->\\r\\n            <div class='col-sm-12 col-md-6 col-lg-2 margin-bottom'>\\r\\n                <div class=\\\"flex\\\">\\r\\n                    <span class=\\\"flex-spacer\\\"></span>\\r\\n                    <mat-slide-toggle [labelPosition]=\\\"'before'\\\" id=\\\"state\\\" name=\\\"state\\\" [(ngModel)]=\\\"model.state\\\">Estado</mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- bodega -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input readonly matInput type=\\\"text\\\" placeholder=\\\"Bodega\\\" [(ngModel)]=\\\"warehouse.name\\\" id=\\\"warehouse\\\" name=\\\"warehouse\\\" />\\r\\n                    <mat-icon matSuffix mdSuffix class=\\\"wh-24 pointer\\\" (click)=\\\"openModalWarehouse()\\\">search</mat-icon>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <!-- grupo de punto de dispensacion -->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                <mat-select class=\\\"full-width\\\" placeholder=\\\"Grupos de puntos de dispensación\\\" [(ngModel)]=\\\"model.delivery_point_group_id\\\"\\r\\n                    name=\\\"delivery_point_group_id\\\" id=\\\"delivery_point_group_id\\\">\\r\\n                    <mat-option *ngFor=\\\"let item of arrDelivery_point_group\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n            </div>\\r\\n            <!--contratos-->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <div class=\\\"flex\\\" style=\\\"height: 51px;\\\">\\r\\n                            <div class=\\\"box-header no-padding-h\\\">Contratos</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                            <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Nombre</th>\\r\\n                                        <th>Evento</th>\\r\\n                                        <th>Cápita</th>\\r\\n                                        <th>PGP</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of arrDelivery_contracts\\\">\\r\\n                                        <td>{{item.name}}</td>\\r\\n                                        <td class=\\\"text-center\\\">\\r\\n                                            <mat-icon>{{item.event ? 'check_circle' : ''}}</mat-icon>\\r\\n                                        </td>\\r\\n                                        <td class=\\\"text-center\\\">\\r\\n                                            <mat-icon>{{item.capita ? 'check_circle' : ''}}</mat-icon>\\r\\n                                        </td>\\r\\n                                        <td class=\\\"text-center\\\">\\r\\n                                            <mat-icon>{{item.pgp ? 'check_circle' : ''}}</mat-icon>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--Usuario de regente-->\\r\\n            <div class=\\\"col-sm-12 col-md-6 margin-bottom\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <div class=\\\"flex\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                            <div class=\\\"box-header no-padding-h\\\">Usuario de regente</div>\\r\\n                            <span class=\\\"flex-spacer\\\"></span>\\r\\n                            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left\\\" (click)=\\\"openModalUsers()\\\">Añadir</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\r\\n                            <table class=\\\"mdl-data-table table-bordered table-striped no-margin\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Nombre</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of model.assigned_users\\\">\\r\\n                                        <td>{{item.firstname}} {{item.lastname}}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--description-->\\r\\n            <div class='col-sm-12 margin-bottom'>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <textarea type=\\\"text\\\" id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"model.description\\\" matInput placeholder=\\\"Descripción\\\"></textarea>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12\\\" [class.btn-action-container]=\\\"booActive\\\">\\r\\n                <button type=\\\"button\\\" [disabled]=\\\"!modelForm.form.valid\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\"\\r\\n                    (click)=\\\"save()\\\">{{strAction}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points-action/delivery-points-action.component.html\n// module id = ../../../../../src/app/smartity/delivery-points/delivery-points-action/delivery-points-action.component.html\n// module chunks = 16","import { Component, OnInit, ViewChild, Output, EventEmitter, Input } from \"@angular/core\";\nimport { DataTableResource } from \"angular-4-data-table\";\nimport { FormControl } from \"@angular/forms\";\nimport \"rxjs/add/operator/startWith\";\nimport { AuthenticationService } from \"../../../auth/authentication.service\";\nimport { MatSnackBar, MatDialogRef, MatDialog } from \"@angular/material\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseModel } from '../../bases/base-model';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { Response } from '@angular/http';\nimport { DeliveryPointsComponent } from '../delivery-points.component';\nimport { ModalWarehouseComponent } from '../../modals/modal-warehouse/modal-warehouse.component';\nimport { filter } from 'rxjs/operators';\nimport { ModalUsersComponent } from '../../modals/modal-users/modal-users.component';\n\n@Component({\n    selector: \"delivery-points-action-cmp\",\n    templateUrl: \"delivery-points-action.component.html\"\n})\n\nexport class DeliveryPointsActionComponent extends BaseModel implements OnInit {\n\n    private arrDelivery_point_group: Array<any> = [];\n    private modalWarehouse: MatDialogRef<ModalWarehouseComponent>;\n    private modalUsers: MatDialogRef<ModalUsersComponent>;\n    private warehouse: any = {};\n    private arrDelivery_contracts = [];    \n\n    @Output() select = new EventEmitter();   \n\n    constructor(\n        public snackBar: MatSnackBar,\n        private route: ActivatedRoute,\n        private router: Router,\n        private loaderService: LoaderService,\n        private helperService: HelperService,\n        private comp: DeliveryPointsComponent,\n        private dialog: MatDialog\n    ) {\n        super();\n\n    }\n\n    ngOnInit() {\n        this.clean();\n        this.getCollection();\n        if (this.numId !== undefined) {\n            this.getDataById();\n        }\n    }\n\n    private getCollection() {\n        this.loaderService.display(true);\n        this.helperService.POST(`/api/collections`, [\"DELIVERY_POINTS_GROUPS\"]).subscribe(rs => {\n            let res = rs.json();\n            this.arrDelivery_point_group = res.DELIVERY_POINTS_GROUPS;\n            this.loaderService.display(false);\n        }, err => { \n            console.log(err); \n            this.loaderService.display(false);\n        });\n    }\n\n\n    \n    private save() {\n        this.loaderService.display(true);\n        switch (this.strAction) {\n            case 'Guardar':\n                this.model.delivery_contracts = '[]';\n                this.helperService.POST(`/api/delivery-points`, this.model).subscribe(rs => {\n                    let res = rs.json();\n                    if (res.store) {\n                        this.snackBar.open(res.message, 'Guardado', { duration: 4000 });\n                        this.comp.openList();\n                        this.loaderService.display(false);\n                    }\n                }, err => {\n                    this.snackBar.open(err.message, 'Guardado', { duration: 4000 });\n                    this.loaderService.display(false);\n                });\n                break;\n            case 'Actualizar':\n                this.helperService.PUT(`/api/delivery-points/${this.numId}`, this.model).subscribe(rs => {\n                    let res = rs.json();\n                    if (res.update) {\n                        this.snackBar.open(res.message, 'Actualización', { duration: 4000 });\n                        this.comp.openList();\n                    }\n                }, err => {\n                    this.snackBar.open(err.message, 'Actualización', { duration: 4000 });\n                    this.loaderService.display(false);\n                });\n                break;\n            case 'Eliminar':\n                this.helperService.DELETE(`/api/delivery-points/${this.numId}`).subscribe(rs => {\n                    let res = rs.json();\n                    if (res.delete) {\n                        this.snackBar.open(res.message, 'Eliminación', { duration: 4000 });\n                        this.comp.openList();\n                    }\n                }, err => {\n                    this.snackBar.open(err.message, 'Eliminación', { duration: 4000 });\n                    this.loaderService.display(false);\n                });\n                break;\n        }\n    }\n\n    private getDataById(): void {\n        this.loaderService.display(true);\n        this.helperService.GET(`/api/delivery-points/${this.numId}`).map((response: Response) => {\n            let res = response.json();\n            this.model = res.data;\n            this.arrDelivery_contracts = [];\n            this.model.contract_point.forEach(element => {\n                element.config = JSON.parse(element.config);\n                this.arrDelivery_contracts.push({\n                    id: element.delivery_contracts.id,\n                    name: element.delivery_contracts.name,\n                    event: element.config.event || false,\n                    capita: element.config.capita || false,\n                    pgp: element.config.pgp || false,\n                });\n            });\n            this.warehouse = this.model.warehouses;\n            this.model.operation_cost_centre_id = this.model.root == true ? 'co-' + this.model.operation_cost_centre_id : 'cc-' + this.model.operation_cost_centre_id;\n        }).subscribe(error => {\n            this.loaderService.display(false);\n        }, done => {\n            this.loaderService.display(false);\n        });\n    }\n\n    private clean() {\n        this.model = {};\n        this.model.state = true;\n    }\n\n    private goList() {\n        this.comp.openList();\n    }\n\n    private openModalWarehouse() {\n        this.modalWarehouse = this.dialog.open(ModalWarehouseComponent, {\n            hasBackdrop: false,\n            data: {\n                title: 'Bodega',\n            }\n        });\n\n        this.modalWarehouse\n            .afterClosed()\n            .pipe(filter((data) => data))\n            .subscribe((data) => {\n                this.model.warehouse_id = data.id;\n                this.warehouse = data;\n            });\n    }\n\n    private openModalUsers() {\n        this.modalUsers = this.dialog.open(ModalUsersComponent, {\n            hasBackdrop: false,\n            data: {\n                title: 'Usuarios',\n                type: 'regente'\n            }\n        });\n\n        this.modalUsers.afterClosed().pipe(filter((data) => data)).subscribe((data) => {\n            if (!this.model.assigned_users) {\n                this.model.assigned_users = [];\n            }\n            this.model.assigned_users.push(data);\n            if (!this.model.users) {\n                this.model.users = [];\n            }\n            this.model.users.push({ \"user_id\": data.id });\n        });\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points-action/delivery-points-action.component.ts","module.exports = \"<!-- LIST -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\" (keydown)=\\\"enter($event)\\\">\\n            <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\n                <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\n                    <i class=\\\"fa fa-search\\\"></i>\\n                </a>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <button type=\\\"button\\\" mat-raised-button (click)=\\\"CUD('Guardar')\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">\\n            <mat-icon>add_circle_outline</mat-icon> Nuevo\\n        </button>\\n    </div>\\n\\n    <div class=\\\"col-sm-12\\\">\\n\\n        <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n\\n            <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\n                <thead>\\n                    <tr>\\n                        <!-- <th class=\\\"noAuto\\\" (click)=\\\"sort('id')\\\">ID\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th> -->\\n                        <th (click)=\\\"sort('name')\\\">Nombre\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <!-- <th (click)=\\\"sort('delivery_contract_id')\\\">Grupo\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='delivery_contract_id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th> -->\\n                        <th (click)=\\\"sort('ct.state')\\\">Estado\\n                            <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='ct.state'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                        </th>\\n                        <th class=\\\"w-40\\\"></th>\\n                        <th class=\\\"w-40\\\"></th>\\n                    </tr>\\n                </thead>\\n                <tbody *ngIf=\\\"list.data\\\">\\n                    <tr *ngFor=\\\"let item of list.data; let index = index\\\" (click)=\\\"view(item); numItemSelected = index\\\" [ngClass]=\\\"{'active': numItemSelected == index }\\\">\\n                        <!-- <td class=\\\"noAuto\\\">{{ item.id }}</td> -->\\n                        <td>{{ item.name }}</td>\\n                        <!-- <td>{{ item.delivery_points_groups.value }}</td> -->\\n                        <td>{{ item.state ? 'Activo' : 'Inactiva' }}</td>\\n                        <td class=\\\"w-40\\\">\\n                            <button type=\\\"button\\\" mat-icon-button class=\\\"text-primary\\\" (click)=\\\"CUD('Actualizar', item)\\\">\\n                                <mat-icon>mode_edit</mat-icon>\\n                            </button>\\n                        </td>\\n                        <td class=\\\"w-40\\\">\\n                            <button type=\\\"button\\\" mat-icon-button class=\\\"text-danger\\\" (click)=\\\"CUD('Eliminar', item)\\\">\\n                                <mat-icon>delete</mat-icon>\\n                            </button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n\\n        </div>\\n\\n        <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"maxSize\\\"\\n            [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points-list/delivery-points-list.component.html\n// module id = ../../../../../src/app/smartity/delivery-points/delivery-points-list/delivery-points-list.component.html\n// module chunks = 16","import { Component, OnInit, ViewChild, Output, Input, EventEmitter } from \"@angular/core\";\nimport { DataTableResource } from \"angular-4-data-table\";\nimport { FormControl } from \"@angular/forms\";\nimport \"rxjs/add/operator/startWith\";\nimport { MatSnackBar } from \"@angular/material\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseList } from '../../bases/base-list';\nimport { LoaderService, HelperService } from '../../../shared';\nimport { Response } from '@angular/http';\nimport { DeliveryPointsComponent } from '../delivery-points.component';\n\n@Component({\n    selector: \"delivery-points-list-cmp\",\n    templateUrl: \"delivery-points-list.component.html\",\n})\n\nexport class DeliveryPointsListComponent extends BaseList implements OnInit {\n\n    @Output() select = new EventEmitter();\n\n    constructor(\n        public router: Router, \n        public loaderService: LoaderService, \n        public helperService: HelperService, \n        private comp: DeliveryPointsComponent\n    ) {\n        \n        super(loaderService, helperService);\n        \n        this.urlApi = '/api/delivery-points';\n    }\n\n    ngOnInit() {\n        this.getAll();\n    }\n\n    private CUD(action:string, row?:any){\n        this.comp.strAction = action;\n        switch (action) {\n            case 'Guardar':\n                this.comp.id = undefined;\n                break;\n            default:\n                this.comp.id = row.id;\n                break;\n        }\n        this.comp.openActions();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points-list/delivery-points-list.component.ts","module.exports = \"<section class=\\\"chapter\\\">\\n    <section class=\\\"hero\\\">\\n        <div class=\\\"hero-content\\\">\\n            <h1 class=\\\"hero-title\\\">Puntos de dispensación</h1>\\n        </div>\\n        <p class=\\\"hero-tagline\\\"></p>\\n    </section>\\n    <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\n        <div class=\\\"container-fluid with-maxwidth\\\">\\n            <div class=\\\"box box-default\\\">\\n                <div class=\\\"box-body\\\">\\n                    <delivery-points-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\" [strAction]=\\\"strAction\\\"></delivery-points-action-cmp>\\n                    <delivery-points-list-cmp *ngIf=\\\"isOpenList\\\"></delivery-points-list-cmp>\\n                </div>\\n            </div>\\n        </div>\\n    </article>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points.component.html\n// module id = ../../../../../src/app/smartity/delivery-points/delivery-points.component.html\n// module chunks = 16","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { DataTableResource } from \"angular-4-data-table\";\nimport { FormControl } from \"@angular/forms\";\nimport { Base } from '../bases/base';\n\n@Component({\n    selector: \"delivery-points-cmp\",\n    templateUrl: \"delivery-points.component.html\",\n    styles: []\n})\n\nexport class DeliveryPointsComponent extends Base implements OnInit {\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DeliveryPointsComponent } from './delivery-points.component';\nimport { DeliveryPointsListComponent } from './delivery-points-list/delivery-points-list.component';\nimport { DeliveryPointsActionComponent } from './delivery-points-action/delivery-points-action.component';\n\nconst routes: Routes = [{ path: '', component: DeliveryPointsComponent }];\n\n@NgModule({\n    imports: [\n        CommonModule,        \n        RouterModule.forChild(routes),\n        SharedModule,\n        NgbModule.forRoot()\n    ],\n    declarations: [\n        DeliveryPointsComponent,\n        DeliveryPointsListComponent,\n        DeliveryPointsActionComponent\n    ]\n})\nexport class DeliveryPointsModule {\n}\n\n\n// WEBPACK FOOTER //\n// /Users/pedrocamargo/projects/javelinservice/javelin/src/app/smartity/delivery-points/delivery-points.module.ts"],"sourceRoot":"webpack:///"}