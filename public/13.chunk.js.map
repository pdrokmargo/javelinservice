{"version":3,"sources":["D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments-action/inventory-adjustments-action.component.html","D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments-action/inventory-adjustments-action.component.ts","D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments-list/inventory-adjustments-list.component.html","D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments-list/inventory-adjustments-list.component.ts","D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments.component.html","D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments.component.ts","D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments.module.ts"],"names":[],"mappings":"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","file":"13.chunk.js","sourcesContent":["module.exports = \"<!-- FORM -->\\r\\n<form class=\\\"col-sm-12\\\" #modelForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 margin-bottom\\\" [class.btn-action-container]=\\\"booActive\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"goList()\\\" class=\\\"btn-w-md no-margin-left\\\">\\r\\n                <mat-icon>keyboard_arrow_left</mat-icon> Regresar\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- inventory_adjustment_type_id -->\\r\\n        <div class='col-sm-12 col-md-4 margin-bottom'>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <mat-select (change)=\\\"setCurrentValue()\\\" class=\\\"full-width\\\" placeholder=\\\"Tipo de ajuste\\\" [(ngModel)]=\\\"model.inventory_adjustment_type_id\\\"\\r\\n                    name=\\\"inventory_adjustment_type_id\\\">\\r\\n                    <mat-option *ngFor=\\\"let item of inventory_adjustments_type\\\" [value]=\\\"item.id\\\">{{item.value}}</mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <!-- warehouse -->\\r\\n        <div *ngIf=\\\"model.stock.warehouse\\\" class=\\\"col-sm-12 col-md-4 margin-bottom\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input readonly matInput type=\\\"text\\\" placeholder=\\\"Bodega de entrada\\\" [(ngModel)]=\\\"model.warehouse.name\\\"\\r\\n                    id=\\\"warehouse_name\\\" name=\\\"warehouse_name\\\" />\\r\\n                <mat-icon matSuffix mdSuffix class=\\\"wh-24 pointer\\\" (click)=\\\"openModalWarehouse()\\\">search</mat-icon>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <!-- date -->\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput [matDatepicker]=\\\"pickerAdjustmentDate\\\" placeholder=\\\"Fecha de ajuste\\\" [(ngModel)]=\\\"model.adjustment_date\\\"\\r\\n                    name=\\\"adjustment_date\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"pickerAdjustmentDate\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #pickerAdjustmentDate></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-12\\\" *ngIf=\\\"numId == undefined\\\">\\r\\n            <button [disabled]=\\\"model.warehouse_id == -1\\\" mat-raised-button (click)=\\\"openModalStocks()\\\" color=\\\"primary\\\"\\r\\n                class=\\\"btn-w-md no-margin-left btn-right\\\">\\r\\n                Seleccionar Producto\\r\\n            </button>\\r\\n        </div>\\r\\n        <br>\\r\\n        <br>\\r\\n        <br>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input readonly matInput type=\\\"text\\\" placeholder=\\\"PLU\\\" [(ngModel)]=\\\"model.stock.product.sku\\\" id=\\\"product_sku\\\"\\r\\n                    name=\\\"product_sku\\\" />\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input readonly matInput type=\\\"text\\\" placeholder=\\\"Nombre de Producto\\\" [(ngModel)]=\\\"model.stock.product.display_name\\\"\\r\\n                    id=\\\"display_name\\\" name=\\\"display_name\\\" />\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input readonly matInput type=\\\"text\\\" placeholder=\\\"Stock\\\" [(ngModel)]=\\\"model.stock.set_stock\\\" id=\\\"set_stock\\\"\\r\\n                    name=\\\"set_stock\\\" />\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input readonly matInput type=\\\"text\\\" placeholder=\\\"Stock Fracciones\\\" [(ngModel)]=\\\"model.stock.fraction_stock\\\"\\r\\n                    id=\\\"fraction_stock\\\" name=\\\"fraction_stock\\\" />\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input readonly matInput type=\\\"text\\\" placeholder=\\\"Costo (promedio)\\\" [(ngModel)]=\\\"model.stock.product.averageunitcost\\\"\\r\\n                    id=\\\"averageunitcost\\\" name=\\\"averageunitcost\\\" />\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-2\\\" *ngIf=\\\"model.inventory_adjustment_type_id == 187\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input readonly matInput type=\\\"text\\\" placeholder=\\\"Lote anterior\\\" [(ngModel)]=\\\"model.current_adjustment_value\\\"\\r\\n                    id=\\\"current_adjustment_value\\\" name=\\\"current_adjustment_value\\\" />\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\" *ngIf=\\\"model.inventory_adjustment_type_id == 187\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input readonly=\\\"numId != undefined\\\" matInput type=\\\"text\\\" placeholder=\\\"Lote nuevo\\\" [(ngModel)]=\\\"model.new_adjustment_value\\\"\\r\\n                    id=\\\"new_adjustment_value\\\" name=\\\"new_adjustment_value\\\" />\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-2\\\" *ngIf=\\\"model.inventory_adjustment_type_id == 188\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input readonly matInput type=\\\"text\\\" placeholder=\\\"Ubicación anterior\\\" [(ngModel)]=\\\"model.current_adjustment_value\\\"\\r\\n                    id=\\\"current_adjustment_value2\\\" name=\\\"current_adjustment_value2\\\" />\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\" *ngIf=\\\"model.inventory_adjustment_type_id == 188\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input readonly=\\\"numId != undefined\\\" matInput type=\\\"text\\\" placeholder=\\\"Ubicación nueva\\\" [(ngModel)]=\\\"model.new_adjustment_value\\\"\\r\\n                    id=\\\"new_adjustment_value2\\\" name=\\\"new_adjustment_value2\\\" />\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-12\\\" *ngIf=\\\"numId == undefined\\\">\\r\\n            <button mat-raised-button (click)=\\\"guardar()\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">\\r\\n                {{strAction}}\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments-action/inventory-adjustments-action.component.html\n// module id = ../../../../../src/app/smartity/inventory-adjustments/inventory-adjustments-action/inventory-adjustments-action.component.html\n// module chunks = 13","import { Component, OnInit } from '@angular/core';\r\nimport { BaseModel } from '../../bases/base-model';\r\nimport { MatSnackBar, MatDialogRef, MatDialog } from \"@angular/material\";\r\nimport { ModalStocksComponent } from '../../modals/modal-stocks/modal-stocks.component';\r\nimport { ModalWarehouseComponent } from '../../modals/modal-warehouse/modal-warehouse.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoaderService, HelperService } from '../../../shared';\r\nimport { Response } from '@angular/http';\r\nimport { InventoryAdjustmentsComponent } from '../inventory-adjustments.component';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n    selector: 'inventory-adjustments-action-cmp',\r\n    templateUrl: './inventory-adjustments-action.component.html'\r\n})\r\nexport class InventoryAdjustmentsActionComponent extends BaseModel implements OnInit {\r\n\r\n    private modalStocks: MatDialogRef<ModalStocksComponent>;\r\n    private modalWarehouse: MatDialogRef<ModalWarehouseComponent>;\r\n    private inventory_adjustments: any[] = [];\r\n    private inventory_adjustments_type: any[] = [];\r\n\r\n\r\n    constructor(public snackBar: MatSnackBar,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private loaderService: LoaderService,\r\n        private helperService: HelperService,\r\n        private comp: InventoryAdjustmentsComponent,\r\n        private dialog: MatDialog) {\r\n            super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getCollection();\r\n        if (this.numId != undefined) {\r\n            this.getDataById();\r\n            this.strAction = 'Actualiza';\r\n        } else {\r\n            this.model.adjustment_date = new Date();\r\n            this.strAction = 'Guardar';\r\n        }\r\n        this.clean();\r\n        console.log(this.model.warehouse.name);\r\n    }\r\n    private getCollection() {\r\n        this.loaderService.display(true);\r\n        this.helperService.POST(`/api/collections`, ['INVENTORY_ADJUSTMENT_TYPE']).subscribe(rs => {\r\n            const res = rs.json();\r\n            this.inventory_adjustments_type = res.INVENTORY_ADJUSTMENT_TYPE;\r\n            this.loaderService.display(false);\r\n        }, err => {\r\n            console.log(err);\r\n            this.loaderService.display(false);\r\n        });\r\n    }\r\n    private clean() {\r\n        this.inventory_adjustments = [];\r\n        this.inventory_adjustments_type = [];\r\n        this.model = { \"warehouse_id\": -1, \"stock\": { \"product\": { \"sku\": \"\", \"display_name\": \"\", \"averageunitcost\": \"\" }, \"warehouse\": {\"name\":\"\"} } };\r\n    }\r\n    private getDataById(): void {\r\n        this.loaderService.display(true);\r\n        this.helperService.GET(`/api/inventory-adjustments/${this.numId}`).subscribe(rs => {\r\n            const res = rs.json();\r\n            this.model = res.data;\r\n            this.loaderService.display(false);\r\n        }, err => {\r\n            console.log(err);\r\n            this.loaderService.display(false);\r\n        });\r\n    }\r\n    private goList() {\r\n        this.comp.openList();\r\n    }\r\n\r\n    private openModalStocks() {\r\n        this.modalStocks = this.dialog.open(ModalStocksComponent, {\r\n            hasBackdrop: false,\r\n            data: {\r\n                title: 'Existencias',\r\n                warehouse: this.model.warehouse_id\r\n            }\r\n        });\r\n        this.modalStocks.afterClosed().pipe(filter((data) => data)).subscribe((data) => {\r\n            this.model.stock_product_id = data.id;\r\n            this.model.new_adjustment_value = \"\";\r\n            this.model.stock.product.sku = data.product.sku;\r\n            this.model.stock.product.averageunitcost = data.product.averageunitcost;\r\n            this.model.stock.product.display_name = data.product.display_name;\r\n            this.model.stock.set_stock = data.set_stock;\r\n            this.model.stock.fraction_stock = data.fraction_stock;\r\n            this.model.batch = data.batch;\r\n            this.model.location = data.location;\r\n            if (this.model.inventory_adjustment_type_id == 187) {\r\n                this.model.current_adjustment_value = data.batch;\r\n            } else if (this.model.inventory_adjustment_type_id == 188) {\r\n                this.model.current_adjustment_value = data.location;\r\n            }\r\n        });\r\n    }\r\n\r\n    private openModalWarehouse() {\r\n        this.modalWarehouse = this.dialog.open(ModalWarehouseComponent, {\r\n            hasBackdrop: false,\r\n            data: {\r\n                title: 'Bodega',\r\n            }\r\n        });\r\n\r\n        this.modalWarehouse\r\n            .afterClosed()\r\n            .pipe(filter((data) => data))\r\n            .subscribe((data) => {\r\n                this.model.warehouse_id = data.id;\r\n                this.model.warehouse = data;\r\n\r\n                this.model.new_adjustment_value = \"\";\r\n                this.model.current_adjustment_value = \"\";\r\n                this.model.stock.product.sku = \"\";\r\n                this.model.stock.product.averageunitcost = \"\";\r\n                this.model.stock.product.display_name = \"\";\r\n                this.model.set_stock = \"\";\r\n                this.model.fraction_stock = \"\";\r\n                this.model.batch = \"\";\r\n                this.model.location = \"\";\r\n\r\n            });\r\n    }\r\n\r\n    setCurrentValue() {\r\n        if (this.model.inventory_adjustment_type_id == 187) {\r\n            this.model.current_adjustment_value = this.model.batch;\r\n        } else if (this.model.inventory_adjustment_type_id == 188) {\r\n            this.model.current_adjustment_value = this.model.location;\r\n        }\r\n    }\r\n\r\n    guardar() {\r\n        this.loaderService.display(true);\r\n        this.helperService.POST(`/api/inventory-adjustments`, this.model).subscribe(rs => {\r\n            const res = rs.json();\r\n            if (res.store) {\r\n                this.snackBar.open(res.message, 'Guardado', { duration: 4000 });\r\n                this.comp.openList();\r\n            }\r\n            this.loaderService.display(false);\r\n        }, err => {\r\n            this.snackBar.open('Error', err.message, { duration: 4000 });\r\n            console.log(err.message);\r\n            this.loaderService.display(false);\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments-action/inventory-adjustments-action.component.ts","module.exports = \"<!-- LIST -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n      <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"search\\\" (keydown)=\\\"enter($event)\\\">\\n          <div style=\\\"width: 34px\\\" class=\\\"input-group-addon\\\">\\n              <a style=\\\"cursor:pointer\\\" (click)=\\\"getAll()\\\">\\n                  <i class=\\\"fa fa-search\\\"></i>\\n              </a>\\n          </div>\\n      </div>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n      <button mat-raised-button  (click)=\\\"CUD('Guardar')\\\" color=\\\"primary\\\" class=\\\"btn-w-md no-margin-left btn-right\\\">\\n        <mat-icon>add_circle_outline</mat-icon> Nuevo\\n      </button>\\n  </div>\\n  <div class=\\\"col-sm-12\\\">\\n\\n      <div class=\\\"box box-default table-box table-responsive mdl-shadow--2dp\\\">\\n\\n          <table class=\\\"mdl-data-table table-bordered table-striped cf no-margin\\\">\\n              <thead>\\n                  <tr>\\n                      <!-- <th class=\\\"noAuto\\\" (click)=\\\"sort('w.id')\\\">ID\\n                          <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='w.id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                      </th> -->\\n                      <!-- <th># ID\\n                          <span class=\\\"glyphicon sort-icon\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                      </th> -->\\n                      <th>Bodega\\n                          <span class=\\\"glyphicon sort-icon\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                      </th>\\n                      <th>Tipo de ajuste\\n                          <span class=\\\"glyphicon sort-icon\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                      </th>\\n                      <!-- <th>Realizado por\\n                          <span class=\\\"glyphicon sort-icon\\\"  [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                      </th> -->\\n                      <th>Fecha\\n                          <span class=\\\"glyphicon sort-icon\\\"  [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                      </th>\\n                      <th class=\\\"w-200\\\">Producto \\n                        <span class=\\\"glyphicon sort-icon\\\"  [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                    </th>\\n                    <th>Ajuste\\n                      <span class=\\\"glyphicon sort-icon\\\"  [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                  </th>\\n                      <th *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\"></th>\\n                  </tr>\\n              </thead>\\n              <tbody>\\n                  <tr *ngFor=\\\"let item of list.data\\\">\\n                      <!-- <td class=\\\"noAuto\\\">{{ item.id }}</td> -->\\n                      <td>{{ item.stock.warehouse.name }}</td>\\n                      <td>{{ item.inventory_adjustment_type.value }}</td>\\n                      <td>{{ item.adjustment_date }}</td>\\n                      <td>{{ item.stock.product.display_name}}</td>\\n                      <td>{{ item.current_adjustment_value }} -> {{ item.new_adjustment_value }}</td>\\n                      <td *ngIf=\\\"actions[2].status\\\" class=\\\"w-40\\\">\\n                          <button type=\\\"button\\\" mat-icon-button class=\\\"text-primary\\\" (click)=\\\"CUD('Actualizar',item)\\\">\\n                              <mat-icon>mode_edit</mat-icon>\\n                          </button>\\n                      </td>\\n                  </tr>\\n              </tbody>\\n          </table>\\n\\n      </div>\\n\\n      <ngb-pagination [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"paginationSize\\\" [(page)]=\\\"advancedPagination\\\" [maxSize]=\\\"maxSize\\\"\\n          [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\" (pageChange)=\\\"getAll()\\\"></ngb-pagination>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments-list/inventory-adjustments-list.component.html\n// module id = ../../../../../src/app/smartity/inventory-adjustments/inventory-adjustments-list/inventory-adjustments-list.component.html\n// module chunks = 13","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseList } from '../../bases/base-list';\r\nimport { LoaderService, HelperService } from '../../../shared';\r\nimport { InventoryAdjustmentsComponent } from '../inventory-adjustments.component';\r\n\r\n@Component({\r\n  selector: 'inventory-adjustments-list-cmp',\r\n  templateUrl: './inventory-adjustments-list.component.html'\r\n})\r\nexport class InventoryAdjustmentsListComponent extends BaseList implements OnInit {\r\n\r\n  constructor(public loaderService: LoaderService,\r\n    public helperService: HelperService,\r\n    public router: Router,\r\n    private comp: InventoryAdjustmentsComponent\r\n  ) {\r\n\r\n    super(loaderService, helperService);\r\n    this.urlApi = '/api/inventory-adjustments';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n  }\r\n\r\n  private CUD(action: string, row?: any) {\r\n    this.comp.strAction = action;\r\n    switch (action) {\r\n      case 'Guardar':\r\n        this.comp.id = undefined;\r\n        break;\r\n      default:\r\n        this.comp.id = row.id;\r\n        break;\r\n    }\r\n    this.comp.openActions();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments-list/inventory-adjustments-list.component.ts","module.exports = \"<section class=\\\"chapter\\\">\\n  <section class=\\\"hero\\\">\\n      <div class=\\\"hero-content\\\">\\n          <h1 class=\\\"hero-title\\\">Ajustes de Inventario</h1>\\n      </div>\\n      <p class=\\\"hero-tagline\\\">We provide amazing solutions that you can't miss</p>\\n  </section>\\n  <article class=\\\"article padding-lg-v article-dark article-bordered\\\">\\n      <div class=\\\"container-fluid with-maxwidth\\\">\\n          <div class=\\\"box box-default\\\">\\n              <div class=\\\"box-body\\\">\\n                  <inventory-adjustments-action-cmp *ngIf=\\\"isOpenActions\\\" [numId]=\\\"id\\\" [strAction]=\\\"strAction\\\"></inventory-adjustments-action-cmp>\\n                  <inventory-adjustments-list-cmp *ngIf=\\\"isOpenList\\\"></inventory-adjustments-list-cmp>\\n              </div>                 \\n          </div>\\n      </div>\\n  </article>\\n</section>            \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments.component.html\n// module id = ../../../../../src/app/smartity/inventory-adjustments/inventory-adjustments.component.html\n// module chunks = 13","import { Component, OnInit } from '@angular/core';\nimport { Base } from '../bases/base';\n\n@Component({\n  selector: 'app-inventory-adjustments',\n  templateUrl: './inventory-adjustments.component.html'\n})\nexport class InventoryAdjustmentsComponent extends Base implements OnInit {\n\n  constructor() { \n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { InventoryAdjustmentsComponent } from './inventory-adjustments.component';\nimport { InventoryAdjustmentsActionComponent } from './inventory-adjustments-action/inventory-adjustments-action.component';\nimport { InventoryAdjustmentsListComponent } from './inventory-adjustments-list/inventory-adjustments-list.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nconst routes: Routes = [{ path: '', component: InventoryAdjustmentsComponent }];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        SharedModule,\n        NgbModule.forRoot()\n    ],\n    declarations: [\n        InventoryAdjustmentsComponent,\n        InventoryAdjustmentsActionComponent,\n        InventoryAdjustmentsListComponent\n    ]\n})\n\nexport class InventoryAdjustmentsModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/PedroCamargoBK/C/angularprojects/javelin/src/app/smartity/inventory-adjustments/inventory-adjustments.module.ts"],"sourceRoot":"webpack:///"}