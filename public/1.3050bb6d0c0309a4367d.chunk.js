webpackJsonp([1],{1444:function(n,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),r.d(e,"UsersModule",function(){return u});var t=r(5),o=r(2),s=r(31),i=r(37),a=r(282),c=r(1459),l=r(596),d=r(1486),p=r(1487),m=[{path:"",component:c.a}],u=function(){function UsersModule(){}return UsersModule=t.a([r.i(o.NgModule)({imports:[s.CommonModule,i.g.forChild(m),a.a,l.a.forRoot()],declarations:[c.a,d.a,p.a]})],UsersModule)}()},1459:function(n,e,r){"use strict";r.d(e,"a",function(){return i});var t=r(5),o=r(2),s=r(597),i=function(n){function UsersComponent(){return n.call(this)||this}return t.c(UsersComponent,n),UsersComponent.prototype.ngOnInit=function(){},UsersComponent=t.a([r.i(o.Component)({selector:"users-cmp",template:r(1526),styles:[]}),t.b("design:paramtypes",[])],UsersComponent)}(s.a)},1486:function(n,e,r){"use strict";r.d(e,"a",function(){return p});var t=r(5),o=r(2),s=r(41),i=(r.n(s),r(21)),a=r(37),c=r(86),l=r(1459),d=r(26),p=function(n){function UserActionComponent(e,r,t,s,i,a){var c=n.call(this)||this;return c.loaderService=e,c.helperService=r,c.snackBar=t,c.route=s,c.router=i,c.comp=a,c.select=new o.EventEmitter,c.companies=[],c.user_profiles=[],c.str_action="Guardar",c.model_user_company={},c}return t.c(UserActionComponent,n),UserActionComponent.prototype.ngOnInit=function(){this.clean(),this.getUserProfiles(),this.getCompanies(),this.numId>0?(this.str_action="Actualizar",this.getDataById()):this.str_action="Guardar"},UserActionComponent.prototype.getUserProfiles=function(){var n=this;this.helperService.GET("/api/userprofile?all=1").map(function(e){var r=e.json();n.user_profiles=r.data}).subscribe(function(n){},function(n){})},UserActionComponent.prototype.getCompanies=function(){var n=this;this.helperService.GET("/api/company").map(function(e){var r=e.json();n.companies=r.data}).subscribe(function(n){},function(n){})},UserActionComponent.prototype.save=function(){var n=this;if(0===this.model.usersprivileges.length)return this.snackBar.open("Agregue una empresa para continuar.","Error",{duration:3500}),!1;if(this.model.id>0)this.loaderService.display(!0),this.helperService.PUT("/api/users/"+this.numId,this.model).map(function(e){var r=e.json();"success"===r.status&&(n.snackBar.open(r.message,"Actualización",{duration:3500}),n.comp.openList())}).subscribe(function(e){n.loaderService.display(!1)},function(e){n.loaderService.display(!1)});else{if(0===this.model.usersprivileges.length)return this.snackBar.open("Agregue una empresa para continuar.","Error",{duration:3500}),!1;this.loaderService.display(!0),this.helperService.POST("/api/users",this.model).map(function(e){var r=e.json();"success"===r.status&&(n.snackBar.open(r.message,"Guardado",{duration:3500}),n.clean(),n.noaction&&n.select.emit(r.data))}).subscribe(function(e){n.loaderService.display(!1)},function(e){n.loaderService.display(!1)})}},UserActionComponent.prototype.getDataById=function(){var n=this;this.loaderService.display(!0),this.helperService.GET("/api/users/"+this.numId).map(function(e){var r=e.json();n.model=r.data,n.refreshCompany()}).subscribe(function(e){n.loaderService.display(!1)},function(e){n.loaderService.display(!1)})},UserActionComponent.prototype.clean=function(){this.model={},this.model.usersprivileges=[],this.model.status=!0},UserActionComponent.prototype.refreshCompany=function(){var n=0;for(n=0;n<this.companies.length;n++){var e=0;for(e=0;e<this.model.usersprivileges.length;e++)this.model.usersprivileges[e].company_id===this.companies[n].id?this.companies[n].hide=!0:this.companies[n].hide=!1}},UserActionComponent.prototype.addCompany=function(){this.model_user_company.company_id=this.model_user_company.company.id,this.model_user_company.user_profile_id=this.model_user_company.userprofile.id,this.model.usersprivileges.push(this.model_user_company),this.model_user_company={},this.model_user_company.id=0,this.refreshCompany()},UserActionComponent.prototype.removeCompany=function(n){if(n.id>0&&n.company_id===this.model.company_default_id)return this.snackBar.open("Usted no puede remover una empresa activa!","Error",{duration:3500}),!1;var e=this.model.usersprivileges.indexOf(n);this.model.usersprivileges.splice(e,1),this.refreshCompany()},UserActionComponent.prototype.goList=function(){this.comp.openList()},t.a([r.i(o.Output)(),t.b("design:type",Object)],UserActionComponent.prototype,"select",void 0),t.a([r.i(o.Input)(),t.b("design:type",Boolean)],UserActionComponent.prototype,"noaction",void 0),UserActionComponent=t.a([r.i(o.Component)({selector:"user-action-cmp",template:r(1524),styles:[]}),t.b("design:paramtypes",[d.a,d.b,i.c,a.b,a.a,l.a])],UserActionComponent)}(c.a)},1487:function(n,e,r){"use strict";r.d(e,"a",function(){return d});var t=r(5),o=r(2),s=r(41),i=(r.n(s),r(37)),a=r(85),c=r(26),l=r(1459),d=function(n){function UserListComponent(e,r,t,s){var i=n.call(this,e,r)||this;return i.loaderService=e,i.helperService=r,i.router=t,i.comp=s,i.select=new o.EventEmitter,i.urlApi="/api/users",i}return t.c(UserListComponent,n),UserListComponent.prototype.ngOnInit=function(){this.getAll()},UserListComponent.prototype.NEW=function(n){this.comp.openActions(),this.comp.id=0},UserListComponent.prototype.view=function(n){this.noaction&&this.select.emit(n),this.comp.openActions(),this.comp.id=n.id},t.a([r.i(o.Output)(),t.b("design:type",Object)],UserListComponent.prototype,"select",void 0),t.a([r.i(o.Input)(),t.b("design:type",Boolean)],UserListComponent.prototype,"noaction",void 0),UserListComponent=t.a([r.i(o.Component)({selector:"user-list-cmp",template:r(1525),styles:[]}),t.b("design:paramtypes",[c.a,c.b,i.a,l.a])],UserListComponent)}(a.a)},1524:function(n,e){n.exports='<div class="box-body">\r\n\r\n\x3c!--FORM--\x3e\r\n\r\n    <form #modelForm="ngForm" autocomplete="off">\r\n\r\n        <div class="col-sm-12 margin-bottom" [class.btn-action-container]="booActive" *ngIf="!noaction">\r\n            <button md-raised-button color="secundary" (click)="goList()" class="btn-w-md no-margin-left">Regresar</button>\r\n        </div> \r\n\r\n        <div class="col-sm-12 col-md-6">\r\n            <div class="box-body">\r\n                <md-input-container class="full-width">\r\n                    <input required type="text" id="firstname" name="firstname" [(ngModel)]="model.firstname" mdInput placeholder="Nombres">\r\n                </md-input-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="col-sm-12 col-md-6">\r\n            <div class="box-body">\r\n                <md-input-container class="full-width">\r\n                    <input required type="text" id="lastname" name="lastname" [(ngModel)]="model.lastname" mdInput placeholder="Apellidos">\r\n                </md-input-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="col-sm-12 col-md-6">\r\n            <div class="box-body">\r\n                <md-input-container class="full-width">\r\n                    <input autocomplete="nope" autocorrect="off" autocapitalize="off" spellcheck="false" required type="text" id="username" name="username" [(ngModel)]="model.username" mdInput placeholder="Nombre de Usuario">\r\n                </md-input-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="col-sm-12 col-md-6">\r\n            <div class="box-body">\r\n                <md-input-container class="full-width">\r\n                    <input autocomplete="new-password" autocorrect="off" autocapitalize="off" spellcheck="false" [required]="!model.id" [disabled]="model.id" type="password" id="password" name="password" [(ngModel)]="model.password"\r\n                        mdInput placeholder="Contraseña" reverse="true">\r\n                </md-input-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="col-sm-12 col-md-6">\r\n            <div class="box-body">\r\n                <md-input-container class="full-width">\r\n                    <input required type="email" id="email" name="email" [(ngModel)]="model.email" mdInput placeholder="Correo electrónico">\r\n                </md-input-container>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class="col-sm-12 col-md-6">\r\n            <div class="box-body">\r\n                <md-slide-toggle checked="true" id="status" name="status" [(ngModel)]="model.status"> Estado </md-slide-toggle>\r\n            </div>\r\n        </div>\r\n        \r\n    </form>\r\n                                        \r\n\r\n</div>\r\n\r\n<div class="box-body">\r\n    \r\n    <div class="row">\r\n                        \r\n        <div class="col-sm-12">\r\n                <form #companyForm="ngForm" autocomplete="off">  \r\n                    \r\n                    \x3c!-- company --\x3e\r\n                    <div class=\'col-sm-12 col-md-4\'>\r\n                        <div class="box-body">\r\n                            <md-select required class="full-width" placeholder="Empresa" [(ngModel)]="model_user_company.company" name="company_id"\r\n                                id="company_id">\r\n                                <md-option *ngFor="let item of companies" [value]="item" [hidden]="item.hide">{{item.name}}</md-option>\r\n                            </md-select>    \r\n                        </div>\r\n                    </div>\r\n\r\n                    \x3c!-- user profile --\x3e\r\n                    <div class=\'col-sm-12 col-md-4\'>\r\n                        <div class="box-body">\r\n                            <md-select required class="full-width" placeholder="Perfil de usuario" [(ngModel)]="model_user_company.userprofile" name="user_profile_id"\r\n                                id="user_profile_id">\r\n                                <md-option *ngFor="let item of user_profiles" [value]="item">{{item.up_description}}</md-option>\r\n                            </md-select>    \r\n                        </div>                            \r\n                    </div> \r\n\r\n                    <div class="col-md-4">\r\n                        <button md-raised-button color="primary" class="btn-w-md no-margin-left" \r\n                        [disabled]="!companyForm.form.valid"\r\n                        (click)="addCompany()">Añadir Empresa</button>                                                        \r\n                    </div>  \r\n                </form>   \r\n            <div class="box box-default table-box table-responsive mdl-shadow--2dp">                                   \r\n                                                    \r\n                <table class="mdl-data-table table-bordered table-striped cf no-margin">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Empresa</th>\r\n                            <th>Perfil de Usuario</th>                                                \r\n                            <th colspan="2"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor="let item of model.usersprivileges">\r\n                            <td>{{ item.company?.name }}</td>\r\n                            <td>{{ item.userprofile?.up_description }}</td>\r\n                            <td class="text-center">\r\n                                <i class="fa fa-check fa-2x text-success" aria-hidden="true" *ngIf="item.company_id == model.company_default_id"></i>                                                    \r\n                            </td>\r\n                            <td class="text-center" title="Remover empresa">\r\n                                <a style="cursor: pointer;" class="text-danger" (click)="removeCompany(item)">\r\n                                    <i class="fa fa-trash fa-2x"></i>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                                                                        \r\n            </div>\r\n        </div>\r\n\r\n        <div class="col-sm-12" [class.btn-action-container]="booActive">                                \r\n            <button [disabled]="action_active ? false : !modelForm.form.valid" md-raised-button color="primary"\r\n            class="btn-w-md no-margin-left btn-right" (click)="save()">{{str_action}}</button>                            \r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n'},1525:function(n,e){n.exports='\r\n<div class="box-body">\r\n    \x3c!-- LIST --\x3e\r\n    <div class="row">\r\n            <div class="col-md-6">\r\n                <div class="input-group mb-2 mr-sm-2 mb-sm-0">                                    \r\n                    <input type="text" class="form-control" id="inlineFormInputGroup" placeholder="Buscar"\r\n                    [(ngModel)]="search" (keydown)="enter($event)">\r\n                    <div style="width: 34px" class="input-group-addon">\r\n                        <a style="cursor:pointer" (click)="getAll()"><i class="fa fa-search"></i></a> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="col-md-6" *ngIf="!noaction">\r\n                <button md-raised-button (click)="NEW()" color="primary" class="btn-w-md no-margin-left btn-right">Nuevo</button>                                                        \r\n            </div>  \r\n        \r\n        <div class="col-sm-12">\r\n            \r\n            <div class="box box-default table-box table-responsive mdl-shadow--2dp">\r\n                \r\n                <table class="mdl-data-table table-bordered table-striped cf no-margin">\r\n                <thead>\r\n                    <tr>\r\n                        <th (click)="sort(\'u.id\')">ID\r\n                            <span class="glyphicon sort-icon" *ngIf="key ==\'u.id\'" [ngClass]="{\'glyphicon-chevron-up\':reverse,\'glyphicon-chevron-down\':!reverse}"></span>\r\n                        </th>\r\n                        <th (click)="sort(\'username\')">Nombre de Usuario\r\n                            <span class="glyphicon sort-icon" *ngIf="key ==\'username\'" [ngClass]="{\'glyphicon-chevron-up\':reverse,\'glyphicon-chevron-down\':!reverse}"></span>\r\n                        </th>\r\n                        <th (click)="sort(\'firstname\')">Nombre\r\n                            <span class="glyphicon sort-icon" *ngIf="key ==\'firstname\'" [ngClass]="{\'glyphicon-chevron-up\':reverse,\'glyphicon-chevron-down\':!reverse}"></span>\r\n                        </th>\r\n                        <th (click)="sort(\'up_description\')">Perfil de Usuario\r\n                            <span class="glyphicon sort-icon" *ngIf="key ==\'up_description\'" [ngClass]="{\'glyphicon-chevron-up\':reverse,\'glyphicon-chevron-down\':!reverse}"></span>\r\n                        </th>\r\n                        <th (click)="sort(\'c.name\')">Empresa\r\n                            <span class="glyphicon sort-icon" *ngIf="key ==\'c.name\'" [ngClass]="{\'glyphicon-chevron-up\':reverse,\'glyphicon-chevron-down\':!reverse}"></span>\r\n                        </th>\r\n                        <th (click)="sort(\'last_access\')">Ultimo Acceso\r\n                            <span class="glyphicon sort-icon" *ngIf="key ==\'last_access\'" [ngClass]="{\'glyphicon-chevron-up\':reverse,\'glyphicon-chevron-down\':!reverse}"></span></th>     \r\n                        <th (click)="sort(\'u.status\')">Estado\r\n                            <span class="glyphicon sort-icon" *ngIf="key ==\'u.status\'" [ngClass]="{\'glyphicon-chevron-up\':reverse,\'glyphicon-chevron-down\':!reverse}"></span>\r\n                        </th>\r\n                        <th *ngIf="!noaction"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor="let item of list.data" (click)="view(item)">   \r\n                        <td>{{ item.id }}</td>                                                                       \r\n                        <td>{{ item.username }}</td>\r\n                        <td>{{ item.firstname + \' \' + item.lastname }}</td>  \r\n                        <td>{{ item.user_profile }}</td>    \r\n                        <td>{{ item.company }}</td>    \r\n                        <td>{{ item.last_access }}</td>                                    \r\n                        <td>{{ item.status ? \'Activo\' : \'Inactivo\' }}</td>\r\n                        <td class="text-center" *ngIf="!noaction">\r\n                            <a style="color:#0a6ebd;cursor: pointer;" (click)="view(item)">\r\n                                <i class="fa fa-pencil fa-2x"></i>\r\n                            </a>\r\n                        </td>\r\n                    </tr>                                          \r\n                </tbody>\r\n                </table>\r\n                \r\n            </div>\r\n\r\n            <ngb-pagination [pageSize]="pageSize" [collectionSize]="paginationSize" [(page)]="advancedPagination" [maxSize]="maxSize" [rotate]="true" [ellipses]="false" [boundaryLinks]="true" (pageChange)="getAll()"></ngb-pagination>\r\n            \r\n        </div>\r\n    </div>                  \r\n</div>\r\n'},1526:function(n,e){n.exports='<section class="chapter">\r\n    <section class="hero">\r\n        <div class="hero-content">\r\n            <h1 class="hero-title">Usuarios</h1>\r\n        </div>\r\n        <p class="hero-tagline">\r\n            A través de esta opción, usted podrá administrar los usuario que acceden al sistema y definir perfiles que permitan limitar\r\n            el uso de las vistas no autorizadas.\r\n        </p>\r\n    </section>\r\n    <article class="article padding-lg-v article-dark article-bordered">\r\n        <div class="container-fluid with-maxwidth">\r\n            <div class="box box-default">\r\n                \r\n                <user-action-cmp [numId]="id" *ngIf="isOpenActions"></user-action-cmp>\r\n                <user-list-cmp *ngIf="isOpenList"></user-list-cmp>\r\n\r\n            </div>\r\n        </div>\r\n    </article>\r\n</section>'}});
//# sourceMappingURL=1.3050bb6d0c0309a4367d.chunk.js.map