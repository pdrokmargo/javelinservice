webpackJsonp([7],{1414:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t.d(n,"DeliveryPointsModule",function(){return u});var r=t(5),o=t(2),i=t(31),s=t(26),a=t(276),c=t(591),l=t(1429),d=t(1451),p=t(1450),m=[{path:"",component:l.a}],u=function(){function DeliveryPointsModule(){}return DeliveryPointsModule=r.a([t.i(o.NgModule)({imports:[i.CommonModule,s.g.forChild(m),a.a,c.a.forRoot()],declarations:[l.a,d.a,p.a]})],DeliveryPointsModule)}()},1429:function(e,n,t){"use strict";t.d(n,"a",function(){return s});var r=t(5),o=t(2),i=t(592),s=function(e){function DeliveryPointsComponent(){return e.call(this)||this}return r.c(DeliveryPointsComponent,e),DeliveryPointsComponent.prototype.ngOnInit=function(){},DeliveryPointsComponent=r.a([t.i(o.Component)({selector:"delivery-points-cmp",template:t(1484),styles:[]}),r.b("design:paramtypes",[])],DeliveryPointsComponent)}(i.a)},1450:function(e,n,t){"use strict";t.d(n,"a",function(){return v});var r=t(5),o=t(2),i=t(34),s=(t.n(i),t(18)),a=t(26),c=t(72),l=t(20),d=t(1429),p=t(598),m=t(112),u=(t.n(m),t(597)),v=function(e){function DeliveryPointsActionComponent(n,t,r,i,s,a,c){var l=e.call(this)||this;return l.snackBar=n,l.route=t,l.router=r,l.loaderService=i,l.helperService=s,l.comp=a,l.dialog=c,l.arrDelivery_point_group=[],l.warehouse={},l.arrDelivery_contracts=[],l.select=new o.EventEmitter,l}return r.c(DeliveryPointsActionComponent,e),DeliveryPointsActionComponent.prototype.ngOnInit=function(){this.clean(),this.getCollection(),void 0!==this.numId&&this.getDataById()},DeliveryPointsActionComponent.prototype.getCollection=function(){var e=this;this.loaderService.display(!0),this.helperService.POST("/api/collections",["DELIVERY_POINTS_GROUPS"]).subscribe(function(n){var t=n.json();e.arrDelivery_point_group=t.DELIVERY_POINTS_GROUPS,e.loaderService.display(!1)},function(n){console.log(n),e.loaderService.display(!1)})},DeliveryPointsActionComponent.prototype.save=function(){var e=this;switch(this.loaderService.display(!0),this.strAction){case"Guardar":this.model.delivery_contracts="[]",this.helperService.POST("/api/delivery-points",this.model).subscribe(function(n){var t=n.json();t.store&&(e.snackBar.open(t.message,"Guardado",{duration:4e3}),e.comp.openList(),e.loaderService.display(!1))},function(n){e.snackBar.open(n.message,"Guardado",{duration:4e3}),e.loaderService.display(!1)});break;case"Actualizar":this.helperService.PUT("/api/delivery-points/"+this.numId,this.model).subscribe(function(n){var t=n.json();t.update&&(e.snackBar.open(t.message,"Actualización",{duration:4e3}),e.comp.openList())},function(n){e.snackBar.open(n.message,"Actualización",{duration:4e3}),e.loaderService.display(!1)});break;case"Eliminar":this.helperService.DELETE("/api/delivery-points/"+this.numId).subscribe(function(n){var t=n.json();t.delete&&(e.snackBar.open(t.message,"Eliminación",{duration:4e3}),e.comp.openList())},function(n){e.snackBar.open(n.message,"Eliminación",{duration:4e3}),e.loaderService.display(!1)})}},DeliveryPointsActionComponent.prototype.getDataById=function(){var e=this;this.loaderService.display(!0),this.helperService.GET("/api/delivery-points/"+this.numId).map(function(n){var t=n.json();e.model=t.data,e.arrDelivery_contracts=[],e.model.contract_point.forEach(function(n){n.config=JSON.parse(n.config),e.arrDelivery_contracts.push({id:n.delivery_contracts.id,name:n.delivery_contracts.name,event:n.config.event||!1,capita:n.config.capita||!1,pgp:n.config.pgp||!1})}),e.warehouse=e.model.warehouses,e.model.operation_cost_centre_id=1==e.model.root?"co-"+e.model.operation_cost_centre_id:"cc-"+e.model.operation_cost_centre_id}).subscribe(function(n){e.loaderService.display(!1)},function(n){e.loaderService.display(!1)})},DeliveryPointsActionComponent.prototype.clean=function(){this.model={},this.model.state=!0},DeliveryPointsActionComponent.prototype.goList=function(){this.comp.openList()},DeliveryPointsActionComponent.prototype.openModalWarehouse=function(){var e=this;this.modalWarehouse=this.dialog.open(p.a,{hasBackdrop:!1,data:{title:"Bodega"}}),this.modalWarehouse.afterClosed().pipe(t.i(m.filter)(function(e){return e})).subscribe(function(n){e.model.warehouse_id=n.id,e.warehouse=n})},DeliveryPointsActionComponent.prototype.openModalUsers=function(){var e=this;this.modalUsers=this.dialog.open(u.a,{hasBackdrop:!1,data:{title:"Usuarios",type:"regente"}}),this.modalUsers.afterClosed().pipe(t.i(m.filter)(function(e){return e})).subscribe(function(n){e.model.assigned_users||(e.model.assigned_users=[]),e.model.assigned_users.push(n),e.model.users||(e.model.users=[]),e.model.users.push({user_id:n.id})})},r.a([t.i(o.Output)(),r.b("design:type",Object)],DeliveryPointsActionComponent.prototype,"select",void 0),DeliveryPointsActionComponent=r.a([t.i(o.Component)({selector:"delivery-points-action-cmp",template:t(1482)}),r.b("design:paramtypes",[s.c,a.b,a.a,l.a,l.b,d.a,s.d])],DeliveryPointsActionComponent)}(c.a)},1451:function(e,n,t){"use strict";t.d(n,"a",function(){return d});var r=t(5),o=t(2),i=t(34),s=(t.n(i),t(26)),a=t(71),c=t(20),l=t(1429),d=function(e){function DeliveryPointsListComponent(n,t,r,i){var s=e.call(this,t,r)||this;return s.router=n,s.loaderService=t,s.helperService=r,s.comp=i,s.select=new o.EventEmitter,s.urlApi="/api/delivery-points",s}return r.c(DeliveryPointsListComponent,e),DeliveryPointsListComponent.prototype.ngOnInit=function(){this.getAll()},DeliveryPointsListComponent.prototype.CUD=function(e,n){switch(this.comp.strAction=e,e){case"Guardar":this.comp.id=void 0;break;default:this.comp.id=n.id}this.comp.openActions()},r.a([t.i(o.Output)(),r.b("design:type",Object)],DeliveryPointsListComponent.prototype,"select",void 0),DeliveryPointsListComponent=r.a([t.i(o.Component)({selector:"delivery-points-list-cmp",template:t(1483)}),r.b("design:paramtypes",[s.a,c.a,c.b,l.a])],DeliveryPointsListComponent)}(a.a)},1482:function(e,n){e.exports='<form #modelForm="ngForm" autocomplete="off">\r\n    <div class="col-sm-12">\r\n        <div class="row">\r\n            <div class="col-sm-12 margin-bottom" [class.btn-action-container]="booActive">\r\n                <button type="button" md-raised-button color="primary" (click)="goList()" class="btn-w-md no-margin-left">\r\n                    <md-icon>keyboard_arrow_left</md-icon> Regresar\r\n                </button>\r\n            </div>\r\n            \x3c!-- name --\x3e\r\n            <div class=\'col-sm-12 col-md-6 margin-bottom\'>\r\n                <md-input-container class="full-width">\r\n                    <input required type="text" id="name" name="name" [(ngModel)]="model.name" mdInput placeholder="Nombre">\r\n                </md-input-container>\r\n            </div>\r\n            \x3c!-- instalado --\x3e\r\n            <div class=\'col-sm-12 col-md-6 col-lg-3 margin-bottom\'>\r\n                <div class="flex">\r\n                    <span class="flex-spacer"></span>\r\n                    <md-slide-toggle [labelPosition]="\'before\'" id="installed" name="installed" [(ngModel)]="model.installed">Instalado</md-slide-toggle>\r\n                </div>\r\n\r\n            </div>\r\n            \x3c!-- estado --\x3e\r\n            <div class=\'col-sm-12 col-md-6 col-lg-3 margin-bottom\'>\r\n                <div class="flex">\r\n                    <span class="flex-spacer"></span>\r\n                    <md-slide-toggle [labelPosition]="\'before\'" id="state" name="state" [(ngModel)]="model.state">Estado</md-slide-toggle>\r\n                </div>\r\n            </div>\r\n            \x3c!-- bodega --\x3e\r\n            <div class="col-sm-12 col-md-6 margin-bottom">\r\n                <md-input-container class="full-width">\r\n                    <input readonly mdInput type="text" placeholder="Bodega" [(ngModel)]="warehouse.name" id="warehouse" name="warehouse" />\r\n                    <md-icon mdSuffix class="wh-24 pointer" (click)="openModalWarehouse()">search</md-icon>\r\n                </md-input-container>\r\n            </div>\r\n            \x3c!-- grupo de punto de dispensacion --\x3e\r\n            <div class="col-sm-12 col-md-6 margin-bottom">\r\n                <md-select class="full-width" placeholder="Grupos de puntos de dispensación" [(ngModel)]="model.delivery_point_group_id"\r\n                    name="delivery_point_group_id" id="delivery_point_group_id">\r\n                    <md-option *ngFor="let item of arrDelivery_point_group" [value]="item.id">{{item.value}}</md-option>\r\n                </md-select>\r\n            </div>\r\n            \x3c!--contratos--\x3e\r\n            <div class="col-sm-12 col-md-6 margin-bottom">\r\n                <div class="row">\r\n                    <div class="col-sm-12">\r\n                        <div class="flex" style="height: 51px;">\r\n                            <div class="box-header no-padding-h">Contratos</div>\r\n                        </div>\r\n                        <div class="box box-default table-box table-responsive mdl-shadow--2dp">\r\n                            <table class="mdl-data-table table-bordered table-striped no-margin">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Nombre</th>\r\n                                        <th>Evento</th>\r\n                                        <th>Cápita</th>\r\n                                        <th>PGP</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor="let item of arrDelivery_contracts">\r\n                                        <td>{{item.name}}</td>\r\n                                        <td class="text-center">\r\n                                            <md-icon>{{item.event ? \'check_circle\' : \'\'}}</md-icon>\r\n                                        </td>\r\n                                        <td class="text-center">\r\n                                            <md-icon>{{item.capita ? \'check_circle\' : \'\'}}</md-icon>\r\n                                        </td>\r\n                                        <td class="text-center">\r\n                                            <md-icon>{{item.pgp ? \'check_circle\' : \'\'}}</md-icon>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \x3c!--Usuario de regente--\x3e\r\n            <div class="col-sm-12 col-md-6 margin-bottom">\r\n                <div class="row">\r\n                    <div class="col-sm-12">\r\n                        <div class="flex" style="margin-bottom: 10px;">\r\n                            <div class="box-header no-padding-h">Usuario de regente</div>\r\n                            <span class="flex-spacer"></span>\r\n                            <button type="button" md-raised-button color="primary" class="btn-w-md no-margin-left" (click)="openModalUsers()">Añadir</button>\r\n                        </div>\r\n                        <div class="box box-default table-box table-responsive mdl-shadow--2dp">\r\n                            <table class="mdl-data-table table-bordered table-striped no-margin">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Nombre</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor="let item of model.assigned_users">\r\n                                        <td>{{item.firstname}} {{item.lastname}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \x3c!--description--\x3e\r\n            <div class=\'col-sm-12 margin-bottom\'>\r\n                <md-input-container class="full-width">\r\n                    <textarea type="text" id="description" name="description" [(ngModel)]="model.description" mdInput placeholder="Descripción"></textarea>\r\n                </md-input-container>\r\n            </div>\r\n            <div class="col-sm-12" [class.btn-action-container]="booActive">\r\n                <button type="button" [disabled]="!modelForm.form.valid" md-raised-button color="primary" class="btn-w-md no-margin-left btn-right"\r\n                    (click)="save()">{{strAction}}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>'},1483:function(e,n){e.exports='\x3c!-- LIST --\x3e\r\n<div class="row">\r\n    <div class="col-md-6">\r\n        <div class="input-group mb-2 mr-sm-2 mb-sm-0">\r\n            <input type="text" class="form-control" id="inlineFormInputGroup" placeholder="Buscar" [(ngModel)]="search" (keydown)="enter($event)">\r\n            <div style="width: 34px" class="input-group-addon">\r\n                <a style="cursor:pointer" (click)="getAll()">\r\n                    <i class="fa fa-search"></i>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="col-md-6">\r\n        <button type="button" md-raised-button (click)="CUD(\'Guardar\')" color="primary" class="btn-w-md no-margin-left btn-right">\r\n            <md-icon>add_circle_outline</md-icon> Nuevo\r\n        </button>\r\n    </div>\r\n\r\n    <div class="col-sm-12">\r\n\r\n        <div class="box box-default table-box table-responsive mdl-shadow--2dp">\r\n\r\n            <table class="mdl-data-table table-bordered table-striped cf no-margin">\r\n                <thead>\r\n                    <tr>\r\n                        <th class="noAuto" (click)="sort(\'id\')">ID\r\n                            <span class="glyphicon sort-icon" *ngIf="key ==\'id\'" [ngClass]="{\'glyphicon-chevron-up\':reverse,\'glyphicon-chevron-down\':!reverse}"></span>\r\n                        </th>\r\n                        <th (click)="sort(\'name\')">Nombre\r\n                            <span class="glyphicon sort-icon" *ngIf="key ==\'name\'" [ngClass]="{\'glyphicon-chevron-up\':reverse,\'glyphicon-chevron-down\':!reverse}"></span>\r\n                        </th>\r\n                        <th (click)="sort(\'delivery_contract_id\')">Grupo\r\n                            <span class="glyphicon sort-icon" *ngIf="key ==\'delivery_contract_id\'" [ngClass]="{\'glyphicon-chevron-up\':reverse,\'glyphicon-chevron-down\':!reverse}"></span>\r\n                        </th>\r\n                        <th (click)="sort(\'ct.state\')">Estado\r\n                            <span class="glyphicon sort-icon" *ngIf="key ==\'ct.state\'" [ngClass]="{\'glyphicon-chevron-up\':reverse,\'glyphicon-chevron-down\':!reverse}"></span>\r\n                        </th>\r\n                        <th class="w-40"></th>\r\n                        <th class="w-40"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf="list.data">\r\n                    <tr *ngFor="let item of list.data; let index = index" (click)="view(item); numItemSelected = index" [ngClass]="{\'active\': numItemSelected == index }">\r\n                        <td class="noAuto">{{ item.id }}</td>\r\n                        <td>{{ item.name }}</td>\r\n                        <td>{{ item.delivery_points_groups.value }}</td>\r\n                        <td>{{ item.state ? \'Activo\' : \'Inactiva\' }}</td>\r\n                        <td class="w-40">\r\n                            <button type="button" md-icon-button class="text-primary" (click)="CUD(\'Actualizar\', item)">\r\n                                <md-icon>mode_edit</md-icon>\r\n                            </button>\r\n                        </td>\r\n                        <td class="w-40">\r\n                            <button type="button" md-icon-button class="text-danger" (click)="CUD(\'Eliminar\', item)">\r\n                                <md-icon>delete</md-icon>\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n\r\n        <ngb-pagination [pageSize]="pageSize" [collectionSize]="paginationSize" [(page)]="advancedPagination" [maxSize]="maxSize"\r\n            [rotate]="true" [ellipses]="false" [boundaryLinks]="true" (pageChange)="getAll()"></ngb-pagination>\r\n\r\n    </div>\r\n</div>'},1484:function(e,n){e.exports='<section class="chapter">\r\n    <section class="hero">\r\n        <div class="hero-content">\r\n            <h1 class="hero-title">Puntos de dispensación</h1>\r\n        </div>\r\n        <p class="hero-tagline"></p>\r\n    </section>\r\n    <article class="article padding-lg-v article-dark article-bordered">\r\n        <div class="container-fluid with-maxwidth">\r\n            <div class="box box-default">\r\n                <div class="box-body">\r\n                    <delivery-points-action-cmp *ngIf="isOpenActions" [numId]="id" [strAction]="strAction"></delivery-points-action-cmp>\r\n                    <delivery-points-list-cmp *ngIf="isOpenList"></delivery-points-list-cmp>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </article>\r\n</section>'}});
//# sourceMappingURL=7.758288d23eccffe96c45.chunk.js.map